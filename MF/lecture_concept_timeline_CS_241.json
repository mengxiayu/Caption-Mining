{
  "topic 1": {
    "keywords": [
      "mutex lock",
      "peter mutex",
      "race condition"
    ],
    "mentions": {
      "lecture 13-Q01": [
        "0 minute",
        "6 minute"
      ],
      "lecture 13-Q06": [
        "1 minute",
        "6 minute",
        "7 minute"
      ],
      "lecture 13-Q07": [
        "8 minute",
        "10 minute"
      ],
      "lecture 13-Q09": [
        "0 minute",
        "9 minute",
        "10 minute",
        "11 minute"
      ],
      "lecture 14-Q02": [
        "2 minute",
        "3 minute",
        "4 minute"
      ],
      "lecture 14-Q05": [
        "0 minute"
      ],
      "lecture 14-Q06": [
        "1 minute",
        "2 minute"
      ],
      "lecture 14-Q07": [
        "3 minute"
      ],
      "lecture 14-Q08": [
        "0 minute"
      ],
      "lecture 15-Q03": [
        "2 minute"
      ],
      "lecture 15-Q04": [
        "1 minute",
        "3 minute"
      ],
      "lecture 15-Q05": [
        "0 minute",
        "1 minute",
        "3 minute"
      ],
      "lecture 15-Q06": [
        "0 minute",
        "1 minute",
        "2 minute",
        "3 minute",
        "4 minute",
        "5 minute"
      ],
      "lecture 16-Q01": [
        "1 minute",
        "2 minute",
        "4 minute",
        "6 minute"
      ],
      "lecture 17-Q01": [
        "5 minute"
      ],
      "lecture 17-Q02": [
        "6 minute",
        "9 minute"
      ],
      "lecture 17-Q06": [
        "5 minute",
        "6 minute"
      ],
      "lecture 18-Q01": [
        "2 minute"
      ],
      "lecture 18-Q03": [
        "0 minute"
      ],
      "lecture 18-Q04": [
        "3 minute"
      ],
      "lecture 18-Q05": [
        "1 minute",
        "6 minute"
      ],
      "lecture 18-Q06": [
        "0 minute",
        "1 minute",
        "3 minute",
        "5 minute"
      ],
      "lecture 18-Q08": [
        "0 minute",
        "2 minute",
        "8 minute",
        "9 minute",
        "11 minute"
      ],
      "lecture 19-Q01": [
        "6 minute",
        "8 minute",
        "9 minute",
        "11 minute",
        "12 minute"
      ],
      "lecture 19-Q03": [
        "1 minute",
        "5 minute"
      ],
      "lecture 19-Q08": [
        "4 minute",
        "8 minute"
      ],
      "lecture 20-Q03": [
        "0 minute"
      ],
      "lecture 20-Q06": [
        "1 minute"
      ],
      "lecture 20-Q07": [
        "0 minute",
        "1 minute",
        "5 minute"
      ],
      "lecture 21-Q01": [
        "2 minute"
      ],
      "lecture 22-Q07": [
        "1 minute",
        "4 minute"
      ],
      "lecture 24-Q02": [
        "1 minute",
        "3 minute",
        "4 minute",
        "6 minute",
        "7 minute"
      ],
      "lecture 32-Q03": [
        "10 minute"
      ],
      "lecture 35-Q07": [
        "5 minute"
      ],
      "lecture 39-Q04": [
        "0 minute",
        "7 minute"
      ]
    },
    "captions": {
      "lecture 13-Q01": [
        "hello ok welcome . welcome to lecture thirteen . so in this lecture , be go to start talk about thread safety and in particular , be go to start look at how , can use mutex lock to ensure that only one thread of the time alter , datum structure . or if , be modify a data structure another thread can not read , . ok so let , get start . let , there be a little warm up have a look at some multithreaded code that , have write to download two thing at the same time so this be what , get so far here be , main method , be go to use two p thread today so , can see , have get two thread i ds and when i call pizza hut create , be go to pass in the address of , two little variable there and i be say ok p thread please create a thread for , and i want to start with , download function that , be go to pass in a string so , first new thread be go to be give this string and , second youth thread thread be go to get to this this",
        "in other word , be go to see two malloc course operate on the two different threat and the great news be that , lock will see those two thread and will definitely give each one , own memory malloc be what be call thread safe and how do , do that with something , be go to talk about today call mutex lock , actually , could do , with other way but mutex lock would work if , implement malloc for a real programmer be multithreade , two would need mutex logs or somebody equivalent mechanism some other equivalent synchronization mechanism to ensure that even if malloc be quote exactly the same time the same nanosecond the same clock cycle that ultimately , become one malloc request and another malloc request that end up with two different piece of memory secondly ok the result come back , look like , be store inside the same map inside the same variable but remember this be actually a"
      ],
      "lecture 13-Q06": [
        "mutex iniciat and pass in a lock and one of the great thing about pizza , be implementation of mutex lock be that , can actually pass in a few attribute like , can set , up to debug , can actually create recursive lock but , be go to anyway , be go to stick with this vanilla log today again this be kind of one of the example where where the posix implementation the positive definition of mutex logs go a little bit far than what the new c standard do ok so i want to initialize , lock and , be not go to pass in any special attribute today right so that be one way of do , another way be to use a special constant so , be possible to say let , make static variable here do a key right so i just want to clear that , be not , be not actually on the on the stack , still some global variable here",
        ", have to wait , be call preferred mutex lock be block so right so , know for sure that this coal here either continue if no one else have the log right now and if , continue then , have acquire that look , get to play ball right the rock be yours otherwise , have to wait and at this point , may block mean , poor cpu be not allow to pass go and not allow to execute a single more instruction of , code , be stick inside here wait so great now what happen if , have get ten thread or pile together all call petere mutex log at exactly the same nanosecond what this mutex log guarantee be be that one of , will win",
        "continue the other nine or however many , be day or block , have to wait at some point in the future , release the lock , , be no long , and out of those nine thread that be call mutex look one of , be go to win the other will remain block ok so , guarantee , that there be only one thread at a time that can acquire the lock so only zero thread be one third of the time now the piece that mutex lock do not do anything special other than that , do not bless , code in the middle , do not declare to the compiler that something wonderful be about to happen no , be basic pricing mechanism be very simple , either block or allow , to continue if no one else have acquire that look and only one thread"
      ],
      "lecture 13-Q07": [
        "a version three right well now , be go to only acquire , doc for a very short period of time ok so now , be go to rap each call navigate to before i change the counter , be go to acquire , mutex lock so now right , will k von function three so for a million time , acquire the lock , have want to counter and then , unlock the duck ok so let , compile this run , ok , give , a correct answer and will always give , a correct answer but be now actually a little bit slow do , know why well in this contrived example add one to a variable be an extremely fast operation compare to a typical",
        ", have get two thread two cpus actually try to read a right to the same piece piece of memory what if that value be cache or the good news actually be deplete mutex lock take care of that as well for , that if this cpu support some caching mechanism peter mutex lock will ensure that that value be flush out to main memory if any other cpu want to read these magnet so technically , be call memory fence what memory barrier , be not go to write code that do not explicitly instead , be just kind of allow the factor period mutex lock make , world say again make , program be equal to all the process be , have actually run at least that be what , appear to be like"
      ],
      "lecture 13-Q09": [
        "hi so let , have a look at some race condition and , will check to see if , can actually make these race condition occur and then maybe , can figure out how to use , mutex lock to fix , right so here be a story so far , have get , little main method do not do much , create irwan thread here for under one and another thread for two ok then , run for five second then , set a global flag code please stop ok and then inside , main method i just wait for both to finish before return so that be , main method nothing to , there be go to have a look at these two little runner thread here ok so here , go first of all let , look at run a one do not do much , be get , own little account while this variable please stop be still zero , cause a helpful function here call two text message look like , be go to spam angry with a lot of message",
        "to say ok , can not come in right now and where should i put that well , identify the critical section so the start an entity point of those point be go to be where , want to lock the dark and unlock the duck literally like a gatekeeper so , want to say peer mutex lock here be , duck ok and ok so and then after that unlock , wait and similarly with the other thread runner , want to lock , and then only allow other thread to modify that memory after , finish use , so after printf have return ok so let , give that a whirl if , got to type sweat queso will clear this compile , all right , have get ok , need , not include p thread yet yes , have k what about do incompatible into pointer conversion",
        "ok so let , give that a whirl anne now will see that , have get to change , type too the address of a duck ok ok right so now , want after two second , start create dinosaur message but , can see , no long impact , text message so great , have write , first program use a mutex lock , use , after , identify the critical section and when , implement , correctly , can ensure that there be no more race condition in , code alright one last question for , what do , think would happen if i say ,",
        "code now , have get , two runner switch have to potentially wait for each other as a contention for this lock that if i want to call two text message over here and two text message over there then one of , will have to wait until the dot get unlocked again so , be go to speed up , code by by have say a duck and let , have another mutex i will call this one a banana ok right and now when i want to , dinah 's little text message to be create , be go to use this other mutex lock ok so what do , think about that before , get up to see like two hundred thousand message so let , run this now and oh"
      ],
      "lecture 14-Q02": [
        "so think of lock as , two year old saying i want the duck that can only happen when the thread that currently have the duck call unlock so that , be here so if i be to sketch this out with time so let , do time grant right , have get one little thread here here be , first thread right , be like thread one ok come along call lock here ok no one else have currently have acquire the duck so , get to continue straight away key meanwhile on another cpu another thread be run and , call lock on the same mutex lock ok can , carry on and execute , next piece of code no there",
        "in practice the kernel can say oh i can see , , be stick right now , be short order cook can not device because there be no voice yet so , be actually go to sign the physical cpu to do something else , have get another thread that would love to get start love to get do some work right now so let , tell , , be go to do something else but from this thread perspective nothing be go to happen , do not pass go do not execute the next line of code until the day that , thread one have finish do what , be do inside those critical section and now cause unlog on this mutex so , release the mutex let , that duck fly away back to the pond ok great at that moment thread two can wake up and in do so , acquire that mutex , be go to grab , and say ha , be , now and , can continue and eventually someday , will release that mutex lock as well hold on a moment suppose with the thread that also try to lock so say somewhere inside here , call",
        "wait for that duck ok so what be go to happen the moment that thread one call unlock the answer be one of , be go to win and only one of , be go to win so in this case that two be one thread three , be afraid be go to continue to be asleep until the day that , be able to acquire and lock that new text , so that be why , can ensure that uh , satisfy all critical section constraint that there be no way to continue unless , grab that duck unless , have acquire the mutex right so i think , have answer nearly all of these question what about this one why be , that peter mutex lock do not block ok this one should be easy for , to answer , have already"
      ],
      "lecture 14-Q05": [
        "ok hi right so let , think about lock contention and also how this also relate to discover race condition ok so here be the scenario that , be go to think about that , have get a thread that most of the time be not inside the critical section and in fact if , sketch this out , will see that initially i just get one single thread and only for a short period of time just one millisecond , be actually do something inside a critical section that , have not yet protect with any mutex lock but for the other nine hundred and ninety nine millisecond be do something else so this thing run for one second and then , be some random type there be one second ok some random sign inside that just for one day second , go and visit a critical section may be update or read a particular data structure ok so now that be fine but now , have two thread so here be another fit that also be go to run for the same second"
      ],
      "lecture 14-Q06": [
        "check out , code what do , do well each thread be go to call , folk each thread have , own stack and , own value of i so if , wish , could kind of paint a little picture to say here be one stack and here be another white change color exciting so so , have get inside here and i inside there ok for stack waterstock to thread warning fit two right what do , do when , initialize , to zero , go round like a million time as a million and each time around , increment the counter but hold on inside this loop let , imagine that , first thread start first and get to get a list line first ok so what be , do , acquire the mutex lock be the first mutex be the first thread to do so so great",
        "next on this very same thread well let , imagine for a moment that thread two be start up ok so thread two get , own value of , and very soon , will get to the same peter mutex lock all right so what do , do , go to grab the duck but the duck have be take the mutex lock have already be acquire so , will be block right so thread too because , be the second thread to try to acquire the lock will be block all right and , look like , be go to be wait forever because thread one be never go to release that in fact , get bad than that because what destroy one do well , carry on so , increment the global counter and then"
      ],
      "lecture 14-Q07": [
        "unsafe there , go right so , be not safe to be call by multiple threat at the same time right so how do , fix this well one option of course be to use these other version to underscore art another be to use lock so for example , could use , mutex lock to lock a mutex at the beginning and unlock , at the end so if , want to make sure that i know of thread could also effort therefore flush at the same time to , file then i would unlock afterwards so that would be one way to look at the beginning unlock one thing , 'd be concern about though be that though i be sure to capture error"
      ],
      "lecture 14-Q08": [
        "ok let , talk about count salmon fall so kind semaphore be cool so here be what , can do so let , let , compare , a little bit with mutex lock mutex lock , be design for very fast locking and unlock right and the key thing about mutex lock be that the lock and the unlock occur in pair and , have to be perform by the same threat right so , can not create another thread or call that unlocked for different thread note , must do , from the thread that cord lock so , be perfect for the beginning and end of critical section but but that be all , can do and sometimes , want more flexibility and for that hard count summerfield semaphore to , rescue so how do accounting before work accounting semaphore behave a lot more like a pizza box so let"
      ],
      "lecture 15-Q03": [
        "idea be that , only hold mutex lock for a few nanosecond , be modify something for example ok so reminder this code actually do three thing first of all , unlock the mutex and then , sleep literally , ask the cpu to go and work on a different thread right so , be not go to execute anymore code but later when , work , up before return , will re lock which mutex so , will reacquire the mutex so if there happen to be another thread that be temporarily hold that mutex say be also be also college document or those will see in a moment also call equipment then this thread have to wait so there be lot of place where thread be block port have to wait till , can continue ok right so what about , increment method , see that before , change the"
      ],
      "lecture 15-Q04": [
        "end otherwise two thread may call this code at the same time and both right into the same slot the same entry inside the away so less use mutex lock for that so , be definitely go to need mutex lock soapy say mutex lock and as luck would have , , have already get , variable up here ready to go right so let , call peter mutex lock on , mutex there , go so that may block for a short while if someone else be currently acquire the lock which be why a later on , be go to release , ok so thank , very much luck , be do with , anybody else that be wait can now continue right so great so now , have get code which where only one third of the time can push thing what about if , array be full of what if i stack be full so remember step",
        "that , be in the matrix log so , could reason that , be the only thread that continue to run so great , have get all these other thread run at the same time but , head do not need to explode thinking about the possible interleaving of all of these expression from this thread and another third because , own the mutex lock right and anybody else have to wait until , finish so , simplify reason about this back down to just simple single thread code again alright so great , have get , push method to work ok let , go back to , kind of blueish color right so if anything else , need to do yeah well , be write a method which both to push and pop can can block so if i just put something onto this onto , way , could"
      ],
      "lecture 15-Q05": [
        "hi ok so i get a little bit of a challenge for , here let , go back in time and say well how would , actually implement a valid mutex lock remember these thing be critical to implement , critical section where , can only have one thread manipulate datum structure or some resource at the time ok so what do , think about the following attempt right so this suppose , be try to actually implement the mutex lock , here be , idea do not tell anybody but actually be mutex be actually just a simple integer pointer ok and so initialize , be easy will just set , to zero and then for , lock method here be what , be go to do , be go to check to see if the current value of , integer so , be go to do reference that pointer be equal to one if , be then just sleep for a short period so",
        "great but i do not need , for short period type please give , to another needy thread and let , run again in a few millisecond time so , will keep just keep check this and the only purpose of the p thread yield be the idea that there be no point just check this in a very very tight loop that would burn a lot of cpu time more unnecessary energy so slow , down right so that be , lock first of all wait until , value be zero and then change , ok right so think about that while , also think about what should i do for unlock well unlocking be easy , be the only thread which actually have acquire mutex lock so , be go to just reset , back to zero there be no need to wait for any other thread",
        "to get in there change check , and change the value as one operation so this implementation that , have written be not adequate how , be go to fix , easy use mutex look wait can not do that , be actually try to implement a mutex lock ok so how can , fix this alright so here be here be kind of two way let , let , let , let , write one of , in here so yeah ok so ok yeah , will do , here ok so here be another way be ok be that if , be run on a very simple system , have just a single cpu then , could"
      ],
      "lecture 15-Q06": [
        "hi ok right so let , have another go implement a mutex lock but this time , have get a useful little x cpu instruction call exchange and here be what , be define to do , be go to swap two value at two address as an atomic operation music sell uranium power or thorium power know what do , mean by atomic be , be an indivisible uninterruptible operation that be what , appear to be like that be how , behave so rather than write assembly code will imagine that , have get a function here codex exchange that behave as if , be some assembly code ok so let , mock out this code here be how , be go to write , then so right so as usual , initial function be just go",
        "now what , be go to do be for , mutex lock i get a little loop here where i have a loop variable call q ok and , be initialize this magic one so i imagine i want to imagine that be like the hot potato if , like , will see why in a moment because , be go to call this exchange assembly instruction there all these people pretend that this be ok and , will say here be the address of q here be the address of upside i need that scroll set up do do do do do do do k right , go waste be this right here be right on lose there , go i look as n",
        "so why do , do that so let , think about what , be do , have get this hot potato that , want to put into mutex which do not tell anybody but , be go to just treat as an integer and then , be go to keep go around this loop when , read the value of one so when the first thread call mutex lock here be what be go to happen , be go to swap , value of one here with a value of zero so over here here be , mutex lock , be now get one in but the value that q , now have be zero so , escape out of this loop and can continue so that first , can go into , critical section meanwhile as second",
        ", own value of q be one and then , call exchange right but , be just go to exchange a value of one with one because that be what be already inside the mutex log so now , read a value of what again so what be , do , go around the loop again continuously try to get rid of this hot potato right so , be like , have get a one oh what do i do , be go to keep call exchange , be go to keep try to push , into the mutex lock ok so , have only get to escape out of that loop when filing be able to get back a value of zero so where do that happen after the first read have finish with this critical section and write back a value of zero ok so there , get so with this implementation then thank , hardware people be now able to ensure",
        "do this within ten thousand nanosecond in fact rather than just directly call atomic operation today period mutex lock actually do a lot more than this , use a kernel resource call a spinlock and also , have to ensure that , eddie information inside , cache be correctly push back out to main memory so if the actual implementation of preferred mutex lock be a little bit more complicated than this , include memory barrier and performance characteristic but i hope , see how ultimately , need hardware support to ensure that , preferred mutex lock be atomic right and , will last thing will will mention today for this today 's lecture video be the idea that what , be actually",
        "and , want to find way to ensure the only one thread enter the critical section at a time so this be actually a classic operating system problem because critical section occur all over the place inside the kernel because there be so much concurrency go on and can , kind of find a way to write code to ensure that only one thread or process or algorithm can actually manipulate one resource two resource at a time ok so this be kind of the last similar sorry this be a future thing , be go to look at in a different lecture be how can , implement or how can , solve this critical section problem which , have today , solve use mutex lock but how can , solve this in a kind of algorithmic fashion"
      ],
      "lecture 16-Q01": [
        "must be true that there be something in , data structure and because , be hold the mutex lock , be go to make sure that no one else can actually modify , so between test , and use , , know that be value can not be change because , be hold the mutex lock and so what do , do , take something out of the datum structure and then will print this thread manage to eat this and in fact this code be go to be run by multiple threat ok , be go to have two thread try to eat cookie at the same time ok but will protect , datum structure by the use of this peter mutex lock ok , need to weigh to add thing to a data structure and so here be , little add cookie notice that , have get i protect , change the datum structure use use the lock and after modify the data structure , be also go to broadcast so anybody any thread",
        "wait i promise , that , have multiple multiple thread so here , be , have get two thread which be go to be cookie eater and one could be all angry even one could be agent smith ok and then , will just use scan f to see how many cookie should be add to the jar so each time that i successfully read one integer so scan app please read into , interview here then , will add a cookie so if , type nine or control d then , be go to stop ok how should , stop what do , think about the follow so , will first of all call peter mutex lock and , do that to ensure that actually there be something special about peter text lock which be not only do",
        "call broadcast so angry work up and , eat so now there be four cookie leave and then agent smith be also work up so smith , be another cookie and then , can have both go round as fast as possible try to acquire that mutex lock so in this case , both manage to , eat some cookie but now , notice one at a time that that there be no cookie leave so , call pizza hut condition condition wait , release a mutex lock and so the other thread acquire mutex lock and also notice be , so let , just add some more cookie here this time look like angry , have manage to eat quite a few cookie ok this time look at this smith wake up and munch down on those cookie there right so ok , have four cookie and interesting word from three to one what happen to to there ok",
        ", end up print out a value of zero and this confusing logic be all because , let go the mutex lock early , let go of , before , use to value of jar so if i be to make this less confusing i would actually have to say how temper variable here be a current jaw and then print that out afterwards and the reason that i do , this way well then put the print f inside the mutex lock be simply so that simply for performance that i do not want to hold the mutex lock whilst , be print something out because that be potentially along time and all of , cookie to be eat as fast as possible ok right so let , now let , try and quit , program here so ok so"
      ],
      "lecture 17-Q01": [
        "ok what about if , set , initial value to thirty two well now , have a problem because , be not stop the length of train from exceed the size of , ring buffer so , can imagine a be able to go round and actually overwrite entry which , actually still need so later when i come to remove value yes i still build remove value but actually now , be remove recently add value i can no long access the old value so thirty two will not work this actually large than the size of , ring buffer ok right so can , tell , what be miss from this code and when would , matter right hopefully be hopefully , remember that last time , do this code , put some mutex lock in so what be the purpose of the mutex lock yes so there"
      ],
      "lecture 17-Q02": [
        "actually locks plus i ok so this be kind of sketch out what , be go to do will look at some real code in the moment and simply down here before i modify this ok i actually want to make sure that i will require the right lock so , be go to be for here call please i want to lock the white mutex lock that be go to be lock plus index and then a correspond unlock call down here right all , do new , have forget a few thing first of all if i be write this code i would certainly use assert to check that , index be between zero and less than n otherwise , be go to be look at an illegal or invalid piece of memory when i do this i have put in a certain at that point",
        "have a look at some code ok and here be , code , will see that , be actually litter with a few extra thing that now i actually get another thread that be actually go to be display what be go on and , can see whether particular i thread have manage to lock mutex lock so if , get dark inside this moment here , will be stick on lock if , be about to go into peter condition wait , will see that , will see nap here ok so if the value be less than two , be go to nap the other thing , may notice be that , have now update the code so that if , quick variable have be set then i will also immediately break out of here ok so here be , take two item and then i also grab the"
      ],
      "lecture 17-Q06": [
        "mutex lock and so the next red inside here be able to acquire the mutex lock so , be call period new text log succeed and what be , do , immediately come out and unlock the mutex lock so then one after another all of , thread can finally escape so that be , barrier so , have implement this use open mutex lock just to kind of quick idea suppose last i have six thread come in so , counter now six and now i have two thread which immediately call barrier at the same time what would happen ok so again , have the mutex lock to the rescue that this will ensure that one of the thread will acquire the lock and the other one get block so there can only be one winner like two toddler fight over a toy eventually one of , say that the lock be mine , be hold , i have the duck and so that thread will",
        ", be go to sleep in sleep on the one thing here and so get out here right that would see a value of six which be implement to seven so , then , would go to sleep so now finally that release mutex lock and finally , last dead but the most important thread of all be able to acquire the metric lock then call broadcast and off , go and , release all the lock ok so that be , single use lock one challenge will be to figure out how can , generalize this into a multiple use barrier so how can , deal with the special problem of thread which may complete very quickly and recall the barrier method before the seven other thread have manage to escape so"
      ],
      "lecture 18-Q01": [
        "a good chance of , work right now let , explain why i have all those provisor so the first problem be that when a thread be run this code continuously check the value of count what be , do , just keep go keep on check so , be unnecessarily use cpu core to do that if another thread want to run then either , will be run on a a second cpu core or , will be automatically give the cpu after a millisecond of time or so but for the whole millisecond , be just waste cpu time whilst a first read just needlessly check the value of count so ideally , would want to give up the cpu at this point and sleep until the value of count change but i say , be only allow to use one mutex lock and one on local ok so at the very least i may put a p thread yield here"
      ],
      "lecture 18-Q03": [
        "ok right so , want to make a barrier out of the following and , be only go to make a single use barrier right so let , get start well each time thread call barrier , definitely want to reduce , count by one ok so let , let , do that now in order to make sure that , behave as an atomic operation , will first lock a mutex lock and so some point after that , will be unlock , as well now , want most of all thread to wait , want most of , to to call sam wait another word to go to sleep ok so that be the only way that , can actually stop , thread right now so before this , will need to initialize that variable and will initialize , to zero in other word do , know pizza slice ok so , have do that previous to call the barrier right so be leave well , have get this"
      ],
      "lecture 18-Q04": [
        "on the left hand side be go to get stick waiting to acquire the lock first so that have to complete first and that will complete either , will complete here after the second thread ask have go to sleep so there be no race condition , prevent the race condition ok so the big learning point here be that mutex lock be , friend , do lot of useful thing for , and actually what , do be , bring order to , madness , prevent unwanted interleaving of instruction , synchronize , instruction , bring , back down to run one thread of the time but wait , say i take this course in order to understand multithreade yes and multi thing be great however there be key point in , program where , do not want , where , want to make sure that , strictly control the ordering"
      ],
      "lecture 18-Q05": [
        "for for sure have so , have get , have get the mutex lock and all thread that run this code again to acquire the same lock and then , say well while firework be zero corporate recognition weight in other word if , firework thread start up here and , start up early then , be just go to block , for but , be go to ask , to release the mutex lock and lock inside here so go back to the kind of first code remember , create all of the thread initially back when be firework variable with zero , be only after , have create all five well , say ok now , be time for the firework ok so let , get down here ok right so what do , do after this point ok when , escape out of here where a scaping",
        "right inside there if that just that moment in time then what be go to happen , have actually call precondition signal but no thread be yet sleep no thread be yet block inside condition wait ok so be to fix for that and the answer be to actually log on the same mutex here so if i call pete say mutex lock here and then unlock afterwards i can be sure that that will can only occur either before another thread be acquire mutex or after the all the thread have call pizza hut or so at least at least a threat be currently get mutex will then call pre take additional weight"
      ],
      "lecture 18-Q06": [
        "ok so , need a definition for deadlock and this idea that , , thread be freeze up maybe one thread be wait for a mutex lock that be never go to be unlocked maybe , be wait for something from a data structure which be never go to be give to , so here be a general definition for dead log key text door work ok great make , that big right so dead log be when , be wait for an event that well ok can i type so i put in some in there ok will never happen ok so stop try to make , day to happen , be never go to happen stop try to make this thread exit , be never go to happen ok so , poor poor little fair door process be wait some for an event maybe , be go to signal that",
        "just never go to happen so , do not get to complete , do not get to kind of run , activity or run the code and of course debug deadlock be tricky , be often there as pair that i could a thread maybe , be stick inside p threat condition wait and , do not know why why that event do not have not have not fired have not occur ok so , have get this general definition of deadlock now actually let , see if , can kind of construct some example where , actually cause , so let , use team mutex lock and two thread to create an example of deadlock ok , be go to actually do this in a text editor ok let , go right do i have so if , have get thread one imagine , thread first red make the coda big right have call",
        "like most of the time no most of the time , thread be perfectly happy do what , need to do until the follow happen until one unfortunate day thread one have call preferred mutex lock on get this choose a new color call prefix lock on the first one case be complete that at the same time , other thread which be curiously call thread one so let , fix that thread two right have just acquire the lock on mutex too so now , be both able to do this but what happen",
        "be in the same order , would have be fine let , just kind of quickly sketch that out to see that let , imagine that i have , first thread do mutex wear and then mute x two and then mutex wanna mutex two down here for thread two then if , both try to acquire mutex in at the same time then , can imagine that thread one would acquire the mutex lock here which would mean thread two will be force to block so , do not get to go to step two which mean thread one can continue and then when , be finish , will release those lock so now thread two can finish so if , 'd actually write , code like this in the same order , would have be impossible to get deadlock"
      ],
      "lecture 18-Q08": [
        "ok so welcome to the reader writer game show here be the game , actually want to be able to have , reader run concurrently that when , be perform the read , should have million or billion of people free able to access that datum but when , actually want to do any writing when , actually change the datum structure maybe , be an entry inside a particular table maybe , be a file then at that moment only , get access to , ok so anybody else get temporarily block last , change , ok so let , have , first to go here , be here be , first attempt , be just go to use a standard mutex lock and then want to analyze this and decide if , be any good so , be go to have two mutex lock here , be read law can write log and just for fun today let , actually make these pointer so that i can create",
        "ok right so a preferred mutex lock let , talk about positive thing first let , do like positive code review here so the good news with this implementation be that only one writer at a time actually get to run ok that the only way , can get through to the being an active writer be to first acquire these two mutex logs ok so that be good the bad news however be that reader be force to read the datum just one at a time if i have multiple thread call , read here then only one of , can acquire this this lock and the other get block ok so now i can not have a million people on use , cash , be go to be serialize so just one at a time get to",
        "checked be true , need to continue to be true whilst be actually read or write ok so , get a lot of do so now let , start look at , third contestant ok so now what do , think about this now , have get some lock go on , have get , mutex lock ok , have get condition weight ok so now , be go to lock a mutex ok before i do anything ok so now , testing here will will remain true so if i say whilst anybody be write then block , know that that be go to be true until the datum , will unlock , code because all of , code use the same mutex lock ok ok so lock mutex and",
        "only way i can get out of that condition be when there be no one actually write ok so if , can escape then i be go to increment by read count so this route now represent the number of active reader then , do , reading after that , decrement the number of reader let , call condition signal will talk about that a little bit but , be go to wake up one reader or one writer maybe , want to lose broadcast will see and then will release the mutex lock ok let , see what the writer do ok so on the writing side let , acquire the mutex ok and then will check to see if anybody else be currently read or write so if there be anybody touch the patient right now for reading or writing then , want to block so , be go to block inside this condition wait alright",
        ", can open a file and search that file go to a big dictionary that can be that can be do without any without hold onto the mutex lock so let , all lock the mutex here ok then , perform the relatively slow read and then , will just need the mutex lock again for quick moment whilst , update , reading count ok so , just need , for a few nanosecond ok right so and what about the writing side ok so , will unlock , though , could argue that that be unnecessary because , do not want anyone to play anyway but the reason i do that be because i would like , new reader that appear or any new writer to appear , 'd actually like , to get stick inside condition wait ok that"
      ],
      "lecture 19-Q01": [
        "ok so with that in mind , be actually kind of see how , have sketch this out ok obviously , have some mutex lock to ensure that , update these variable atomically but the very first thing , be go to do then for each of these section be to be to either call preferred mutex lock or unlock so for a few microsecond , hold onto a log but that be only for , to do some accounting either , will immediately a scape can have through this code or , will end up call peter condition way in which case , release the mutex anyway ok and down here , will see that the last thing , do be , want to again acquire the mutex just once , be update , variable so again that mean that work",
        "just arrive , be sorry , be go to have to wait and so , be not the case that , want to wait for any active right know anyway even if , be just appear and not yet write , will force know reader to wait so as soon as i see a writer there not yet write , just appear on the scene if there be at least one of those so i could say great than zero but technically i could just wait right then , knew reader will will go to sleep little call peter condition wait right and of course there be list mutex lock and when , do eventually wake , up what happen well the first thing , will do be will go round this while loop and , will see if the right account have get to zero so , only let the sheep through the reader after",
        "no point wait for both of these because let , look at the logic over here where , will see that , be where implement vitus and then write and then when i finish perform this i decrement both right so the logic i want to use today be to say i be not wait for a writer to be actually do the surgery on the data structure no be just mere presence of want to write mean new reader have to wait ok so , have do that right so let , imagine that , have get however some old reader that have already come through this so when , arrive in this method here , lock the mutex lock but there be no writer yet so , just happily go through an , update the count now of the active reader by one and now , be currently inside here perform , reading ok so now with",
        "actually only one thread time can be run the code that , be write here so , could make strong reasoning strong inference about the state of each thread , can say this either kind of wait to enter this code because of the mutex log and i currently have to slog or that , be inside a condition wait either way , do not have the mutex lock so so that be , first condition can , guess what the other one be so either reading be non zero so let , just be explicit there today ok there be a now the reason why , may want to send a writer to sleep what be , ok so hopefully , work out that the other reason be if there be another writer actively write so if there be another writer modify the datum structure",
        "let , say or so if there be anybody write then go to sleep so the only way , can get out of this loop excuse , will be when there be no one left actually use the datum structure for either read all writing ok otherwise , new thread go into this p threat condition wait ok so know writer yes , be go to get priority as student , have arrive on the scene the reed have to wait but only only one of , be go to be able to continue to see why remember that each time a thread be work up outside condition wait remember be hold the mutex lock only one thread be run and so the very first writer that that have evaluation of false here get to continue"
      ],
      "lecture 19-Q03": [
        "then and then , will then , will continue ok so i go to process wait for resource will quite an exclusive lock call resource as soon as no other process have text message block ok and will assume the lock affair so in the general case with the period mutex lock , could set oarlock up to a give process with the high priority access to exclusive log but in general the sequence of which the lock be assign to up process be arbitrary right so , be not the same kind of well define simply that , will get , at some point ok right so how do , write these resource allocation graph well first of all let , write down , resource of different type so here , go right , have get different resource down",
        "resource be and the reason , can not get , be because process one be still run right so do , have deadlock well no , do not because , can see that process one be not actually wait for any resource yeah sure , be be a bit slow and finish up but there be no reason for , to actually run forever so at some point , be go to finish and when , do so , can release these resource ok so delete that line and , delete that line so , can now see that process too and no long need to be wait for the mystery source be and so , could raise the at and turn that back into a line that be look at , and say ok great now process to have everything , need , can continue so if , be write code , can imagine , call to peter mutex lock have finally complete or access to the"
      ],
      "lecture 19-Q08": [
        "represent a little walk through this state of space where the actual walk depend upon the sequence in which , process one or process to acquire the mutex lock or some other exclusive access to some other resource ok so look at this , process one be acquire , first mutex lock and then switch to support the state two and so on and so on and so for example , may have a path like this ok so some path in this conceptual space correspond to deadlock and i could reason very carefully about which path , look like so for example , may look like where process one acquire a first lock but then process two acquire a second lock and now both of , be be stick verse versus if process",
        "look here be the thing which , be say a quiet call peter mutex lock on abc and d , just need , to always acquire , in agree apon order so for example if , be go to acquire a lock in order to access a then get this lot first before get be and if , go to acquire a lock be then acquire lock be before access see and then if , get the idea so , need to rank order or resource so another be give some kind of simple mapping to integer here ok so on and so on and so on and so on and if , acquire something when exclusive access if , always agree to acquire , in small integer to large integer order then"
      ],
      "lecture 20-Q03": [
        "hi so let , look at the four condition of deadlock an as , know these , call the coffman condition ok right who originally identify , and as , know , be necessary and sufficient , need all fall to be true and exactly or for , to be true and then , know that , have meet the condition for deadlock so what be , let , actually look at some definition here so here be the first wanna process be currently hold at least one resource and request additional resource which be be hold by other process ok so , be hold and wait so that be a hold and wait condition ok if , process be all thread only need to actually hold on to say just one mutex lock at a time that deadlock would be impossible ok so that be how hold and wait right there be a set of wait process be such that"
      ],
      "lecture 20-Q06": [
        "which be either side of , so here be immanuel kant and before , get to eat , bowl of spaghetti right , need to grab this drop stick to the left and this job stick to that right ok now philosopher do not eat all the time in fact eating represent a critical section where before , can do that , be go to need to acquire these t mutex lock but for the rest of the time , be sleep ok so there philosophise right dozing in the chair ok but occasionally , wake up realize that , be hungry and eat some more and then go back to sleep so , will notice that life would be easy if , actually set the table such that each philosopher have , own cutlery but , do not do that instead each philosopher force to share the country with , neighbor"
      ],
      "lecture 20-Q07": [
        "hi ok so let , take a look at some code that i find on the internet that claim to solve , dining philosopher and , will analyze , and see what , think ok so here , go , use all the good stuff that , now understand , have get a little structure here call philosopher and , can see , be go to be type deft so that , can just say philosopher later on inside that , be go to have a pointer to the left fork and the right fork and of course a philosopher have a name and associate with , ap thread and some output variable say whether , fail or not ok , have a global variable to see whether this program should keep run or not ok and let , have a look see how thing get initialized ok so , have get a new way of character pointer and that be just a name of five philosopher would like today , be go to have five mutex lock , be go to be , fork and five philosopher ok so",
        "initiate or four five mutex lock here , go and so , just get five meter lock initialize great and then further down great let , actually initialize , philosopher so that be just a simple stack away , be ok to do this on inside the main threat because , will see all of , thread which be go to run finish before , exit make right so great let , get , a philosopher will get the i th one will initialize , name will initialize , leave hand and right hand fork to be one of , five mutex lock look , be use modulo arithmetic so that the fifth philosopher wrap around and get to zero for kid game right after set that all up let , start off threat will call preferred create will",
        "fail , immediately unlock the left hand thread great , say this look a lot like , be not go to implement holding wait , be not hold onto the fork on the left , be definitely release , so then what do this code do well , , actually swap the meaning of the left and right fork so i like to think of this as the false for crosse , arm or uncross , arm because , be go to go around this loop again but this time , be go to grab the other one first ok so this idea of what be on the left be actually just be swap over by crosse arm and , decrement try by one k so , repeat this on the third try however , do not use trilok instead , call mutex lock so the only way to get out of this loop be when , have truly manage to acquire the left and right mutex lock what do ,"
      ],
      "lecture 21-Q01": [
        "eventually wheelock a and b but , always look at any specific order , always lock the mutex which have the small address first why why be that important if this purpose of this code be simply to end up lock too mutex lock why change , order depend on , address ok so hopefully some neuron be fire at this point and , remember what , talk about deadlock , have those four necessary and sufficient condition to coffman condition and one of , be that if , have a cycle in the resource allocation graph then log be possible so this code be a step stone to make sure that , can not get cycle why because , be go to acquire mutex lock always in the same order in other word , have give , a rank ordering and , ordering be base on the memory location of the actual object in memory so great so provide all of , code"
      ],
      "lecture 22-Q07": [
        "loop forever oh ok so that be not go to be great because will be go inside this loop forever , have never unlock the mutex lock so that be mean that anytime this loop go forever , have get , have get an infinite loop here so this be go to lead to deadlock because one thread be go to hold onto that new tax law can never release , oh dear right what about these variable i care global variable so there should be initialize to zero but what be the purpose here so i think , well kind of rethink about this code and what , be try to do ok here be another problem i see however be that this code use modular arithmetic so that be go to be great for about the first two billion item so in light testing in simple demo",
        "both of , could see the same value of in so this code right here of where , be change the buffer that be the part that actually need to be have a lock plus if , be go to change variable like count again the plus plus , be not thread safe so again that need to be protect by a lock ok so let , move this peter mutex lock down ok will do that , be very end also , actually need to block , actually need to pause if , buffer be completely full so that seem to be the purpose of discount plus plus so , logic here be not correct i want to go to sleep i want to wait if , counter get be become equal to sixteen so let , fix this look if , have get sixteen item inside , queue right now then let , send this thread to sleep through , call , p thread"
      ],
      "lecture 24-Q02": [
        "be not any space leave so presumably , have corrupt or overwrite some datum that , actually do need like an early piece of the buffer ok so this actually take a look at the code now and see what , can find right so the first thing i notice be that , be actually call mutex lock really early on inside nq normally , 'd only expect the lock and unlock to be around the actual call of where , change the change the array here and the second thing i notice be ok good so , buffer size be two fifty six and in fact , be go to wrap around after , get to two hundred fifty five so what , have get then be kind of long hold of the mutex lock inside , enqueue here so , concern be with this",
        "that that mutex lock that would have never be never be release definition of deadlock wait for an event that never happen so , do not find deadlock just there there , come awfully close right what else can , find out about this code then ok so let , see the same post happen early ok that , be actually increase increase the count of the number of item in , buffer before , even change the buffer value ok so , be basically go to add one discount here so if somebody be wait to extract value in other word if a thread have already call d cube but be wait here because the count of s two be zero , be go to release , from that early oh yeah so this land sound like a recipe for underflow that because , say , have incremente or pizza box by one even though , have actually put",
        "no because , dick , can not complete until the mutex lock be release because , be require before actually touch the buffer if this code try to be a little bit more performance by give the nq in the dequeue different mutex lock then , would have run into a problem because then , would have allow a dq thread to try to read a value from the buffer before , have even put the value in right so well code of course would actually only increment the counting semaphore after , modify the buffer so so this line actually belong down here so do this later ok and , can do , after , have release a mutex lock ok and the same weight as well , should do early ok let , just see what i can happen on the d q site so",
        "be zero i think be that , run yeah so no that be yeah s one be the amount of space so that be currently zero ok so yes , be able to continue through both these line and , can start take thing out of this but imagine just this moment before , call mutex lock anew nq event come in so just before , big red arrow here just before call mutex lock if , have get the case where , have actually get two hundred and fifty six item inside the inside the buffer ok then , same weight can can decorate that and , same",
        "moment and q event happen then that can that can continue through an override the very value that , 'd like to see , still need all that entry inside , buffer but now because , have post on s one then if an nq thread appear then , can continue , have not yet get the mutex lock so , get the mutex lock and then , call same way on s one but , have already incremente , be once , get to continue and then post on some post which will never block and now , overwrite , buffer so , be pretty big unhappy space here yes , have see a problem here of overflow buffer overflow , override a value that , actually need , actually manage to put too much stuff into the buffer now the chance of that happen be pretty small be this very small number of microsecond between us call sam post and then ask for the mutex lock but that be a non"
      ],
      "lecture 32-Q03": [
        "long time say ten minute most process will not even use up that full ten minute maybe , will get stick in an io event or , will call preferred mutex lock or something and now , voluntarily give up the cpu so in this case be round robin have become like one of these other which one ok if , say first come first serve then , 'd be correct yeah now , have an alarm clock but in practice , never go off in practice or , have , have become like first come first serve so , need to choose a time which be somewhere between these and the decision be actually base on human factor which be , want to make sure"
      ],
      "lecture 35-Q07": [
        "these guy will set up a little function little handler when that be call asynchronously but , be really limited about what , can do inside that , can not use of any code that call malloc for example there be a very limited number of system call that be allow to use there be even the mutex lock the whole order stuff , just can not use inside , signal handler why because , have temporarily interrupt , other code and that may be deep inside that other code already in that code be not re enterable so a well way to do this be to actually just have a thread that pull off the next signal and , just behave like any normal regular thread so let , see how , can use this here be the big idea be to use something call sigwait here and this will tell , when , return what signal have"
      ],
      "lecture 39-Q04": [
        "ok so i want to review the critical section problem here be the idea that , do not just say oh , have get a piece that mutex lock that actually be the very problem , be try to solve be that , have get a critical section and i want to make sure that if i have say two thread or two process that only one of , at a time can actually be inside the critical section if two of , be inside the critical section same time then , have probably destroy the integrity of the datum structure that , have get , be try to modify so the critical section problem become really important in the nineteen sixty when , be try to figure out how to write good operating system because with operate system there be lot of thing go on concurrently , have get lot of process to an update thing , have get bits of hardware interrupt , try to get , datum structure fix so i need to work out very carefully how to implement a good critical section so today , be not go to ask people to go to arrive this",
        "that that in modern process , can not just simply write this code the main reason be be that a modern processor be a super scaler structure and the compiler as well care about performance and so both the cpu and the compiler will do thing like instruction reorder so , may change the ordering of these statement , may do lazy writing back to main memory so the other process may not see the flag have be change immediately so , can not just naively write this code in c or rust or python or whatever language , want and just assume , be go to work instead all the performance characteristic of a modern system from the compiler to the cpu be work against , which be why the implementation of saint peter mutex lock not only have to kind of implement code like this or similar"
      ]
    }
  },
  "topic 2": {
    "keywords": [
      "condition variable",
      "thread condition",
      "p thread condition"
    ],
    "mentions": {
      "lecture 15-Q01": [
        "0 minute",
        "1 minute"
      ],
      "lecture 15-Q02": [
        "0 minute",
        "1 minute",
        "6 minute",
        "7 minute",
        "10 minute"
      ],
      "lecture 15-Q03": [
        "0 minute",
        "3 minute"
      ],
      "lecture 15-Q04": [
        "2 minute",
        "4 minute",
        "6 minute"
      ],
      "lecture 17-Q01": [
        "0 minute",
        "8 minute"
      ],
      "lecture 17-Q02": [
        "0 minute",
        "1 minute",
        "4 minute",
        "7 minute",
        "8 minute",
        "13 minute"
      ],
      "lecture 17-Q06": [
        "3 minute",
        "4 minute"
      ],
      "lecture 18-Q04": [
        "0 minute"
      ],
      "lecture 18-Q05": [
        "2 minute",
        "3 minute"
      ],
      "lecture 18-Q07": [
        "1 minute"
      ],
      "lecture 18-Q08": [
        "10 minute",
        "14 minute"
      ],
      "lecture 19-Q01": [
        "13 minute",
        "15 minute"
      ],
      "lecture 20-Q01": [
        "0 minute"
      ],
      "lecture 22-Q07": [
        "3 minute",
        "6 minute",
        "7 minute"
      ],
      "lecture 24-Q02": [
        "2 minute"
      ],
      "lecture 32-Q01": [
        "2 minute"
      ]
    },
    "captions": {
      "lecture 15-Q01": [
        "hi welcome to let , fifteen actually jump in and learn a third synchronization primitive and this one be one of the most powerful thing that , be learn this course , be actually a bedrock for how , can implement other thing as well so in the future when , want to say implement a barrier or complicated condition of when a thread be allow to continue condition variable will come to the rescue so let , get start , can imagine lot of example in life where , need to temporarily stop , like , can not leave the house until , have , key and something else , or , can not say get a ticket from the train until , know which train and where , be go . so let , let , look at how condition variable can emulate this process , emulate this idea , and in particular what condition variable allow , to do be to pause a thread , to say stop , right , do not continue and then later , can wake up that specific thread",
        "condition have change so when the weather be warm , want to run outside in just a t shirt great will wake up all last sleeping thread right so excuse , let , talk about the basic idea than about thread so first thing be how do i send a threat to sleep easy , need condition variable so , will create one of those a little bit but after , have get one or or , need to do be , thread should call p thread p for short p thread condition wait ok , be go to skip on some detail that make , a little bit more complicated but , be go to write , just like this for now there be pass in the address of , condition variable and so again this be a bit like file handle that yes i have a variable in , code but actually refer to something else the actual object"
      ],
      "lecture 15-Q02": [
        "right ok so great , have put thread to sleep by call p thread condition wait and now be happily doze inside that condition variable right at some point in the future on a different thread , now know that , be time to wake up that thread so for example perhaps , finish download something perhaps the sound sample be ready to play or perhaps , know that the user quit and , be time to run that clean up thread which be go to , move the file and everything else for , ok so how do , wake up a threat , be easy , just need to call , other one of two thing so , can say either p threat condition signal kate and that will wake up a thread inside one of , , room that , sleep in so , better pass the condition variable that , thread be sleep in ok and there be one other option which be p thread condition broadcast",
        "variable and if i call condition broadcast , be go to wake , all up if i just call signal then , be ask the system to wake up just one of , and i do not get to say which one i just simply ask to say find , one and wake wake , up for , ok right so quick comment on these if , turn out that right now no one be sleep inside , condition variable then these two call have no effect so just as an analogy , could imagine p three condition signal be run up to i hotel and randomly knock on a door where one person , be sleep versus broadcast , wave , sort of pull the fire alarm on wake everybody",
        "because what , have do be , have define a condition for when , can not continue and that be actually the secret of use condition variable and that be why , be call condition variable so yes in practice , have see the behavior alot like hypnotise someone to sleep for a moment and then wake up later but the trick or the key part be to say what be go to be , condition that i should sleep and , be go to use , condition variable inside that kind of loop ok so let , actually kind of now sketch out how , can use this so rather than actually just say sleep for a second let , use , condition variable so instead let , call p thread condition wait there , go and , know that do the same thing but other post",
        "right condition variable or few go please sleep inside , condition variable ok right and later inside , increment method will call that pta condition broadcaster wake anybody up that be call the decrement method and be sleep inside here right be that the full story no because , have to think about thread safety so here be the here be what , will have to think about first of all yeah , can not just call minus minus here that be not a thread safe operation so , be also go to need to put in some unlock and lock course so , would like to put in say p thread lock here",
        "a little like while i here here be , little lie that i i ok i want , scissor that i put a parenthesis there let , drop , off there , go so , actually that be not the whole story for pizza at condition variable when , go to sleep , actually pass in the address or a mutex so , be , mutex i call , ok , have be write mutex i should have be dis writing , up here ok so here be here be , new text that , 'd like to be release so p three condition wait actually do two thing , unlock the mutex and then go to sleep so , have all not the near text to stay right anybody else now that need that mutex that need this dark can acquire , and continue so the very important"
      ],
      "lecture 15-Q03": [
        "ok so let , have a look at this example one more time but actually the text editor and then , will talk specifically about how pthread condition wait actually work so here , go remember the story so far be , want to modify some datum structure which will just be a little integer here and in particular , have get a certain condition where , have to wait so for example , do not want the amount of cake to go negative because that do not make sense right so rather than star than make cake and negative will just block until more cake arrive ok so , be , plan , say as a stepping stone to understand use condition variable let , pretend , have not take cs two forty ward and will just kind of keep polling will just keep keep beat luke bloope so look well say cake who be get down to zero just discover a loop and will just keep testing but rather than just do that every nanosecond let , put in a little delay here so maybe , be like in sleep for a hundred year or something",
        "and then afterwards , unlock the mutex ok right so what do , forget , forgot to wake up any sleeping thread in here so , have modify the value of cake so , could wake up all threat so for example , could say p thread condition forecast if , want to wake up all threat that may be sleep inside the thread condition wait or , could call p thread condition signal if , want to just wake up one of , and which one get work up this arbitrary ok right what else can i say about this well , could be that there be no thread wait inside the condition variable so in which case , signal or broadcast call here be a no op be not worth call so if i truly care about maximum performance i could actually reason about when i actually need to do this i remember that because of the mutex lock only one third of the time can be operate so at this moment , could say"
      ],
      "lecture 15-Q04": [
        "busy check this right so while while n be equal to the maximum number go round the loop now , know , could put a sleeping here if , want to , know that right now this be a terrible test because , be hold the lock if all of , code use a lot no one else will be able to do this fortunately for , , be go to be use p thread condition wait and that will release the lock whilst , be block ok so here be , condition variable that be go to sleep in and watch be sleep unlock that mutex and then before return lock , again so the big idea here be that in all the code that , write let , do i make a highlighter well let , do , like like a",
        ", be go to call p threat condition broadcast ok and say hey everybody wake up all right and there , go so if there happen to be someone sleep in on this condition variable because that waiting to pop then now , can wake up so , could for performance reason a little bit more about this and say the only time , need to do this the only possible time that someone could be block while pop from this away would be if the value of n be zero so in other word , have just increase , up to one otherwise there be no way that anyone could be sleep right now so , could weight use about that and , could also reason that , have",
        ", need something like look if , value of n be zero then go to sleep ok right so , be go to have , p thread condition wait ok do , do today and here be , condition variable , 'd like to sleep in and do not forget that mutex lock ok what be the mutex lock code look like be right so , have see this before that be just annotate , in a different color , be go to obviously have a lock here k and unlock at the end ok right be , do no , may need to wake up some thread so let , put that code in as well about this kind of dark publish right so let , in here wake up any thread switch may be sleep on the condition variable"
      ],
      "lecture 17-Q01": [
        "hi work to lecture seventeen so , be go to look at use , producer consumer and how , can use county semaphore to implement this correctly and then , be go to jump into condition variable just so that , can start think about how to write good multithreaded code now of course the idea here can actually be generalize to multiple process or even multiple machine run on different network so anyway let , jump in and see what , have get all right so the story so far this do check , be on laptop mode yet good write the story so far be that i could have fix sized ring buffer and so , can see , here that here be , buffer take some value but i only care about the low four bit of , little counter here and each time round this loop , be go to put a new value into , buffer but as , be only use the sixteen low slot here i have to make sure that , block be there be no space",
        "about here one be the size of , buffer and , be use the the counting semaphore for that and the other be a critical section and , be use a mutex lock to protect that ok so , have do that , have do that right ok so , have implement a version use counting semaphore what about condition variable suppose , want to make this work on a mac as well could , do , with condition variable and the answer be yes so of course , can so condition variable be more general purpose than count semaphore and , would replace this same weight with the kind of code that , see with , cookie eat a code where , check this value safe be equal to zero and if , be , would be call p three condition"
      ],
      "lecture 17-Q02": [
        "hi ok so let , make , a little bit more complicated now let , have a whole load of datum structure ok so in this case , be actually go to have eight different datum structure here , go right and so for each one of these , be go to use a condition variable to block when thing be not ready and , be go to need eight different lock now i probably could implement this code with just a single lock but then i may have unnecessary lock contention so lock contention be when one thread would like to continue but , can not because another thread be currently hold the lock and so of course that effect performance sometimes , actually need that behavior when another field be kind of into the same critical section but , could probably in this problem get by with a few number of lock sorry a few more lock in order to reduce lock contention so so in this case , have , have get eight condition variable and eight lock plus here be",
        ", to imagine that this actually could be a lot more complicated ok right so , have get some initialization to initialize all , condition variable and lock as , can see all , be do be use the array name so that will decay to a simple pointer type and then i can use pointer arithmetic to make sure i point to each of those entry so great i now , have get all of those actually refer to actual kernel object which be go to be useful for , actually go to do something for , now let , actually look look at the code that i want to be nee to be thread safe , be go to have two method here , have get a very simple modify method this be go to allow , to externally add some resource to a particular datum structure so , can see all , be do be just modify one of the entry inside that away ok and then , have get this other function which actually , be go",
        "inside , data because i do not want to have a buffer overflow here i do not want to be on the end of , way ok so let , think about how , can now turn this into something which be thread safe , do not want to sleep for a bit this be where , should call p thread condition weight case so let , put that in there kay right and let , sleep on a particular condition variable associate with this particular data structure so that would be cvs plus i here , go right and , will have a particular mutex lock that , want to release so let , have lock plus i ok right so what will declare then be to anytime , want",
        "to sleep but , never wake , up oh dear ok so let , think about when , should wake , up well , should wait thing up whenever , whenever , may be that another waiting thread can continue so , have see how be thread go to sleep if there be less than two item so if , have , have incremente , value here and , be now above two maybe i should be broadcast and wake somebody up so i could put some additional logic in here or i could just say hey bring the building the fire bell and let , go round there loop so the late code i can write with bp thread condition broadcast and then if there be anybody sleep inside this condition variable if , be block let , wake , up and",
        "ok right so remember what that do , have always write rp threat condition wait inside a little while loop so , will eventually in the next few ns be able to escape out of there and when , escape , have the mutex lock but what do , do , immediately around the while loop again and , will check to see if , can now actually proceed if , can not thread will go back into peter condition wait and block again so that be what , be do be , be just say i do not want to repeat any additional logic in here just wake up somebody who may care and simply , need to do that down here where after , have date the i plus once datum structure , better call p thread condition broadcast",
        "like eight cookie right so i can so each time this run as , add more each thread will get a signal to wake up so the last thing be let , press q here and the funny thing be that , all quit let , understand why because , only call p thread where be where be , quit , only call this broadcast here on the very first condition variable ok so what be , do here right so when , quit then that first red quit , be go to call peter condition signal on the next thread ok so if that thread be sleep , wake , up and then , will notice that the quick variable have"
      ],
      "lecture 17-Q06": [
        "here right so if the counter be less than eight then try again and will hold on a moment , should be use condition variable for this so let , have a condition variable here to say ok please block inside here and release the mutex lock ok right so if that will go to sleep , can wake , up occasionally to see if the counter value be get to eight but to initially the first seven thread that call this that all go to see counter value which be less than eight right so be , do well actually when , get out of here , should unlock the mutex so let , do that but what should , do to make sure that , wake up all",
        "red so if , counter value have reach eight then i know that , be time to wake up all of the other thread so how should i do that should i call p three condition signal no that be only go to wake up one of , i want to wake up all of the thread which be inside this wait call here so let , call broadcast on , condition variable there , go right , will now wake up of course , can not immediately continue why not because , be hold the mutex lock but there be live and ready to go ok so what will the eight thread do , will call broadcaster ring the fire alarm and then , a scape , call unlock an out , go ok so now , have get seven thread that be work up inside inside here inside , condition variable ok each one now try to obtain the mutex lock one of"
      ],
      "lecture 18-Q04": [
        "ok so this be actually a tricky tricky tricky problem to think about even though , be just four line of code and the trickiness come because , have get to think about all possible interleaving of code here and there be quite a few of , and the one that can bite , be in between when , check the value of please stop and then when , actually go to sleep so there be a moment in time let , call , just a few nanosecond maybe a microsecond most between when , code have decide that the value of please stop be one and then let , say one hundred nanosecond later where inside pthread condition wait and , be actually block right so within that small window imagine the follow happen imagine that between check this and actually block that just with one hundred nanosecond window , do both of these two thing"
      ],
      "lecture 18-Q05": [
        "zero and the very first thing , do be call p three condition broadcast in other word re that fire bell wake everybody up in this may be sleep inside this condition variable ok so now all five of , thread definitely work up ok so i implement increment the value of firework i print out oh and that value and then i decrement , ok so what be go to be the large value this code will print one two three four five six what do , think so just as a reminder , have get five thread run this and the only way , can escape out of this code be after firework be no long zero so what be the maximum possible value that , may see from this first to run this hundred or thousand to a million time what be the large integer that would expect here ok so think about that pause this video and make ,",
        "think about this for five second and then , will review the answer ok wait time up so let , let , have a look at the key key detail here the key detail be a mutex lock , mutex lock allow , to reason strongly about the number of thread which be actually run in this code because , have acquire mutex lock mean that any other thread that want to run have to also require , so all of these line of code can only be run by one thread at a time if the thread have go to sleep inside p thread condition wait there only allow to escape out of that after , reacquire the mutex log so that be the key idea that only one third of the time can be run this piece of code and , allow , to actually reason about"
      ],
      "lecture 18-Q07": [
        "now i want to say right let , say updater or update a particular entry inside , database and i need to make sure i can do this without destroy the validity of , look up 's and so this be a concurrency problem when , be happen all of the time be what power be all of , modern application so if , be to implement this today here be the good news be posix specification include not only p thread not only condition variable but reader writer lock as well ok so here , be that i make not just a mutex lock but a reader writer lock here , be and i initialize , and then before i do any writing i can call the right lock version before i do any reading i can call the read lock version and then when i finish"
      ],
      "lecture 18-Q08": [
        "fantastic ok so now , be go to say ok right on the scene there be now an active right there so , change the datum structure after that , will document be active writer and then , will wake someone up ok so how can , improve this like there be several thing , want to do first of all after i finish write there could be multiple reader so , condition signal be sufficient here no , probably want to use broadcast secondly do , notice that , actually hold onto the condition variable for an awfully long time and in fact , can stop that right let , go for red key right and in fact , do not actually allow multiple reader because once the first reader have acquire the lock , only release , after , exit so what , actually should do here be unlock the mutex lock , only need , whilst , be actually make assertion and change ,",
        "that start to exit out of here will be decrease the value of read and call p three condition signal so that be a little unnecessary , have actually only need to call peter condition signal when , , know there be an active so , know there be a writer waiting and when , notice that , have take the reading countdown to zero so ok this be kind of overkill be constantly call kick signal whereas in fact , may not actually be anybody inside that condition variable ok so but eventually the last reader 's exit exit out of here which point after leave unlock the mutex then on this side the writer will wake up reacquire the"
      ],
      "lecture 19-Q01": [
        "one so now when , unlock and then proceed to change the data structure if another writer evaluate this condition so imagine , work , up in three p three condition wait or , have just arrive , will see an expression here that be true and so , will go into p three condition wait so that , can be sure that this condition must be false in order for , to continue ok so eventually that right oh will finish change the datum structure and then , get down here again so , wait to acquire the mutex lock hopefully as a very just a few nanosecond maybe a microsecond and then , can say great , be out of here right so let , decrement the number of thread writing let , talk about the number of writer and then exit but before , exit maybe , be time to wake some people up ok so the most loud code would be to call peter condition broadcast on both the both condition variable so notice , have",
        "time to wake up ok so let , wake up say one writer so if if , do be zero and what well there be at least one writer then wake , up now , could do that but if , only wake up one writer i better make sure that when i write code down here that uh this code also wake up those writer so yes i could do this just wake up a single writer by call p three condition signal but suppose there be two right in the coffee shop then , have only wake up one here and , 'd have to make sure then that when that first writer exit , end up also call the writer so so that be i could do that but if i want to not think so hard and just make , code tiny bit less efficient i just could call p thread condition broadcast on all other writer so let ,"
      ],
      "lecture 20-Q01": [
        "hi welcome to lecture twenty so let , have a code review where , be go to talk about a little bit of code that use condition variable be , ready ok so , little application be very simple , be just get two thread one thread some point be go to modify this value of x and then call signal another thread be wait for x d b positive so , can think of this basically like a latch and only after , be become positive do , continue right so what do , think about this code right so what do , notice first of all that , code over here on the right really do need a mutex lock before , change value of x and , signal ok let , see why the problem occur be when , call change at the same time that , second thread be actually call in this wait for positive x let , see where the problem could occur so , have get this test here and then later maybe a few"
      ],
      "lecture 22-Q07": [
        "not good and , be not go to even see this bug until , have incremente in by two billion time so , well fix this so i would not use if i if , force , to use modular i would also have an if condition to reset , back to zero but why do not , use bitmaske why do not , say ok look i only care about the low fifteen bit ok right and also , could change in and out to be unsigne as well so , could say unsigne int for example ok if , do not want to mess with negative number ok so this code be try to use condition variable to implement an q but , right now , be not even thread",
        "item at which point , call p three condition wait but , do not just go to sleep on the condition variable remember , have also get a pass in , mutex lock as well so that will become unlocked while , sleep in there when , return from peace recondition weight will have to re lock that new talk then recall pizza kitchen broadcaster , have wake up some thread , be incremente the count by one and , put the datum in and only at the very end , release the mutex lock after , finish modify all about datum so great and q event let , have a look to see what , can do about the d q k so on the d q side good , want , d q to lock a mutex the same utexas before because , be go to be share this count variable so yes in this case , do want to wait while count be",
        "three condition wait ok so thread please go to sleep inside this condition variable and please let go of the mutex whilst , be block ok ok otherwise if , continue , know that the count be non zero so , can at least get something out so great let , pull something out of , buffer again , be go to modify this to be bit mask ok i just care about the low four bit there , go and , will call preset condition broadcast on the off chance as any thread which be sleep will call oh wait a moment , do not want to hit any race condition around this count this well happen as part of , critical section so before , unlock the mutex let , make sure , decorate count so if , do that make all these change congratulation , have now get a working"
      ],
      "lecture 24-Q02": [
        "those be produce an item want to queue , up and , call some weight but i do not have any space leave inside , data structure here in other word what if s one be zero , may have a problem here because now , be go to sleep , be block inside the same weight call but , be still hold on to the mutex lock this be not a condition variable ok , be just a simple counting semaphore oh dear so can , have deadlock well let , find out to what happen on the d q side so on the dq side , be go to wait until at least one item ok that be true and then , call sam post and , do this without require mutex lock so here , be lucky there if , also have onto the mutex lock early if , music lock have be one of the first thing , have do then yes , would have encounter deadlock because the"
      ],
      "lecture 32-Q01": [
        "what the user want , to do and most of the time , cost the user be not give , event but occasionally the user go to type a key press the screen that kind of thing and then , culture , can return , and , code can continue ok what else may , finish wait for think about something that , have see and , use inside this course well ok how about , synchronization primitive so some synchronization event have happen that , allow , to continue so what do , get , have get thing like mutex lock , be able to acquire the lock , have get count semaphore somebody be return that piece of pizza into the counting semaphore so now , get to pull , out and continue and of course , have see condition variable so now say broadcaster"
      ]
    }
  },
  "topic 3": {
    "keywords": [
      "file system",
      "symbolic link",
      "meta information"
    ],
    "mentions": {
      "lecture 05-pt1": [
        "2 minute"
      ],
      "lecture 05-pt2": [
        "4 minute"
      ],
      "lecture 21-Q08": [
        "0 minute"
      ],
      "lecture 22-Q06": [
        "2 minute"
      ],
      "lecture 27-Q02": [
        "0 minute",
        "1 minute",
        "3 minute",
        "4 minute",
        "5 minute",
        "6 minute",
        "9 minute",
        "12 minute",
        "13 minute",
        "14 minute"
      ],
      "lecture 27-Q05": [
        "0 minute",
        "5 minute",
        "8 minute",
        "11 minute",
        "12 minute"
      ],
      "lecture 27-Q06": [
        "0 minute",
        "2 minute",
        "4 minute"
      ],
      "lecture 28-Q01": [
        "0 minute",
        "8 minute"
      ],
      "lecture 28-Q02": [
        "3 minute",
        "4 minute",
        "6 minute"
      ],
      "lecture 28-Q04": [
        "0 minute",
        "4 minute"
      ],
      "lecture 28-Q06": [
        "0 minute",
        "6 minute",
        "7 minute",
        "9 minute"
      ],
      "lecture 29-Q02": [
        "2 minute"
      ],
      "lecture 29-Q04": [
        "1 minute",
        "4 minute",
        "6 minute"
      ],
      "lecture 29-Q05": [
        "0 minute",
        "1 minute",
        "2 minute"
      ],
      "lecture 29-Q06": [
        "0 minute"
      ],
      "lecture 29-Q07": [
        "1 minute"
      ],
      "lecture 29-Q08": [
        "0 minute",
        "1 minute",
        "2 minute"
      ],
      "lecture 29-Q09": [
        "0 minute",
        "1 minute"
      ],
      "lecture 30-Q05": [
        "0 minute",
        "1 minute",
        "2 minute",
        "3 minute",
        "4 minute",
        "5 minute",
        "6 minute",
        "8 minute"
      ],
      "lecture 31-Q02": [
        "0 minute"
      ],
      "lecture 31-Q05": [
        "0 minute",
        "21 minute",
        "22 minute",
        "23 minute"
      ],
      "lecture 37-Q01": [
        "2 minute"
      ],
      "lecture 38-Q02": [
        "3 minute"
      ],
      "lecture 39-Q01": [
        "3 minute",
        "5 minute"
      ],
      "lecture 39-Q02": [
        "1 minute"
      ],
      "lecture 39-Q03": [
        "0 minute"
      ],
      "lecture 39-Q06": [
        "0 minute"
      ]
    },
    "captions": {
      "lecture 05-pt1": [
        "one share with a p here , be go to give , a simple file name for example , may say , would have run cat and , do not say where in the file system catch that , find , will use , path environment variable to look for , also this version , just keep specify parameter so , may say cat and then include save the file name that , want to print out all the version with an array here , pass in appoint to away now there be a couple of big gotcha to watch out for , here be the first one how can exact know when , be lovely parameter array have finish so here be what , have to do if , be use the version where , just write out the parameter here as argument"
      ],
      "lecture 05-pt2": [
        "let , actually find , out from the process name so i can say percent s and program to run and maybe , want to specify some optional argument to pass that program ok let , have a new line at the end ok watch that percent sp , should be the string at that very first entry of that little table , draw ok after that do not continue do not collect two hundred dollar etc do not play monopoly instead exit with an error code right so down here now , want to call exec so , be go to call exec and i want to use , version i want to use a path please so , do not have to specify the exact location on the file system ok so in here i need to program dayton let , have a variable that do that and then what about , array well i do not want to start at the beginning i"
      ],
      "lecture 21-Q08": [
        "ok i want to talk about the dirty bit so let , keep track of which page have be modify and so this be the function of the dirty bit so the dirty bit mean that , page have be modify ; and what do , mean by modify the idea that the copy that , have on secondary storage i file system be no long accurate so if , need to page this physical frame out , actually need to do a copy process , do not have a current copy outside of the physical ram so ok so by keep track of whether , copy be fresh or the or the ram be dirte allow , to choose page frame efficiently if , be go to choose a particular frame efficiently ideally , be not go to choose one which be dirty because if , have to choose a page"
      ],
      "lecture 22-Q06": [
        "can actually look at the file as if , be actually part of , address space . so that be come up later inside cs241 and , be the most .. one of the most fun and most powerful feature of posix and system programming that , will see in this course . ok , so uh .. what else ? oh yep ! , will do .. what be \" a name pipe ? \" \" ok , how do , make a name pipe ? ok , for this , \" can actually make pipe \" on , file system . , can just say \" \" mkfifo \" \" because \" , behave as a little ' first in first out ' queue . so let , call , say ' myq . ' ok , and now if , look on the current directory , will see there be something call ' myq . ' so here , be . look a bit like a file right now but let , find out some more information about , . ok , and , will see \" , have get a magic letter over here that say \" \" actually , be \" \" a queue \" \" so , can put stuff into , . let , say \" \" echo hello \" \" , \" pipe that into , queue ... umm"
      ],
      "lecture 27-Q02": [
        "ok so let , talk start talk about how , can store item on a disk and in particular how , may actually represent the datum what feature , may want in , file system so , be go to start by just a bit of a brainstorm exercise by say if money be no object if i can get , the good software engineer what feature would , like to add to , file system so let , not try to be too constrain by the limitation of the file system on , laptop or what , have see in a linux virtual machine so far let , actually think about what , need ok so this be kind of real let , start with the white board and will start to write down some feature ok so what would make a great file system right so let , come up with a few idea and then all kind of see how well , do and compare , to some other kind of brainstorm exercise , have do in the past right so what would , like first well maybe , want some access control right so , want the idea that",
        "and perhaps i want to make sure that some people can not read all of , file or perhaps i want to make sure that some file be only read only or perhaps i want to make sure that only a limited set of file should be execute so if , give , a a file i can not just easily turn that turn around and say ok bash run this or ok cpu load this as a program so i want to define some sort of security about , , file maybe , want to write a file system create a file system that even track who be access the file so maybe the sort of audit and log auditing and log perhaps if , be go to get , file system to the nsa i want to know which analyst have open which file so perhaps , have get some kind of logging",
        "so i could go back in time and pull out the previous version all version before that so maybe , want some versione as well ok now on a typical file system , be not unusual for the same piece of datum to be find in multiple place there be certainly go to be true of course with versione but , and i may have a same copy of a text file same copy of a c file so if i share some music with , for example or video file and , be store , on the same disk , seem a bit of a waste of space to actually store those byte multiple time on the disk surface so perhaps , want , file system to support deduplication right do i find deduplication right to find multiple copy of the same information may be the same file",
        "ok what else would , like ok so far , have be think about feature what about performance ok so , like , file system to be nice and fast , want to have a good performance when , be empty and as good performance as possible when , be get near full as well so , care about the performance of the two different way typically , have random access so if i start ask for oh no , , list be go can i get , back there , go right random access spell that correctly random access so i want to jump around a particular file say , represent a database of all thing and , be get different record from that or maybe i care about sequential access so perhaps , have write a web application call class transcribe and i know",
        "file as fast as possible out of this machine onto the network so , want good sequence sequential access and of course , want to do this , use in the minimum over cpu time because i want to use , cpu for other thing so what else may , need here right k so if , be store say text information that text could easily be compress so maybe , file system should support compression as well so for some file for example suppose , be store all of the linux kernel that be just a lot of c code and i could store that in a very much small space on , disk and if i can decompress , quickly i may even",
        "and actually get well performance from , file system so , want compression potential potentially for performance if i can decompose quickly but also of course i want to maximize the amount of thing i can store on , file system right what else ok so , could go through and keep talk about kind of more feature like this but i want to remind , that so far , have be think very much like software engineer , have forget that real filesystem live on real device and so a big thing that , have miss out here i have not think about be that , want , file system to be robust so perhaps there be go to be an error on the disk surface because the bit be never write correctly perhaps",
        "which one have change which one have be create , would be great if , file system could actually tell , which file have be create or modify since the last backup so , need some feature to support that how be , go to do that right i kind of want to mention that one fun thing about all these feature be that , be not require of course with all application but , also be difficult to implement together for example compression may or may not hurt performance deduplication require ability to scan file and may take additional cpu time additional memory and so may actually actually affect negatively the performance of , whole system the last thing will put on here which be kind of go",
        "fill up the storage system or do i want to be able to limit the number of file on the amount of disk space that , be write to , do not talk about indexing and search so if tomorrow i want to find all file by a particular artist or if i want to be able to kind of find the moment in a video file that the word camel be speak then perhaps , file system should support that in interesting way k so everything else , kind of come pretty close , do not talk about encryption which be an important security idea so encription can mean different thing , can mean if someone get physical access to , disk let , say , steal , can , do not read , file or if someone be a user or if someone even be an administrator on machine be , able to read , file directly form",
        "the actual information and the meta information as well maybe , be not just enough to store to encrypt the actual content of a file maybe , even need to make sure that , be not possible to see the name of the file or who own , or when , be modify even the meta information become sensitive information ok right so that be a pretty good listen i hope , get to see why actually implement a file system be hard and many file system today be surprisingly old , be actually some of the old code , will find inside the kernel why because write code without bug to satisfy all of these kind of design idea and design goal be really really really hard and this",
        "do not want , file system to suddenly start misbehave when , disk become full for example , want all file system to work with all sort of edge case for example when a particular sector on a disk go bad or if , want to start shuffle information around in , disk for well performance in the future these little use case be all tricky and take a long time to kind of get right both in term of correctness and performance be , expectation of this part of the of this part of the kernel work robustly again and again and again even if , be write large number of byte at ten to twelve or great number of byte be very very high so , tend to find that this code be extremely old and mature and extremely well tested ok so that be kind of a fun little game perhaps , 'd like to think about , own feature if tomorrow , decide to have a new startup to make a new file system , will return to this little game in the future"
      ],
      "lecture 27-Q05": [
        "hi so a big idea be that most file system device be what be know as block base device mean that at the hardware level , do not ask for a single byte from a disk instead , have a convention and , say , know , 'd like give , the first block of byte please will give , the second block of byte or , have like to update this block of byte with some new value so for performance reason , do not make request down to just very small unit , much prefer to say to a disk system an external system give , a whole bunch of byte and useful idea to make the same disk block the same size as , memory block in fact what , be go to see be all over , system example where the block be base around four kilobyte chunk or , will find example where the chunk be slightly",
        ", have read write and execute read write and execute and , and , can specify these separately so for example , may say hey , file can be modify by , because i own , people inside , group can also read , and everybody else do not have any access at all so that be the simple kind of access control that , may have there be more complicated version today in other file system what else could , have well in addition to the actual content , have probably care about , size or some interesting meta information cape , may care about the mind type so what kind of thing be this file and today , represent that use these type for example , have already see a few of",
        "to give , file some kind of name , also may want to store some other additional meta information so , may have kind of search meta information so for example there may be key value pair like who be the artist if , be a gps coordinate of where something be store or find maybe if , be an image say the camera setting what len , use that kind of stuff ok so , can have an arbitrary key value pair to help come search right so , could kind of keep go on here and , could keep kind of brainstorm a whole load of thing that , may want to store about the file but i want to kind of simplify , back down to what linux do and what , see in most file system ok right so let , choose a new colour let , let , go for this yellow",
        ", be go to discover , be , file have this wonderful thing call and inode number so that be go to replace how , think about datum be store on a disk and a name be just something that which live inside directory list so if , happen to be inside a particular directory for example , happen to be inside say directory call sub two then inside that particular directory there be go to be a whole load of name that be , directory list an each name be go to map to an inode number so the inode number become the authorative way to talk about a particular file on a particular file system . a name be just a kind of secondary add - on . a name be just a cute way for , to be able to have",
        "ok so , be get down to this next part here that right so what be an inode this be the definition of how , store a file on disk and , have certain meta information , tell , about the size that file , tell , about who own , and thing like when , be last modified , also tell , kind of where on disk be the datum , actually need to get to the content so kind of where where be the datum so in other word be which disk block should i go to to actually start read the content of , cat dot jpeg so , be a kind of key if , like into the actually read"
      ],
      "lecture 27-Q06": [
        "ok so , have get a concept of i node let , actually design , own file system so , be go to base , little design on the    ext2 file system which have be around for a long time but , be the parent of the third generation    ext3 which come out in two thousand and one which add journaling so journaling be very useful if , want to support file system crash when the file when the power go out so ok so , can sort of say support power failure so this idea that i can resurrect , file system back to a good well know state where all of the datum and the link inside , file system be correct and all the block that i refer to as be currently unused",
        "that be , hardware be go to support the idea of say please read this block one or please write this block two and that be all i need be a very very simple kind of block read or block write and , 'd like random access if possible please ok so how should , do use all of these disk block ok so , will take the zero block here and will declare that as super block there , be so that be go to hold some meta information , choose a new color here how about how about some green ok so that be go to hold some meta information about how , have decide to organize the the rest of the disk so before , can actually start talk about that inode and where the actual data be go to be store , well read superblock ok but after that super block , be go to use the rest of this space here",
        "here will say that , get one opportunity to decide how many inode , would like to be able to store on this disk so , make that choice when , format , when , say right this be go to be the layout of , disk , be go to set aside so many disk block for the inodes here , go and the remainder will be use for all of the datum that i want to store so that be , initial very simple model , be not very accurate in the sense that modern file system allow , to have more than one area of memory set aside for on , but , be a good representation of how , start with early file system ok so make that choice when , when , first format an , will store that , choice inside the super block let , hope , do not under estimate about the number of file that , intend"
      ],
      "lecture 28-Q01": [
        "ok great i welcome to like twenty eight so let , get start , be go to look a little bit more at , file system representation and then dive into stat and how , be go to have hard link and symbolic to , file so just as a kind of quick warmup remember , be play with the model of the e x two two file system and , i node be the file i can not create a file in this , have actually get i know entry and , be go to have will say ten entry inside , i know directly to the first ten disk block use by , file so in otherwise i could hold forty kb there and then i also have inside the i node that this block which hold a table with a thousand twenty four entry and then another entry side the i node for , double interact an another entry for the really large file which be actually go to be a triple indirect in those for the triple",
        "now here be a useful little command get cwd notice that be right , tell , the process be current working directory which be go to be useful if , want to work with relative directory and in fact path in , system of define to have a maximum length so , can be confident that the string that , can request can never be large than this constant here path max and , add one just to ensure that there be enough space for the c stre zero bite at the end ok so if , want to know how where , currently on file system here be one way to do , right so that be a limitation of function here so in fact if i type c w p w for present working directory that"
      ],
      "lecture 28-Q02": [
        ", be something else like , be symbolic link or name pipe or some other bizzle object that , have get store in a file system ok , can actually have multiple link to the same i know entry so , will be see this number link later when , actually start make hardlink so if , get this big idea in , head that hey the i node be the file then , be quickly realize that hey maybe i could have multiple directory where different name correspond to the same i know number in other word , actual file could appear in more than one place inside , directory structure which be pretty cool so once , get the idea that i node be the file then that open up some pretty cool idea ok then , have get thing like ok the uid and gid so these be just number",
        "to the file system , user id the user be just a number so , do not actually store the username at all associate with a particular file so that tell , who own , and the group of the owner as well ok if , be look on the same hardware device , expect the device id to be ok so up here to be the same , be go to look at the device id of a special file but do not worry about that instead this be how , can find out the true size of a file in byte and rather than be just say an unsigned long or size today , want to be able to work with extremely large file so this special type here there be off underscored t be design to be large enough that",
        "i probably want to make sure that the number of byte , be request be some multiple of that or at least that site in order to make sure that , be efficiently use , file system so that give , hint about that natural size of read invite to this current file system right the last thing be hey , could find out some important some timing information so the c structure time t here be accurate to the lease give a precision of one second the actual way that something may be store on disk be not necessarily that accurate or , may be more than more accurate than that for example some window file system be only accurate to within two second ok but now let , see what , have get , have get when , be last access when , be last modify and to finally the time of the last status change ok what be the status"
      ],
      "lecture 28-Q04": [
        "ok question for , darcy i know contain the file name for ten to the ten to the ten point right so hopefully , say no ok the i know do not contain the file name the file name be just a way to organize , file in term of , directory listing and that be , ok that be the kind of big idea right so can , have the same file appear in two different place inside of file system yes absolutely ok let , do that alright so right now the story so far be , have a little program call program dot c let , link to , use l n on say ok take program dot c and let , create a new directory listing call say another dot c so great let , have a look at another dot c and be exactly the same and in fact if i look at the content of this so , directory ok like , will see that another dot c be i know number end",
        "meta information so for example , may be i do delete i know entry can still point to the disk block that be be use to hold the file content so that allow , to do thing like undelete file and find file which have no long list insider directory but , content may still be available on the disk ok so rn be actually what be call unlinke , would simply remove a directory entry in reduce the reference count by one and a reminder that , can , can actually find out the reference count the number of hard link by call stat onefile right so i use use the command here like l n for link in fact , can do this from c as well let , have a look at , quick man page so if , look at man , can look at link cape"
      ],
      "lecture 28-Q06": [
        "ok so , have , have talk about e x t two and how , can represent a small large file efficiently so what do x t three nxd four giver so , have already mention one thing which be that , be expand to allow much large file but e x t through gaver be journale which be the ability to make sure that , file system be always in a good state so a file system of course have to keep track of unused disk block so , want to make sure that even if there be a power failure , do not accidentally start rely on bad information that if , idea of which disk block be available be incorrect that oh , may start overwrite valid file so xt through xt three implement this idea call journaling which be that i can consider in time all of , right to disk to be modification to , disk so i can have checkpoint",
        "of why create file system that be perform and secure be difficult the last thing i will mention be here be another when , start this section when , just brainstorm a list of feature that , would like ok let , have a look at a real list of feature of a real modern filesystem and this be just kind of a high level feature list of two two file system that , will probably hear about one be zfs and this support thing like raid what be raid ok will talk about raid in the future , actually want to be able to work with different pool of file so , want to be able to have kind of enterprising",
        "file system so , have this idea of different storage pool so , have introduce abstraction layer between the physical disk and the actual kind of virtual disk disk pool that , actually may want to manipulate for application , want to have good cash be , have not a thirty two bit model but now one hundred and twenty eight bit model for size that should be big enough for everybody , want to implement thing like copy on write an make , transactional , want snapshot , want clone , want to be able to send these snapshot from one disk to a different disk , want to be able to stripe physically , be store , , datum across different part of a disk , want to have variable block size be , want to make , lightweight , want to be able to modify , cash , want even potentially different endianness for performance and of course , want thing like deduplication encryption right so that be go",
        "so on and so on and so on so that i just want to go blow , mind or expand , mind in term of ok this be all that cool stuff that be real modern day file system can kind of give to , ok and unfortunately however beta office be still only begin to be use for real enterprise system because realize that these feature can start to bite , in the corner case that , have just see even with relatively simple file system like e x two three n x t four if the corner case that case for example where , disk be now full or suddenly , have get one disk go down and a quota change play and something else happen at the same time that people be paranoid about that the last thing , want to do be how to lose all of , datum or bad have a data corruption that be not even aware of if , lose all , datum then ok in the bad case , have last saturday of business and , can hopefully restore , but what be scary be to say , have get a bad"
      ],
      "lecture 29-Q02": [
        "a non zero value if m be a regular file but there be some other fun one down here so these be the two which would be most useful there be regular file and be directory , probably will not need be a character device or block device if , have make a name pipe perhaps by call make fifo for example then these kind of pipe actually exist on , file system , have file name so this would be a way to actually check to see whether that filename correspond to one of these pipe and lastly here be a useful one be something a symbolic link there be a big gotcha with this one or big secret about have to use , correctly so , will talk about that a little bit ok so let , go actually look at some code that do this all right so here , go let , find that come back ok so i want to"
      ],
      "lecture 29-Q04": [
        "forever right so that be the idea of of a symbolic link how do the system know that , should treat this piece of text as a symbolic link as oppose to just a regular text file and the answer to that be there be a mode bit there be a mode bit that say this file be actually a symbolic link so , have see how , make one so from the shell , say ok , want to make a link i want to make a symbolic link and , start off with the target where , should end up so for example if , have a whole load of android sdk be , may say for example alright so , have get somewhere on , machine say like an install directory and , have get say an android sdk and i may have",
        "call east here actually , be take to the same spot if , go north actually be take , to one so of course if i do read link on say east , be go to tell , dot so let , try this let , go into say east alright and here i be in east that be , present working directory and course what be there here guess what more file and , happen to have a directory call east so i can go here as well east there , go right and ok and of course i can keep go easter for as long as i want ok so , current directory be change and each time i look inside the current directory i can see a bunch of file and one of , happen to be a symbolic link ok so how can i detect symbolic link from c code clearly ls can do , , be give , some hint about these different file so let , do all again there , go , can see that",
        "the answer be no if i look at the mode bit of this , would actually say nope this be a directory why because stat just like open follow the link in attempt to open this file or this directory the kernel automatically say oh i see , be try to open a symbolic link , be go to follow the money right so that be not very useful , 'd actually like to know this time that no do not follow if this be a symbolic link and how do , do that ok so with stat rather than use stat , be important to call l stat and l stat work just like stat except when , be actually look at a symbolic link if , be a symbolic link then , be actually go to tell , the meta information the inode information about the symbolic link , be go to find out when the symbolic link be create if , use this"
      ],
      "lecture 29-Q05": [
        "ok so , have see two kind of link now symbolic link and hardlink let , talk about some of , difference ok so what be the kind of say what can , do let , not say about advantage here let , say what can , do with a hard link here so remember hardlink , be increase that reference count ok so a hard link can only point to exist file so , can only make a hard link to exist regular file , can not make a hard link to a directory ok so to an exist file there , go right the reason for that be that the file system have a strong assumption that the file directory structure be a tree and have no cycle if , as a mere mortal user could make hard link from the deep part of the tree",
        "in fact even if , be root , can not make hard link to directory , will refuse to do that ok so that be the first thing be , have to be to an existing file , can not make any hard link to a nonexistent file why because remember what , be do be that , be add a new entry into a directory and increase the reference count versus a symbolic link ok , can actually make symbolic link add the o just up there symbolic link to nonexistent file so , can say i can make a link to something which do not even exist yet so that be ok and also directory be ok the other thing which be not that surprising be that , can cross file system boundary",
        "on a completely different file system for example maybe , file exist on a usb stick and so , symbolic link would just contain the text say for example slash wherever , store lie mat or mount usb stick here ok and so i can talk about a symbolic link i can talk about so create a symbolic link to a file on a totally different file system and i could store this inside my say , user directory right which one do , think have well performance ok so there be a cost of symbolic link , have to read that text file and then process the text in order to follow , versus a hard link there be no performance"
      ],
      "lecture 29-Q06": [
        "ok i want to mention just a curious little bit of linux here which be call the directory sticky bit so here be the problem , need to solve let , suppose , have a disk which be nice and large and , be go to let everybody write into this disk because , need lot of space but people only need this big space for a temporary amount of time so , will have a part of , file system say call slash temp where both , and i and other can unpack thing maybe compile thing etc so this directory , need to be world writable so the permission on this directory be go to be quite unusual because the directory on the temp directory will be seven seven seven meaning hey , can all read write and execute this directory but , have a problem which if , make a directory inside here that be dir1 , be go to be rather upset if other people then immediately start delete , or rename ,"
      ],
      "lecture 29-Q07": [
        "say user local , perl right , would just be great if the system could find the right version of perl and run , automatically ok so that be the purpose of e n v , be go to look on , path for an executable call perl and pass this the remainder of the script into perl so , can , can execute the script right ok some other quick thing how do , make hidden file that be not list by ls , talk about this before easy give a file name that start with a dot so if , look in , home directory , will discover there be lot of example of this the windows file the windowe file system tend to"
      ],
      "lecture 29-Q08": [
        "ok so in the beginning the root file system be just a single slash here and beneath that that be where , be go to find just everything so , need a way to be able to say , know i want some file system for , local machine perhaps i get some remote filesystem and , have get some file system which do not even physically exist as well so how can , do this well the idea be that , can actually set up what be call mount point so for example so i may have a mountpoint say call slash home slash let , call , coffee mug for example coffee and then i can say on this directory coffee here this i want to connect to a particular file system so maybe , be go to get that particular file system from this mug by ask this piece of hardware to give",
        ", will have a special piece of hardware that support the right api to say right stop tell , about the root directory inside , coffee mug ok or maybe i want a file system which be go to be serve all the file that i need for when the machine start to boot up so i may put , say slash root or maybe i want a file system for just a single forward slash which be the default file system if none of these other filesystem apply or maybe i want a file system just for say home just for , user 's directory maybe i want a file system say just for temp for example if , have get lot of ram i may choose to unpack file and actually have a file system where the file , be not store on disk but , be actually just store in memory so when , machine reboot anything inside slash temp obviously be destroy because , never actually make",
        "pretend , do whereas in fact , be store in memory but how about some file system which actually do not exist how about some virtual file system ok so this be really fun stuff any moment of course , have get the kernel run and i wonder how , be do i wonder what , be do how can i find out about what , linux kernel or , apple kernel be what , be work on what , be do with each process and would not , be great if i could somehow talk to , and that be how , use virtual filesystem so think about all these file system , have just define for example when , say something like ok list all the file inside a certain directory for example tell , all the file inside slash home slash angrave then"
      ],
      "lecture 29-Q09": [
        "ok so let , finish this with a little demo , have log into a linux machine here , be actually the shared engineering work station here and let , go into a virtual file system , be go to go into one call proc to tell , all about various process so realize that none of these file exist right , be all come from the kernel but the kernel be fake the result , be just give , a directory listing which to , look like real file but actually none of this stuff exist so right now i do not have much running here , have get a process call two five six five which be bash and i just start another one for ps let , go into one to the bash i know that be still around ok so let , cd into two five six five , will notice that there , be , be list early and inside this directory i can find out all sort of fun thing about this current process i can find out how , be use",
        "i can look at , environment variable let , just try that ok so these be all the environment variable that , get start with i can look at , say command line how , how , be initially random , do not start , with just bash i can look at say what limit , have ok right so say how much memory , be allow to use how many process , be allow to start etc etc etc so , be peek inside the kernel as , be run and , be give , all this kind of great information so now , can build little tool for example , could build a little tool call ps which look at proc and maybe some other virtual file system in order to tell , more about what the system be do or for example , could look at the current set of user which and what be , do where , be go where ,"
      ],
      "lecture 30-Q05": [
        "ok so time stop talk about how , can mount and unmount an entire file system so the reason , be call mount and unmounting be for hark back to a time when file system be big and heavy , may be contain on , very large drum there may be a large piece of magnetic tape that , actually have to put onto a machine so , require some physical effort to mount the file system so that , could read or write to , so today of course be full system can be very light very tiny physically but , still use these word to talk about when , have a file system that , can now access and when , want to no long access , , can unmount , ok right so in the beginning when , machine start up , be actually go to look for filesystem do describe in this side be special file etc / fstab so that can describe a whole load of additional file system like there may be a file system just for the user there may be a remote file system that be mount on a network drive somewhere , can describe",
        "and that can include additional option like whether , want to load the file system that be just read only or what to do if an error occur so let , let , start kind of play with especially today , be go to mount a file system that i download from the internet , be a complete working version of linux and will just explore will just to see what be inside , right one thing , be go to see be the idea of a loop back file system so the item , have download from the internet of course be just a regular file and a regular file be not what , need for a file system regular file have byte , can navigate to , , can seek backwards and forwards etc that be not quite what , need for a file system i want to be able to read",
        "have a way to say give that , have get a file that i can navigate around and read or write individual byte now need to provide an interface where i can read or write random block or possibly block in a contiguous order so there be a virtual device that the kernel support a lot of physical device no but , pretend device there be actually inside the kernel call a loop back file system which , present a regular file and , present to the kernel then this ability to read or write block in order for , to then actually mount a file system and explore inside , ok so , be go to use that today as part of look at this file system , be go to use a command call mount now i need to be root for this so , could do be say on , own virtual machine on , laptop and mount take some",
        "about , be read only or in , case actually i need , give , an intermediate loop back device as well and then , need to give two thing first of all where can , actually find the file system so in , case , be go to do today be , be go to look at the file that i download from the internet call be a dot iso file so there will be some file somewhere and second , need to say where will , appear inside , main file system so for example , may want to say , know what i want , to appear inside a anytime i look inside a directory call slash home or in , case , be go to make a special directory call say something like explore and then when , look inside this directory rather than just look at , regular file system",
        "file system then become a large hierarchy of other file system ok so the root of , all , have get a single slash and then on lenox , have get thing like e t c home user be var all of these place , , could be different file system or , could choose subdirectory within that so for example , may have home extra like that could be , own file system or , may have say slash mount and , usb device so inside that , could have a file system so the point be that , choose a path where , want to load where , want to mount the file system so enough talking let , go and see some action let , go see this right so i be get kind of annoyed with this long prompt so i change , i say say ps one equal something so , can for example say",
        "like that ok and now let , see where , be ok so , will make a directory call say explore iso right and of course there be nothing inside explore iso right now ok so that be where , 'd like to mount , file system now unfortunately , have forget the exact name of the iso file but let , find , pretty quickly and for that , be go to use find so hey find start recursively search from the current directory and i care about all file which end with which match the follow pattern so that end with , so so there , be , find this ok that be what , be go to use so now i can say right hello melt if i just say mount without any option , let , , all of the current file system which have be mount but let , not worry about that right now let , instead",
        "loop back device here be the iso file that , download and let , mount that say explore ice oh ok now , give , a hint that the file system , be use be read only and in fact , expect that with iso file because the iso format or more precisely the iso nine six six echo format worth design for cd rom which be a read only medium ok so this fast system type be great if , do not intend to change anything right so right be not support inside this file system so anyway let , go and have a look inside explore iso ansi what , find ok holder stuff actually not that much stuff so let , do find this and just to see how many file and , see , be not that many file at all however , see some thing which do indeed look like the startup thing that",
        "ok so of course there , be be an empty file but , exist when i mount then now , be not , be , be over , , can not see , right explore iso now immediately be be the mount file system so any file , have inside that from , old file system now invisible to , , can not see , anymore right so time to unmount , so , do give the mountpoint there , go and now , be back so now , can see , little hello again ok so that be that be kind of quick introduction to"
      ],
      "lecture 31-Q02": [
        "ok right so let , talk about , iso image again so remember that if i give , an iso image perhaps , have download off the internet because , want to install linux somewhere , could actually look inside , so the iso image , be a single file and , adhere to the following standard the so call nine six six oh standard which be a digital format to allow , to use cd rom which of course , design for audio information but to be able to store digital information on that so so so today of course , barely see any cd rom around but , still use that format because , be sufficiently efficient to be able to distribute complete file system for example to install some new game or earn complete new operating system right so , use mount in order to mount an ics file use a loop back file system , do that before how can , download thing from the command line may have mention this before"
      ],
      "lecture 31-Q05": [
        "alright so let , talk about rate right so the big idea be , want to make , file system resilient gay right sir why do not i have there , go ok so let , have a bit of a back story here which be that raid be bear in the time where moore 's law show that , could fit more and more transistor onto a square well silicon and this be a log rhythmic scale here so , can just see the kind of every decade or so decade of time , have this proximate kind of straight line here where machine be get fast and fast the cost of per gate be be go down and the size of the feature be go down and so great , have lot and lot of cpu power if , cpu be not fast enough just wait a year plus , memory be go fast but actual persistent storage disk , be not do",
        "require more than one geographic location ok so let , think about this let , imagine that , want to start a little startup which be go to grow to the size of google how would , design a file system to service all of googles app stand out all of these application everything from gmail to doc to , website etc to , web serve , need a file system to represent all this how do , make , resilient ok so any other side of google then failure be not an option , be the common case so disk fail all the time and physical disk fail be typically between one and ten percent so , be a full more than the full time job just simply replace all those disk which be fail and in a single data warehouse , may",
        "replace those be a full time job but , want , file system to be up , would be embarrassing to say excuse , moment google have to be down for a day or two , need an extremely reliable file system without that file system , can not do anything else so , need to realize of failure mode go beyond just reduce go beyond just lose one or two disc inside a single rate so for example , need to design a system , can survive not just a fairly of a single disk but the failure of a whole rack of server or even a whole light of a whole data center perhaps two the two fiber line that be run out on either side of the building both simultaneously get attack by say earthquake or mechanical dig device there be lot of reason why suddenly , datum center may not be available to the rest of the world maybe",
        "how can , build a distribute storage mechanism that service the whole world ok so here be how google approach , back in two thousand and one , use simple redundancy so around the world have kind of two or three copy of each file today the file system be similar to kind of raid design except that , use there , go reed solomon code so reed solomon code , crop up actually in different interesting place inside computer site one of , most first use mass market use be actually with compact disc with cds here be a wonderful thing about reed solomon code that , can , mathematical code and , can choose , in term of , redundancy of information that , be prepared to accept so , can choose ,"
      ],
      "lecture 37-Q01": [
        "i get other part which may interact with the file system in order for , to cash information and , have get other part which for example , implement , javascript interpreter or hot spot compiler or something so why do not i run those with different process so that if a vulnerability be find hopefully , can try to contain any malicious attempt and make , hard for an attacker to escape out of all browser and do bad thing ok so that be one big advantage of remote procedure call in addition to be able to remote stuff be that , can actually separate the privilege of , program and into small world contain unit ok right so the next thing be let , talk about the actual code that , write , see an example of this in the previous lecture where , actually have to write some code that actually turn"
      ],
      "lecture 38-Q02": [
        "say up see daisy i get a problem here this page be not available inside , ram do not matter what be i go to do i can page , in from ram perform disk so great i can copy , in but in do that i need to first of all evict one of the current page so i have to choose a page that either i have a copy on disk for example , current code or i have to copy that dirty page to disk maybe to page store or a file or file system dedicate to support , virtual memory so now what be happen now every nanosecond every little memory right be go to result in a disk access as , page in an page out ok so unfortunately , paging mechanism be about a million time slow"
      ],
      "lecture 39-Q01": [
        "if , think of , as a bit like a github where i can create image and then post , from other people post for people to use secondly what doctor do be , have a special kind of set of file system where i can use what be call an overlay technique meaning that i may start say with unbuntu image complete image of a work copy of emblem two and then say well ok on top of that i want to delete this directory i want to add this other directory with these file and dark maintain a delta the difference between these so as , can see , be car be currently download various kind of file system image one of these will be a version of a bunch of that be build upon an in a moment when , be finish , go , have get the complete set of image that create down , little well say demo and the well site demo , be basically kind of hello world that , can get from docker and as ,",
        "for this process to see the rest of , system however be not perfect security unfortunately the kernel code that doctor use , have a kernel module run with complete colonel privilege so if i can find a vulnerability inside that docker code or if i can find a vulnerability inside a standard kind of kernel module like say a file system driver then all bet be off now i can have complete access all of the memory of the real machine so , be not perfect , be not perfect security right stalker , be sure that , will come across , in , kind of future future work , be kind of very popular tool today one last other thing , be not go to mention but just point out and see if i can find doctor up here here ,"
      ],
      "lecture 39-Q02": [
        "be try to connect to and , will see that uh this be what , be send ok , be send the following , actually can tell curl to send additional information as well if , wish and then here be the actual response header , get back which be a standard http key by the way , web browser will can also kind of tell , some basic cool stuff as well so for example , day the whale say demo that , see and in fact , show , on this web page how that well say image be create that be a system kind of dockerfile script that say ok start from a bun to run these unbuntu thing to install a hollow door stuff and copy some basic stuff into the file system of that image and"
      ],
      "lecture 39-Q03": [
        "ok right so this one again be sometimes couple set up in the interview and sometimes cup come up in exam let , have a look at think about what happen here with the kernel when , do something like the follow so here be a kind of typical piece of c code where , be go to make a file pointer there , be and , be open up this particular file so , be go to open up for read ok so of course , could write that kind of code in c but , could also write , in another language like python or rust or go etc java do not really matter what , care about be what be go out with go on with the system at this point ok so , need to think about how , traverse different i nod in order to kind of traverse through different directory in sub directory ok so , be the first thing that happen , have a file system mount at route so , will assume there be not a file system mount"
      ],
      "lecture 39-Q06": [
        "ok so let , do a producer consumer again a very kind of standard exam question but also something that , may expect inside an interview so first of all in an interview there say ok what be the producer consumer problem and the idea that , have get one or more process be produce thing so for example that may be , be read off the file system , may be a server socket that be receive thing may be a pipe , do not matter the point be , have get a stream of stuff be send to , and rather than have just a simple data structure where i just allow , to grow to an infinite size which order real system be not that great instead i want to be able to connect this producer up to some consumer and these consumer there may be more of , and i want to be able to make sure that i do not accidentally get the same what item to two different consumer and i want to make sure that , producer block if there be no spare space right now as someone i want to make sure"
      ]
    }
  },
  "topic 4": {
    "keywords": [
      "thread mutex",
      "p thread mutex"
    ],
    "mentions": {
      "lecture 13-Q06": [
        "2 minute",
        "3 minute",
        "4 minute"
      ],
      "lecture 13-Q07": [
        "4 minute",
        "5 minute",
        "6 minute"
      ],
      "lecture 13-Q09": [
        "8 minute"
      ],
      "lecture 14-Q02": [
        "0 minute"
      ],
      "lecture 14-Q06": [
        "4 minute",
        "5 minute"
      ],
      "lecture 15-Q02": [
        "3 minute",
        "4 minute",
        "8 minute",
        "9 minute",
        "11 minute"
      ],
      "lecture 15-Q03": [
        "1 minute"
      ],
      "lecture 16-Q01": [
        "5 minute",
        "9 minute"
      ],
      "lecture 16-Q02": [
        "9 minute"
      ],
      "lecture 17-Q01": [
        "7 minute"
      ],
      "lecture 17-Q02": [
        "5 minute"
      ],
      "lecture 17-Q06": [
        "2 minute"
      ],
      "lecture 18-Q01": [
        "0 minute"
      ],
      "lecture 18-Q02": [
        "0 minute"
      ],
      "lecture 18-Q04": [
        "2 minute"
      ],
      "lecture 18-Q08": [
        "1 minute"
      ],
      "lecture 19-Q01": [
        "19 minute"
      ],
      "lecture 21-Q01": [
        "0 minute"
      ],
      "lecture 22-Q07": [
        "0 minute",
        "5 minute"
      ],
      "lecture 24-Q01": [
        "0 minute"
      ],
      "lecture 24-Q02": [
        "0 minute"
      ]
    },
    "captions": {
      "lecture 13-Q06": [
        "the other way of do , and that be a magic constant so that in the future when i call the loc method on , mutex , will automatically initialize at that point so , can choose one of these but do not choose both particular mutex right so how can i find out more about these mutex lock well guess what the , have get a lot of information inside , manual for example i could all this stuff about the p thread and what i can do in a detached state which i kind of skip over condition variable so let , actually go and have a look now at but , care about which be the p thread mutex lock here , go and , will see , do not take that many parameter this be really easy , just take the address or mutex",
        "the mutex become available ok so let , write this out as an example so , have get , pthread mutex lock here and i pass in the address of , little object here call lock right and then i go off and do , critical section stuff so do critical section stuff here do critical section stuff like eg update the data structure or read from the data structure but i can be sure that if all of , code follow this pattern so after this i call p thread mutex unlock right and then here be the address of , mutex i can be clear that that that only one thread at a time can be access in the data structure so that sound like",
        "in real program ninety nine percent of the time , thread be work on something else , be only when , be actually get a result or once more datum that would actually go to this share datum structure ok so that be all basic pattern this be how , bring order to , madness all the example , have see so far would have help if , have this ability to pause or threat to implement synchronization now be a couple of limitation with rp thread mutex be which , will be able to relax when , look at other synchronization primitive but here be the big one , have to write these thing in pair , have to put the lock and unlock together on the same thread and when , finish , should clean up so , will call p thread mutex destroy right and here be the address"
      ],
      "lecture 13-Q07": [
        "one right , back so , be just manage to write over all of those result take year back to a really low number so that be kind of the problem of just let , thread run without any kind of proper synchronization so i mention there be two bug the other one actually be just an insidious copy paste bug do , spot , ok so , call pthread create here or with the same id address here which mean that , second thread id here be actually be never initialize so , never actually truly go to wait for that second thread to actually complete case so so , should fix that let , make sure that , be write into two different two different variable right so i promise , start use p thread mutex lock so here , go let , figure out how , can fix this program",
        "get , self lock will make , a global so all , program can see , if i do not use global , 'd have to pass , around or least pass a pointer around to , right so p three edit music type , be go to call , a duck i want to imagine little duck quack quack that be very important little lock and today , will use the the magic value piece red mutex initializer initial lie be ok wait so how can , use this doctor to make , program more deterministic ok some various way , could do this let , let , first , will come up with a new function here ok how do , feel about this so before do any work in , data structure , be go to grab the duck here so how do i do that as a pthread mutex lock and here be the address of , variable",
        "this compile run , oh , never finish can , see why ok so , problem be that , acquire the lock but , never let , go so when the second thread start and call preferred mutex lock , be go to be wait for a very long time an infinite amount of time , never get that duck that duck have be steal by the first red and never return so as a result the second thread will never finish so as a result rp so join in maine will never complete so as a result will never put the counter ok i think , well fix that let , put in , pthread mutex unlock there , go after i finish in , surgery"
      ],
      "lecture 13-Q09": [
        "so i can do that i can do that in , main here right so , will say pthread mutex initiate alright and i need to initialize , mutex so , will call , a duck quack quack and i do not need anything special with , doctor day ok what i need to do be make sure , be initialize ok so that be one way to do , now other way be if , be , remember be to say wait let , have the type up here ok here be , deck and case point , and i can say pthread mutex initializer so that do the same thing initializer ok so if i do that then i get can actually skip there ok i need , ok let , just delete , right ok so , have"
      ],
      "lecture 14-Q02": [
        "ok right so let , see if , can remember something about , mutex lock remember , be use the posix library the patriot and , come with four important course here , be initiate lock unlock and destroy right so remember that actually , can skip write p thread mutex initiative , initialize be available to magic value first alright so , first question for , be which one of these call will block in other word which one of these call may take a very long time , gauge , know ok if , say look , be correct right so when can add occur when can , be that , call putrid mutex lock and , do not return immediately so that will happen when another thread have lock the mutex so i like to joke about , mutex"
      ],
      "lecture 14-Q06": [
        "piece never complete ok so that be what , think be go to happen right do , agree with , because , be go to run , now and see what really happen be , ready let , go so this be the same code here , be and if i can compile , there , go wait whoop do i do i actually compile with preferred yes i good ok so now let , run that ok and do , crash wait forever no , do not deadlock in fact , finish and in fact , just print out an arbitrary number why be that ok so the key thing here be that , forgot to initialize , mutex and so there , have variable be just like a file handle , do not actually refer to anything and so rp thread mutex",
        "the return value of rp tape mutex lock so if , be wait really bulletproof robust code production code , may do that but instead because , forget , do not do anything so let , let , fix that let , go and update this key so , will ok take , line off key and till i use yeah let , use vim ok so how can do this remember , can do thing like by say ok , mutex be p thread mutex initializer here , go ok so compile , want , again and this time , get stick as , hope , would alright so finally let , fix , code here let , after , finish modify"
      ],
      "lecture 15-Q02": [
        "as , have these thing i want now consume these and act upon , right so what do i have in order to implement this well , can see just like i could have p thread thread i can have a mutex thing here , be and here be a condition variable and just like a p thread mutex initializer lip will fix that actually must be an underscore i can initialize thing use these magic constant ok so great i can now , start to use these ok so let , have a look at the code what have , get right , have get two little method here and i want to make , thread safe and i want to make sure that , cake never go negative ok so if , call , decrement function i want to block and that be where , condition variable be go to be useful in other word , can only remove cake",
        "of cake again so right so add thing to , cake be easy all i need to do be just come back come back come back there , go add one to , cake and , be go to ignore overflow issue today ok so right let , think about how , can do this well first of all i need to make , code thread safe so on , increment i want to make sure that only one thread at a time can change the value of cake so let , call lock in there and then after i finish let , call unlock ok right so will put that in a little bit and now if two thread call current at the same time one of , get stuck wait for that mutex so , will call p thread mutex lock on , mute x variable and the first one to do that continue because that no one hold the duck great raptor duck release , when , call",
        "right but that be not quite the whole story ok , have some problem here that the time that , test the value of cake if , be versus the time that , use , , do not want another thread to quickly run in front of , and eat up a piece of cake because then that would mean that , have erroneously manage to make the value of cake go negative and as , say the beginning , be not go to allow that so somehow , need to make sure that , be between when , check the value of cake here be part of , while loop that no one can can come through and change the value of cake how can , do that oh ok easy , will actually not lock there , actually want to lock before , test , value so let , put , mutex lock here p thread mutex lock",
        "ok so now sleep sorry not sleep grab the mutex so , can not actually continue until the mutex lock have be release and here be a big idea with mutex lock be that if , use , correctly , actually only hold on to , for just microsecond at a time just while , say test datum structure and then maybe use so ok that look pretty good , have get rp thread mutex and peter mutex on lock on mutex ok and now let , think about , ask what , do inside a little loop here ok so , be sleep will not peace , condition wait but , be no problem here if i ask , thread to go to sleep , go to sleep hold the duck no one will be able",
        "two thing be go to do , do three thing when , finally wake , up before , return outta peter condition wait , call p thread mutex lock ok so that mean when , finally continue when , finally go around in this code , have to meet ex again ok so what do this mean this mean all the code , write in here , can definitively say that , be hold that mutex that , have acquire , that no one can change the value of cake while square inside this code because , have the mutex and that be a condition in all of the code that , be write the first , must call pizza admin take log and if that lock be currently take sorry , be go to have to wait millisecond or so until , be release until whoever be modify or read the datum structure have finish so that be ever critical critical idea alright so will stress out again in a moment but now , have sketch"
      ],
      "lecture 15-Q03": [
        ", do need a loop , will tell , one big reason why in a moment and what do , need to do , replace the sleep where , pee thread condition weight and here be a condition variable , be go to ask a threat to sleep in and , also go to release a mutex so , be , discover , be always necessary to use a mutex because , be go to write code in here where , want to test some condition and then later use that the assumption that condition be now true so , need a mutex lock to ensure that , be the only person get there can be modify datum structure so , end up bite p thread mutex lock cave right so there be the log and then later , unlock , right so the point then be to actually a threat can block and two place , may be block temporarily"
      ],
      "lecture 16-Q01": [
        "ok oh yes right so , put the number of cookie that , remain , just read the value of jaw out outside of any pthread mutex lock so the value of this jaw could be change between , decrement in , and as print something out i think in this case that be exactly what happen so in this case angry have manage to eat a cookie and , never see that value to because angry would already eat a cookie but the time by the time , be angry with actually , actually eat cookie number",
        "some as well ok right now when i quit ok will see that out finish smith be work up smith finish but what happen to angrave k , never , never see angry for wake up why be that so , call preacher condition broadcast on both thread but , never finish why not ok so good question oh yes so now what do , do , break out of this loop but , never actually release the mutex log ok so now let , well at least the mutex lock soapy thread mutex"
      ],
      "lecture 16-Q02": [
        ", in turn apple maybe think about this as a summer project ok so great , have get something which work provide only one thread at a time be call nq if i have multiple thread then , could both get past this line but , changing of the buffer here be actually critical section i do not want two thread to see the same value of in here so first of all declare these right and so i well have a mutex lock inside here so pthread mutex look right and i can unlock that ok now this be actually one example where the encoding in decode happen at different point in , data structure and so i could actually have two different lock there , go so i could have a second mutex lock"
      ],
      "lecture 17-Q01": [
        "then one thread would win and the other thread would go hungry and therefore block wait for another slice to appear and so that would be ok , can continue , concern be though be when some weight do not block at all for either thread and both thread be try to insert at the same time so , both for example may see the same value of in or this plus plus be not atomic so , may not successfully increment the value correctly so , need to make sure that only one third of the time run out and the perfect answer that , be a mutex ok and similar over here i can not have two thread try to remove at the same time so if i care about performance may actually use two different mutex lock here so this be , pthread mutex lock and simply over here i can use a different lock because these actually be go to occur different"
      ],
      "lecture 17-Q02": [
        "to make sure that no one else can change , then , well get the lock for the data structure right so up inside here before , do anything , read a kalpi threadlock p thread mutex lock on lock plus i and then when , finish with that , can release , so , may as well release , as soon as possible let , do , right here so will now , can porp call p thread mutex unlock on that same lock be lock plus i ok right , will notice that , be modify a different data structure down here so before , do , before , do that , should surround this with , lock and unlock call for for the other mutex lock associate with that data structure so that be go to be lock plus i"
      ],
      "lecture 17-Q06": [
        "a very general barrier because i just want to think about how , can use a p threat condition wait call to implement , barrier ok so the idea that look , have get this share variable here be just a global variable an multiple thread be go to call power so let , keep track of the total number of thread that have be there call this so , will have a little counter in every time a new thread call this , be go to implement , counter right now then what if two thread call this be exactly the same time this be not thread safe so i will actually need some kind of lock here so , will have a p thread mutex lock k right and what else do i want to do well if , counter have not yet reach eight then i want this to bed to go to sleep"
      ],
      "lecture 18-Q01": [
        "hi welcome to lecture eighteen so let , start off with a challenge , want to make , barrier just use a single mutex lock and a single unlock core so that seem impossible let , see how , can kind of get unstuck and then talk about why this be actually a terrible barrier ok so here be a sketch of what , want to do here , want multiple thread be able to call or barrier function here will have a keep some kind of count for the number of thread that have get stick inside , barrier and then , want to wait until somehow wait until the order the thread that , need about actually call this barrier function and , account have incremente to the right value ok so let , have a think about what , need to do here first of all this plus plus be not atomic so , definitely need to protect that with a p thread lock so only one thread at a time can write this so before call count , definitely need to call pthread mutex lock"
      ],
      "lecture 18-Q02": [
        "ok so , have kind of talk a little bit about this idea before so , could i implement p thread mutex lock just by disable interrupt on on the cpu so the idea here be that if , code be run on the cpu if i disable interrupt then i can not be stop become agent smith out of the matrix that now i own the cpu so no one else can can take , for , so one of the limitation of this first of all that yes , can ensure that , be the only one go into the critical section if one there be only one cpu ok so if i control the one and only cpu and i can not be interrupt then i get to do everything inside the critical section until i give up the cpu ok so provide"
      ],
      "lecture 18-Q04": [
        "if , have a mutex lock set if , require the mutex log then only once bit of code can be run , at a time so there be no long any opportunity to quick to say oh and then quick imagine these two line execute between these two so so or fix be on this side be to make sure that , have actually call pthread mutex lock before , start change these variable so lock on the same mutex lock and then afterwards , unlock , ok right and on the right hand side , can assume that , have already lock , because , be go to unlock , anyway be part of the p three condition wait call so now , have do that even if , want to quit , be"
      ],
      "lecture 18-Q08": [
        "how much memory on the heap do i need the size of , , little type here and a reminder that yes these be variable and , represent some memory sure but the actual object , , can think of , like file handle that , actually exist as part of the part of the kernel so that be why i need to call p thread mutex initiate please create an object for , base on store a reference to that inside this memory structure so , have get , two lock now let , see what happen right so as part of the read , be go to call read lock ok so , be just go to call p thread mutex lock and then afterwards petere mutex unlock key and then the right i first of all , be go to get the right lock then , be go to get the read lock and , be go to do some writing so what do , think about this be mutex lock sufficient to implement this right so take a moment to think about that and"
      ],
      "lecture 19-Q01": [
        "have a little bit of thought , could see that if , use of this data structure change if , have now have always have writer then then , poor reader will never get a chance to continue so , have make a data structure which be great in the case that there be many many many more reader an be only occasional writer so , tend to read more than , right ok so that be , implementation for cs two forty one and as i hope , can see be that , have now , have actually get along way from when , first talk about a kind of a simple synchronization idea of use p thread mutex lock and unlock ok so , advice to , be see if , can write this implementation from scratch start with"
      ],
      "lecture 21-Q01": [
        "hi welcome to lecture twenty one so let , get start with a bit of a code review suppose , be give the following code and ask to review , , ok what do , think of the following so how can , improve , and what be , purpose so , be call acquire and for gravity to fit onto this slide , have say pmt for p thread mutex if this truly be in the code i may say why , do why do , have this typedef let , just stick with the regular type but anyway so , get two pointer too mutex a and b alright so one thing i do like be that , be use assert right so this check that the a pointer and b pointer be non null so , be go to point hopefully to valid object and that , be not equal alright so that be good , be glad that , be use assert i personally may have put these on separate line so that if , do fail then , would have actually dissert would have tell , which line , fail and therefore which actually which condition cause"
      ],
      "lecture 22-Q07": [
        "ok let , do a code review on some attempt to write a temp to write a ring buffer and let , see what , can see about this ok well , be so , have get , buffer of sixteen slot look like sixty void pointer so , can use , for any kind of pointer , be go to keep track of an in and out a number of item and , be use condition variable so , first concern here be these thing every initialize ok let , choose a darkish red ok so i better check that these thing be initialize if , do not call patriot mutex initiate the very least , need to use the magic constant p thread mutex initializer ok so let , check that ok what else can , see in , little code review ok so , be use a pizza at mutex lock but , also have this infinite",
        "if i be to make this code more performance i would consider use two one for the end q thread and one for the d q threat but anyway so will sleep in there and right now , be call in broadcast every time that , manage to enqueue something that be kind of overkill maybe , only want , want to call broadcast when , see if , know that there may be a thread sleep inside this condition variable but , will leave that for now because , have still get work to do on the d q as well so let , get that sorted so what do , get so far right so look back over nq yeah , be good that , use a p thread mutex lock , like that so that only one thread at a time can be work in this code but"
      ],
      "lecture 24-Q01": [
        "hi welcome to like twenty four , be go to start with a quick code review let , see look at this attempt wait a fix sized ring buffer and , will see if , can figure out how , may go wrong ok so some of the thing that , want to ask be be deadlock possible in other word could get stick so that be never able to continue be underflow possible in other word could , be that , attempt to write so attempt to read some datum that be not actually inside the ring buffer so will just be read back some garbage information or perhaps overflow as possible which mean that , be able to put more datum into , buffer then , can actually hold so presumably , be go to corrupt something possibly value that , have not yet write out so what do , get here , have two counting semaphore and will see the s one be initialize to two hundred and fifty six so this smell to , like"
      ],
      "lecture 24-Q02": [
        "hi welcome to letter twenty four let , start with the code review case so , be go to do , be go to look at a fix sized ring buffer and look at an implementation and , know the follow thing about , so first of all , use count semaphore and the first one s one be go to be initialize to two fifty six so this be kind of count the number of free space be or how much capacity be leave s two be initialize to zero so that be count the number of thing , have actually get inside the buffer right now and then , have get lot of thread produce thing and consume thing as well ok so here be some question that , may want to ask in sort of code review first of all can , find a way that deadlock can occur in other word when good , actually get stuck and if so under what condition could , be for example when , get completely full or completely empty be underflow possible meaning that be , possible for d q to return something even though , do not actually have anything inside the buffer right now in other word , will just return some multivalue that happen to be store inside the buffer"
      ]
    }
  },
  "topic 5": {
    "keywords": [
      "link list"
    ],
    "mentions": {
      "lecture 03-Q03": [
        "2 minute"
      ],
      "lecture 07-Q10": [
        "1 minute"
      ],
      "lecture 08-Q07": [
        "2 minute",
        "3 minute"
      ],
      "lecture 08-Q08": [
        "0 minute",
        "1 minute",
        "2 minute",
        "3 minute",
        "4 minute"
      ],
      "lecture 08-Q09": [
        "0 minute",
        "2 minute"
      ],
      "lecture 08-Q10": [
        "0 minute",
        "1 minute",
        "2 minute"
      ],
      "lecture 08-Q11": [
        "1 minute",
        "2 minute",
        "5 minute",
        "6 minute",
        "7 minute"
      ],
      "lecture 09-Q01": [
        "1 minute",
        "3 minute"
      ],
      "lecture 09-Q02": [
        "1 minute",
        "3 minute",
        "10 minute",
        "11 minute"
      ],
      "lecture 09-Q04": [
        "0 minute",
        "1 minute"
      ],
      "lecture 09-Q05": [
        "0 minute",
        "1 minute",
        "3 minute",
        "4 minute",
        "5 minute",
        "6 minute",
        "7 minute",
        "9 minute",
        "10 minute"
      ],
      "lecture 09-Q06": [
        "1 minute"
      ],
      "lecture 09-Q07": [
        "0 minute",
        "7 minute",
        "8 minute",
        "10 minute"
      ],
      "lecture 10-Q01": [
        "0 minute"
      ],
      "lecture 10-Q02": [
        "1 minute",
        "3 minute",
        "13 minute"
      ],
      "lecture 10-Q03": [
        "0 minute",
        "1 minute"
      ],
      "lecture 10-Q07": [
        "1 minute"
      ],
      "lecture 13-Q04": [
        "2 minute"
      ],
      "lecture 14-Q03": [
        "0 minute",
        "1 minute",
        "4 minute",
        "5 minute",
        "9 minute"
      ],
      "lecture 16-Q01": [
        "0 minute"
      ],
      "lecture 17-Q04": [
        "4 minute"
      ],
      "lecture 19-Q01": [
        "0 minute",
        "7 minute",
        "10 minute"
      ],
      "lecture 19-Q08": [
        "10 minute"
      ],
      "lecture 25-Q05": [
        "1 minute"
      ],
      "lecture 26-Q01": [
        "11 minute"
      ],
      "lecture 33-Q01": [
        "3 minute"
      ],
      "lecture 37-Q02": [
        "4 minute",
        "5 minute"
      ]
    },
    "captions": {
      "lecture 03-Q03": [
        "perhaps , if , be write a game , maybe , would be well to preallocate a lot of memory for the current scene and then only free , after the current scene have finish . so let , go back to , program then , where , be actually kind of think about do thing manually , where , be actually allocate [ indistinct word ] . so what do , think about this ? if , free up some memory and then , for some deliberate or accidental reason , , free , up again . alright , be , really a good idea ? no , of course not ! , be go to crash . why ? because when , implement free , as , will in the future portion of this course , the thing that , have to do in free , be to change , link list structure . the heap allocator be go to keep a record of all the available piece of memory that be currently be use and all available piece of memory that be currently could be use in"
      ],
      "lecture 07-Q10": [
        "hey , be on the stack and that be what , be ask for where be , age and , be , be a little stack variable some automatic variable here , be , declare , right here so i know for sure that actually ok , be just useless code so that be definitely valid code and always true so , will print yes ok , will present d here be go to be forty two ok now what do , do make some link list in see ok this can be tricky than , first appear ok so , have get , first link list , have get some struck somewhere now when , see the word strike do not panic just consider that a bit like a class in c plus plus except there be no constructive 's no code be go to run a tool all , be do be simply say hey , have get a memory layout , be go to define somewhere else inside , code so the compiler know"
      ],
      "lecture 08-Q07": [
        ", idea of heap just use a simple link list and each link each node in , link list datum structure just represent a segment of memory that be either currently in use mean , be be allocate or be available be free so , will keep , link list in sorted order and everytime malloc be call , be go to actually walk through that link list look for place that , can use to satisfy that request for some contiguous memory right when , find a piece of memory that third be large enough and free , be actually go to do two thing be actually go to obviously return that address back to the caller so that , have , memory that , request but the piece of memory that , find be probably large than what be request which mean there be go to be some unused space at the",
        "for that unused part so that future call to malloc can potentially make use of that spare space similarly when free be call , be go to do two thing , want to mark that entry in , link list be now available for future allocation but , could be that , link list actually have two neighboring entry which be both free so at this point let , clean up , link list so that rather than have two separate entry , can represent that as just a single entry of a much large space and similarly , could i actually think about the fact that there may be some spam space behind the current entry as well but , will not go into those detail today , be not go to implement a full piece of work c code here instead , can think about conceptually about how these placement"
      ],
      "lecture 08-Q08": [
        "hi ok so let , have a look at good fit right , be go to walk through , allocation so the first one be uh i need to find three kilobyte please three couple light be contiguous space ok so where do , start right well right now i have a link list entry a single entry into time i link list which correspond to all of this free space so of course , be go to use that so what do , do let , split , up into two entry , be go to now have an entry for the space that , have , be go to return and so this be now allocate right and eventually , will return a pointer to the beginning of , soapie will be look at this and , second entry will be , all of , free space ironic unallocated space ok right there next malloc course i need four kb please right so let , go through , link list look for an entry that be sufficiently large and available ok so not the first one of course but the second one be great let , take that so again will split this will mark",
        "and of course , be go to turn a pointer to the beginning of this so this eventually be where pb be go to be a side and what about the remain space well , have get a third link list entry now for all of the remaining free bite in , heap then be call again with the three kilobyte to request case so again , walk through , link list structure and , can ignore the one which correspond to allocate , entrie but here be one which be a non allocate an sufficiently large so let , take that and split , again two or three kilobyte be go to be here for a pc , be go to be return a pointer to pc will point to hear ok and finally , have the an entry for the remain space ok right the next",
        "so free be go to be call on that point be right so , be time to update , link list case now be just wipe that away right this now this entry now actually correspond to some memory that , can reuse in the future ok and then next , have another malloc call say hey i need three kilobyte of course be malloc call could actually be a kellogg call but for the problem of just choose where to put this memory , do not matter so , have get a three kilobyte request ok where should , put , now remember , be do good fit so with good fit let , look at all of the entry which be available and sufficiently large and , will choose the one which be the small ok but of course at least three kilobyte so , have get a choice",
        "one at the top and of course the one at the top be there a good fit be actually be perfect fit so let , return that be o p d be go to be point pd with , turn , caesar off ok goodbye scissor pd be go to be here so in fact , could write this in here that pd be go to be equal to ten kb ok right and then after that , free pa ok so , can update , link this structure to now say this memory be free but remember there be something else , should do be that right now be link list structure do not realize that these two piece of memory that be next door to each other actually could be coalesce into one so let , do that let , update all link list structure so that rather than have two separate item , be cut out these piece there , go ok , just have one giant entry for all of this between zero and the",
        "kilobyte of available memory now if , do not do that then if , request say come in for seven kb , could actually assign that but accord to , link list , do not have enough space so , be important to do block coalesce sing so that be link list structure accurately represent the fragment that , have available ok so right so , free up pa and the last thing to do be satisfied this request for a one kilobyte ok so , have , have only get kind of one area available so that be easy so now , be go to split this into two , will have the area that be go to be assign for pe answer p be go to be back in fact in the same piece of memory that be originally use for pa and now , have get all of , remain space in one nice big free chunk which"
      ],
      "lecture 08-Q09": [
        "hi ok so let , look at bad fit and k , can this remind , get three four and three right so well , will do this at high speed initially a case so , have p a and then pb and then p c k all in there right and ok so that be , little pointer thing ok right so , have do all three allocation accord to the scheduler buff cape and some free space at the end right what happen next next , free up pb right so , be pb and , be now go to mark this space as available so that be easy will just to update that particular entry inside the link list to say this be no long some allocate space but , be actually available now what right so now , want to allocate another three kilobyte ok this be where",
        ", free pa so so now the beginning of , link list be available ok so let , annotate this in a moment so what do , get , get some loop , have get to get there , go right there , get the beginning this be not available so the story so far be that , have get this space be use for pd i then , have get a space and then , have get some more memory be use for pc and then , have get another space and some more byte available ok so the last allocation , be go to do be be malik for one kilobyte right so if , be do well at this point the answer would be obvious , have get the perfect apartment for , right there but instead bad fit be go to look for the maximal"
      ],
      "lecture 08-Q10": [
        "hi so let , have a look at first fit ok right so first fit , will run through the same allocation as usual right so nothing change there let , quickly set those up right so i have p a be go to be at the beginning ok so that be , pa bite and then , have ok then , have pb ok so right so , go pb , can be there and then , have pc oops , , need one more for pb then , have pc right pc , be go to be these three block here ok right and then , get the free space at the end ok so right so i will not bother to put all the little line in to indicate this because , have see , so many time but , could understand that , be go to link list which be hold this representation right so then , free pb right and now this become a free",
        "more than four kb ok so what come in next , have allocation request for let , choose a nice color here ask for this ok so , have an allocation for three kilobyte ok now , be do first fit and the first fit be the scrappy doo approach here which be that let , just find an entry inside of link list that be which work and as soon as , can find a viable one let , stop so will go through link list the first entry that be no good because i actually correspond to a piece of memory that be in use but , second entry ok , be bounce along tile link list and , be iterate through , , second entry be of size four which be fine , only need three kilobyte so , be do , do not need to look any further through , link list so , do the usual",
        "three kilobyte so will split , into a three kilobyte which be go to be available for the caller and rpd will point to , beginning of that right and into , link list , will have a new entry here with the one kilobyte which be remain here ok and then what happen next right so then , free up pa ok so let , update be link list ok there , go so that but this entry here be now available turn off , scissor ok and that be the one kilobyte request come in ok i think , can guess what first fit do by now that start look at , link list oh look the very first entry that , have look at be great , be big enough so will split up into the one kilobyte that , want an update"
      ],
      "lecture 08-Q11": [
        "say , link list or whatever date other datum structure i want to use which be useless to , or i have to keep iterate over , in order to find a useful piece of memory that be go to work for the next malik request right so what be the outcome of the three placement strategy that , have see so surprisingly good fit be not the good ok what do that mean let , give , an unhappy smiley face here ok so good fit should , sound google the beginning here be , unhappy smiley face right but what be the problem of always actually try to find the fit that be , close well something that be not quite obvious from , very simple kind of little integer example that , just do here be that real memory allocation can differ just by a small number of byte so for example imagine , have get a piece",
        "so now , have get a small piece of just six six byte that no one be ever go to be able to use effectively and , be very deep inside , link list etc right so , be go to take a long time to find and , be go to slow , performance down so because memory allocation tend to be scatter or many different size , end up with lot of tiny hole because invariably will find something which be pretty good but just a little bit big than what , need and so , end up with this additional entry which be no use to anybody because , be so small so just a simple good fit actually do not have the good performance because now , have a very long list link list and , end up with lot of micro hole which will never use , have to keep iterate through , ok so sorry best fit , will good idea but , turn out in practice , do not actually perform that well ok what about bad fit case so worth , do not suffer from this",
        "to keep look through , link list jump through a link list be actually kind of slow , be not do memory any favor because quite often now , be bust , cache , keep go back to different part that make memory to say oh i need to follow this link over there so , be not cache friendly which mean i often , be talk to main memory which be so slow right so , have get , have get a performance issue there and then secondly with good fit , tend to organize thing so that what let , have a think about this that if , have get some some fragment case so , be go to kind of mark this that i put a bit of space there a bitter taste bitter space there ok if i have regular sized request early on inside ,",
        "with first fit be that the small fragment be at the beginning and , get kind of increasingly the large so for very small fragment , can find find very quickly and if there be large fragment here , would be immediately go to be go to be use up of course for , and so the large space happen tend to happen later on in the link list ok this so link , first with first fit be limitless do team seem to have some kind of some pseudo structure that , do not necessarily expect which , actually discover through simulation and a little bit of reasoning , can kind of say oh ok i can kind of see that i can kind of see how the size of the space tend to increase over iterate through the link list but maybe , be not obvious",
        ", can see how , have different fragmentation pattern all the other yeah sure ok so , be not go to talk about , today but if , would implement a fast memory allocator i personally think nextfit be kind of fun where rather than always start at the beginning of , link list , have some other pointer that allow , to start from a different spot inside be link list that would also have a different fragmentation pattern , be go to put this in parenthesis though because write a memory allocator be tricky and so , advice be always start start with something simple and only add complexity when , have something work and only add complexity after , have do a git commit that , have actually get some work code so that"
      ],
      "lecture 09-Q01": [
        "now a couple of quick point about this be that i do not have to keep write struct metadata entry each time every time i want to talk about this piece of this piece of this structure i have to when , be talk about a link list so here be , link list so that i can chain these together but for other time i do not want to have to keep write the word stripe let , be lazy and for that , be go to use the c word call typedef typedef , can think of be just an alias for example , could typedef float to say number and then later , may change , mind and say typedef a double to , number type so , think of , , be just a simple simple alia which mean that later on in , code i can just use the following type and , be a",
        "call malloc i can walk through this link list look for available entry and hopefully , have get one which be of sufficient in size and available wait so will need to check , flag for size and free etc to see if , be go to be sufficient for the malloc request and at some point , will get to the end of this and the next pointer work pointer nothing will just set , equal to null which be kind of a standard system program way to indicate that , get to the end of a link list ok alright what else to talk about this i think that be go to be , , can make some convention about how to insert and remove from this obviously only the head pointer that point to the begin of , link list so if i want to insert into , link list insert at the very front , be go"
      ],
      "lecture 09-Q02": [
        "see if , have any available apartment which be large enough and available to satisfy the request for the so many byte that , need if that fail then , will go back to the system and say timetable be some some more heap memory please and for that will use sbrk so will only happen in , plan b , go to go there if , can not find useful piece of space to be allocate early that be now free ok so let , have a look at that right so scroll up here right so , be go to need , first of all , a way to iterate through , link list and this keep track of two thing thing where , be in the link list that be , little point appear and the good apartment , find so far so remember those be placement strategy that be what , want",
        "size may be save four byte eight byte later free may be another say four byte eight byte later the compiler free to put some padding between variable so the alignment of each of these variable make sense and realize that these entry just like member variable inside a c plus plus class or field of a java object be go to coeur each time all , need to know be the base address of where that struct be go to start ok so right let , go have a look at this in so , need a little loop that say well so , be look at a valid entry in , link list so keep go until i get to the end i need to consider the current apartment that , be look at be a good one so , first criterion and this be important of course be that , be currently free ok what else well , need to make sure that , be sufficiently large right so how can i write that ok let , get a little pen here right so",
        "that be the actual number of byte the user can use and , be important for , as well to set the fact that this entry in , link list be go to be unavailable , represent some memory there be actually be take ok and use right so what be this other piece of code do back online thirty one here so , actually need to get some memory for the user right so let , find out the current top of the heap so that be go to be up here let , change color red ok so point to here be go to be look at the top of the heat right now and then , call s break for a fourth time to say alright and the user need let , say two hundred byte so there ya go right so , have just push up the top of the heap now by another two hundred bytes byte right",
        "that the user after a lot of memory and that fail so this let , check to see if , do not actually get that memory at which point , lock implementation be go to return null right what be the last part that , have not talk about oh yeah , have not actually update be link list so let , do that first thing , be go to do be for , new metadata entry choose one , be go to change this next pointer to look at the old head in other word the original first entry of , link list then let , change that global variable head that , look at about look at the very beginning with that static variable so , now look at , knew entry and finally , need to return something to the user should , return choose now that would be a mistake that would be the wrong memory address return , actually want to return the piece of memory that , allocate"
      ],
      "lecture 09-Q04": [
        "hi so let , talk about how , can implement free ok so the first part of implementation be trivial if , call free with null be there be nothing to do so let , test for that right so if the pointer value with zero in other word if , be null then do not do anything just immediately return ok for what about all other value well remember , have be link list and be link list be of these metadata entry object each one of those have a size next pointer and whether , correspond to some maybe that be commonly in use or not ok so let , walk through that link list look for the entry that correspond to this piece of memory that , be try to free ok so how do , do that right so , will initialize , little , available to the beginning the link list and , have get that static global variable there call head right so let , get start at the beginning and keep go around whilst p be not null and at the end of each iteration update pea in the next pointer",
        "be a mistake to directly compare p with the user address be pass in with the parameter value because remember , do not point to these metadata entry instead , have , internally have get to access that from , struct so let , use , metadata entry struct here and look at the pointer value and see if , find the right one if , have great now , be time to mark that entry as available for future allocation right how do , do that be this easy , can just say ok p let , update , counting here so that , do not need to change the size just that the entry be now non zero for free ok so future call to malloc will look at this block and consider , provide , be light enough of course ok so that be easy for a little bit of a performance boost no point go around be link list anymore let , break out of this loop ok and , do not"
      ],
      "lecture 09-Q05": [
        "ok hi so , have get a couple of question for , first of all why do this implementation suffer from false fragmentation when should , split block and be , use explicit or implicit link list implementation here so let , go for the first one what do , mean by false fragmentation ok so this backtrack for moment and realize that , be talk about , heat which be just one large piece of memory but on top of that , have layer a accounting system be use link list to say where , can have this chunk or this chunk or this chunk this block be free that blogosphere that block not free etc so , have put that as a perspective review on top of this really just a single large piece of memory so here be , problem be that , can end up with situation where , link list say yes do amuse memory here that be available and some use memory right next door that be available but what , do not do be consider these conceptually",
        "each of these say be ten kilobyte and request for twenty kb come in , would not realize that , could have actually use these two block if , be both free now fix this week be a little bit of thought and , have get to be very careful the pointer because remember that actually what , have be come back have a different color be some area of memory that , have decide , be go to use to hold that metadata structure for little link list datum so , have get one there an one there and if , get more may have one just here as well etc and inside that yes , have a little pointer that point to the beginning of the user datum come and simply for",
        "in the middle here then that be fine and no one else care so , have to all , have to do be make sure that , remove , from all link list in order to kind of coalesce these so , be go to end up with , original metadata block still point at the beginning of this one but conceptually , be go to update the size information inside here so that let , say , be , be twenty thousand and say thirty two bite as the available slicer this ok so that be block coalesce sing and when be the good time to do , answer inside free that be a great place to do , because , know that , be free one block and in practice here be a couple of quick hint first of all , may be that , want to coalesce with a free block right next to",
        "in the future will need a way to be able to kind of investigate what be behind , and afterwards and before , think about doubly link list be actually go to be another trick , be go to show , later on in this set of lecture video ok so , want to coalesce backwards when , be implement this there be two way to get , into trouble the first be to walk off the end of the world so , keep go past the end link list and , try to follow a null pointer so remember that , link list do actually stop the other similar way of fall off the end of the world be , may be actually at the very beginning of , link list and try to walk backwards actually be not a valid operation because there be no more segment behind that so be very careful when , implement this and the last quick comment be that , coalesce sing may actually coalesce to the left and to the",
        "coalesce sing then , end up with this problem of false fragmentation , view of the world be that , have lot of small space in , apartment block but actually that be just where , put the partition the false partition in really , get ton of contiguous space ok so that be block splitting , can also do the opposite which be cur lesse block so let , go back in for a moment and have a look at , code here where , work remember through be link list find a viable entry here and if , do , decide to mark that particular entry as unavailable and , return a pointer to that entry ok so i want , to imagine the follow suppose , have a a malloc of a large amount like let , say hundred kb and then , free",
        "to malloc there be be link list be empty so , go to the system , call ass break and , get , plenty of space enough space to hold the metadata and then immediately after that one hundred kilobyte then , call free what do , do at this point well , do not call espec again , just simply update , metadata to say that hey the memory , be point to be now available for free and then , lock be call again with ask for one kilobyte so what do , do , simply change the free point to here to be zero what do that do to , memory well the caller have only actually request to use one kilobyte of",
        "go to be unused and , could have do a well job here , could have actually put a link entry into , link list to say actually not only how do i have this piece be in use , have get a new entry of available apartment block here and there be another metadata entry that i could write in there and , be pointer be go to point to the space that future caller of malloc actually actually use if , want ninety nine kb or less ok so be there any gotcha in here yeah ok so here be the first gotcha that when , decide to do this block splitting realize that the metadata entry",
        "the time to do that be when , decide to reuse a block and that there be sufficient space so in other word , be go to write thing like ok , have god choose and let , have a look at the choose size and see if that be much large than the size be request so will have some kind of tweaking there to decide some parameter in there to decide what point what be , threshold go to be that , want to create a new block ok right so let , go back and see if , have these question alright so , talk about block splitting and false presentation and the last question for this little video be , be , implementation use an explicit or implicit link list so this implementation use",
        "memory address explicitly , can talk about the memory address of p , can not talk about member of choose , could talk about the memory address turn to , lock so , have lot of memory dress and in particular link list when , want to jump from one entry to another , look at the entry code next and that be an explicit address , be get a memory location all the other way to do this and the answer be yes so the alternative be to work with an implicit link list and with an implicit link list , start talk about the size of thing and , can then use those use pointer arithmetic to calculate a new address so for example if i have an integer pointer"
      ],
      "lecture 09-Q06": [
        "just go to say ok , find what , want right and in fact because , find , , can now stop iterate through the link list so how do , do that , can either add an additional clause or while expression to say and choose be null or , could just write break here to say ok stop go to the link list right so that be how , have implement first fit the placement algorithm i mention be bad fit and in fact there be some other so for example , may want to play with next fit as well with thing like nextfit be careful because this be now another variable that , need to maintain and if , start implement block code lessing block splitting keep track"
      ],
      "lecture 09-Q07": [
        "ok so let , start talk about how , can improve a free so first of all just a reminder that now , can see that with realloc if , could actually access that link list when real work be call , can start write a real lock which be fast but what can , do about free how can , make free fast right now , have an implication of free that walk through the link list look for that user pointer but have to be unallocate can , do well yes so here be how , can do , use an order one approach what , need to realize be that if , put in the metadata directly inside the heap as well then the follow be always true that if this be the heap memory that the user be go to see then geass before to the different colour there , go",
        "into the metadata that malloc be use to keep track of all the allocation which be why , program will crash in interesting and exciting and unexpected way later on alright so great , have get , be fast the allocator be that the end of , haha no but , be enough for , to get start with the cs two forty one mp so let , just kind of review what , just talk about , talk about block splitting and block coalesce sing , have talk about make a fast allocator maybe if , be actually look for just three block maybe , should have yet another link list which contain only the block which be actually available so i imagine , walk into the apartment manager and , say i like like in an apartment please of this size ideally want , to only look at the list of apartment which be actually available today",
        "actually in use and will be a waste of time to check so perhaps , should have a link list to make , fast to find apartment block for , be ok and let , see , will mention these and i want to get down to body into value tax yeah so some other thing that real program do be to have many pool for say different object , may decide to put all say sixty four bytes object into the same area one advantage of do that be to reduce fragmentation if all of , object be the same size then keep track of which slot be available or unavailable become much easy , can start use",
        "hunt through , list and do block coalesce thing i can just simply declare that the whole memory pool have be wipe clean and reset , link list back to nothing so so memory pool can be very very useful when , know the lifetime of all of the object be finite and , want to clear , all all in one go now when , start talk about how well or allocator work , can talk about , talk about internal and external fragmentation so the idea here be imagine a truck full of shoe except , shoe be not just throw into the back of the truck know that put inside nice little box so that mean that the waste space in memory between the actual use"
      ],
      "lecture 10-Q01": [
        "hi welcome to lecture ten where , be go to start look at how to build a memory allocator and today , be go to start by think about how , can build a well version of realloc ok so here be the story so far i have get ok there , go wait , little link list which be go to represent all of the allocation that i have and for each entry , be go to make a note of whether that , correspond to piece of memory that be free and other word available for future allocation , need to make a note of , size in other word how many byte the user could actually store a certain location and also i have a pointer to where the user area actually go to start which typically be go to be just after the end of each one of these entry but , do not have to be so that be one advantage of have this little point here ok so what do , need , also need a way to make a note of where , link list start so now , have do this typedef"
      ],
      "lecture 10-Q02": [
        "byte into a new area so let , just kind of think about how this may go wrong let , write a really kind of simple implementation of real to begin with which always just copy to some new memory ok so , do something like the follow here be a simple idea let , get malloc to do all the work flow will get , have already write be malloc link list code that seem to be work so let , just rely on that ok so , be go to say right , log get , some new space and , be just go to copy everything across ok so this will be , , result and i want to copy some bite so , will use mem copy into result from old and how many byte know size key and then return result be , do almost k , have get a few little trick here , actually should remember to free up the old space ok so whoop so the , have get something then that will work be very simple simple sometimes simple be great",
        "go to get that right so somehow i need a way to get , link list entry for that give so somehow i need to go from the old tube the link list now , have show , one way to do this before with three where , just walk through the link list look for , entry until , find one with until the pointer of the link list the point of entry of that link list datum actually be equal to the user area but maybe , have actually make a decision to have a well perform malloc and free so that the metadata entry can be find in order one way maybe , have say that the metadata be directly before the user area ok so how would , write this code so for that here be what , will do",
        "ok so last thing be what about the next pointer so i want , to look at where , current entry be look so , can look at , and , entry will look at , so let , update , entry next pointer to b new entry so great now , have insert , into , link list chain ok there be other way to calculate the size , can do difference be two pointer if , do that as usual remember to always be work with void pointer or character pointer void pointer , be not suppose to do pointer arithmetic on but in practice all modern c compiler will support that okie right so , scare out some idea here as , can"
      ],
      "lecture 10-Q03": [
        "hi sue allocator can not only allocate memory reallocate reallocate memory when the user want a bit large space , be small space , can also tell , how well , be do this kind of sketch out and see what that would look like ok so this story so far , have get , little metadata entry and , be go to represent that use with a link list of all of , entry and let , imagine the kind of thing that , may want to print out or know about in other word how do , want to instrument memory allocator well perhaps , care about thing like the follow like the total number of byte which , have actually give to the user right now pass , care about the overhead of , implementation so remember that every time , have make an entry that be additional ram that , have to buy that , be use internally that , can not actually give to the program so that represent an overhead , also may care about light switch not available so , will talk about that in a little bit",
        "this well remember , be just go to walk through this this link list so i need , entry point be here right ok , be the pointer and will start by look use , little global variable here , little static variable head kate and , want to keep go around whilst i get a valid point at once that get to null , be go to stop so the end of , loop , be just go to use that next pointer to look at the next one ok so let , think about how many byte , have actually give out right now , case so i could have a little counter here right so will have say a number of allocate byte right now remember that , link list represent"
      ],
      "lecture 10-Q07": [
        "one bit of information for each chunk ok which be a lot more efficient than be link list implementation maybe , could actually beat malloc by , speed of allocation perhaps , can do well say than the link list that , have see so far the link list , have see so far in , implementation include all of the all of the entry inside be link list include the allocated and unallocated entry perhaps , can write a fast version over heap allocator if , have a second link list of only the one which be actually free so , basically have what be call a free list maybe , could efficiently find an entry base on the size so perhaps , want to handle small allocation like a hundred and twenty eight bite very different"
      ],
      "lecture 13-Q04": [
        "section code for example suppose , have some code from cs two twenty five that be go to say insert a link right on a data structure and this price be go to work in the link list price be go to work on a vector and inside that code , realize that there be a moment in time where , be go to say of mess with the pointer or , be go to copy the entire data structure from , one sized piece of resource to say a doubling of the resource some other piece of memory over there ok so that be a critical section what , need to do then be to block any other thread that want to do a similar operation , want to somehow say right i want to give , exclusive access to this right now so the only , this comment thread be execute in this code get too get to modify this data structure anybody else that want to insert something into , data structure"
      ],
      "lecture 14-Q03": [
        "ok , so , have get some code maybe some stuff , have write say inside cs two twenty five or an internship or , have get , own startup , and now , want to make , faster ! so , want to make , so that actually multiple thread can use this code at the same time . okay , so let , start by just look at simple typical kind of link list code . perhaps , be go to write , in c++ perhaps , be go to write , in c , perhaps , be go to write , in some other language . , do not matter . the idea be all the same . ok so here be the goal . , be go to try to modify this code to be what be call ' thread safe ' in other word , can actually use , with multiple thread so along the way , be go to fix some error as well . ok so what do , got . , have get a pointer that correspond to the start of , link list . in more complicated example this may be in a separate data structure but this be good enough for , little example here . ok , and then , have get two method to",
        "or remove from the front of , link list . ok , right , so let , see . what do , do now ? can , spot any error in this code ? ok , can see one already . , be attune to this one . this look exactly like this . this be not a good sign . ok so the goal of this prepend method be to be able to create a new link with this value . so how do , create a link ? well , first of all , , better get some memory . the easy way to get some memory that be not go to be immediately deallocate when , return from this \" function be , of course , to use malloc . \" \" hey malloc ! , need enough    \" space to hold , link structure . right so the error here be that , actually want the size of the struct",
        "to point to the same thing . right , so in do so , skip over , friend here and , be no long apart of the link list , but , still be take up some memory , \" so , better remember to tell the heap , \" \" oh ! by the way \" \" , be do . \" \" ok , , do not want , . \" \" right so the observant among , may say \" \" ok , will \" \" this always work ? \" \" one concern , of course , be that what \" if there be nothing in , link list . what if ' head ' , for example , point to nothing , to null . ok , so then , code would crash and here be where , would crash . , would crash when , try to dereference this pointer . so , have get a null pointer pointing at address zero and then \" , say , \" \" ok , let , try and read some offset from that . \" \" so \" maybe offset 0 or offset 4 .. so , end up try to read address 4",
        "ok , but what , do like about this code be that , do not free that entry here , until , have finish use , . so , have pull out , for example , , value . , have see plenty of badly write link list code where , free , \" first and then , say \" \" ok old link that do not exist , \" \" tell , about , next pointer . \" \" that may work if \" , be lucky , but be actually undefined behavior . ok . so right ! now that , understand how , work , let , see if , can understand how to make this code ' threadsafe ' . right , so , need to identify the critical section : ' where be , that , only need one thread at a time to be run . ' and so , know that malloc be threadsafe . , be perfect ok for multiple thread to call malloc . so if list_prepend be call in two thread at the same",
        "the value of head . ok so these line be    important to define as a link list . right , so , will say that ... ok ... this part in here be go to be protect by , mutex lock . so before execute any of that i will call pthread_mutex_lock . ok ,    and afterwards , will let everybody else play again . ( use pthread_mutex_unlock ) \" so ok . \" \" let go of the duck \" \" ... release , back to the wild and \" there , go . and , can continue . ok so notice that , be not free , till later and in fact all of , free operation could happen at the same time if , have lot of thread call this . but if"
      ],
      "lecture 16-Q01": [
        "hi ok so let , use a condition variable to implement a cookie eater and here be the idea so , have get a data structure be actually just an integer but , could imagine , could be a link list , could be some other more interesting data structure and , be go to add thing to this and remove thing from this and i want to make sure that i do not try to remove thing if there be nothing there for example ok so here be , logic then , have get some code here that , can see , be go to use pthread condition soapy thread to run and , be go to pull out a name from this and inside , little loop here be , game be run a lot the mutex and then i want to check to see if there be actually anything inside , data structure so if , data structure be empty then let , go for a nap this block this comment thread so , will see that because will print out a little message with the name and will say ok go for a nap there , go then"
      ],
      "lecture 17-Q04": [
        "weird this toy digger red color ok so writer get , hand off , data structure right now , be make change to , , be update a link list , be copy over , hash dictionary to a large piece of memory that kind of thing so , be run to allow one writer to actually modify , and a writer also have to wait whilst as any active reader so if there be a really currently work through a link list let , wait until , finish before the writer say start modify that link list and in fact if , have get an active writer modify this data structure then if another way to appear then , have to wait as well so that be a classic reader wait a problem that i can have multiple reader but only one active writer and when i have an active writer everybody else have"
      ],
      "lecture 19-Q01": [
        "hi welcome to let , nineteen so , can develop what be call the reader writer implementation in fact , be go to develop something call writer priority implementation before , jump into any code there be actually think less sketch out what , 'd like to see ok so for this look good blank piece alright so what do , get let , give , a data structure ok so right now there be no one munching on , datum structure that one visit , but will say this just live in the center there , go and occasionally i have reader come along so here be a reader right there not interact with the datum structure yet but if , let , ok , can jump inside the data structure so maybe , will open some file go through a link list that kind of thing and so right now , be in there go through that datum structure eventually , will find what , want and , can leave and of course i could have multiple reader so here be another reader that be come along well let , go through and , can have more than one reader",
        "so let , reacquire the mutex lock so that , know for sure that , be currently only one thread run when , be change , variable , be go to think about who , want to wake up here and then will unlock the mutex so yes there be part of , code where only one thread can truly be run at a time but that 'd be for a very very short period just for a few microsecond for example and most of the time in this be actually go to be when , actually read the datum structure so for example consider a link list or map or maybe something on disk actual reading and writing be go to be a lot heavy than take more time than the actual code that , have write here for , lock ok so let , let , think about how , want to do this for , reader remember what , say about , reader be that , be go to put a bouncer in the way to say",
        ", have notice , have unlock the mutex lock , be only hold onto , whilst , be modify , variable ok so the writer and , write have arrive can , continue can , actually perform some surgery well not quite because right now , know that there be an active reader someone actually walk through , link list and , can not change that link list right now so one of , condition here be if there be anybody actually read ok so notice that , be use the reading not the reader this be critically important because what have i do over here be if there be a reader that have arrive , be right descent into sleep and so , do not want , writer to be wait on on those people because there wait on , so instead , be only go to wait for the one which actually inside the datum structure"
      ],
      "lecture 19-Q08": [
        "a bow tie where , have end up with weight on resource which be both before and after in , resource order so all of , weight , be go to be to the right and therefore be always possible for the early resource to be complete , process be complete so therefore i can not set up a chain or between , process be where i end up say with process three wait for process one and process one wait for process do ok so that be the secret source , be always make sure that , get resource in the same order so i want , to think about how , would implement that suppose for example , have a set of integer say , may be under a one of a link list and each one of those integer have a mutex lock so m one m two m three m four m five etc how can i make sure that if i need to lock let , say two or three mutex lock"
      ],
      "lecture 25-Q05": [
        ", actually set up one of these struct as a as like as a hint to say this be the kind of stuff , need and then , create another one for , in fact a potentially a link list of way that , can actually connect to that server so what , need in here ok let , scroll down be , be go to call getaddressinfo , be go to pass in host and the port that would like to connect to this can either be a number but , have to be a string otherwise , get a segfault or , can be a name like https for example but here be where , go to pass a pointer to an exist struct and then here be where , pass in"
      ],
      "lecture 26-Q01": [
        ", will see the last entry inside here let , just move this out the way let , do , this way let , move scroll this over here , go the last entry be actually link list and tree have , next pointer and that will be no so if , be write kind of code very lazily or just want short simple demo code , can ignore the fact that , return multiple entry but if , want to write robust code then realize that there may be more than one way to connect to the server for example perhaps the server upper offer an ip four address and an ip six address so , may try both , may try one after another all , may create a whole lot of thread and do , asynchronously and see which one actually kinda connect fast ok so let , let , just remind , about what what the entry"
      ],
      "lecture 33-Q01": [
        "some of the thing that , may use as well of course be thing like shut down to declare that , do not want to receive or send any more additional information down a particular client file descriptor then , actually completely finish for descriptor , can release , by call close which mean that particular file number file script a number can be reuse ok in some of the comment be , have talk about get use get a dresser inv and , keep hire that be really really important to use , m set to make sure that the unused field inside the hint struct be set to zero and the idea that , be important to check , , return value otherwise if , fail then the result struct will not have be change at all but in fact this result thing be not just destructive practice appoint to a strict and in fact remember , be a link list so , could write the"
      ],
      "lecture 37-Q02": [
        "arbitrary value that be use to be on the stack maybe then , have really information from previous thing on the stat that , do not actually mean to kind of send with that would be a concern if , be write kind of security aware code what about a link list how would , send a link list ok so , may say well , have get a whole load of stat structure each one represent the next point but of course , do not need to do that if , just send a marshaling a link list , can just send the actual value so for example , may send , do not need to send the pointer , just need to send the traverse the link list one at a time and will let the other side une marshall that and turn that back into a link list when , receive , now the fun here be , could send possibly a note of how big be link list be but then that mean , have to either keep track",
        "value to indicate that this be the very last value that be send typically with link list then , be go to be pretty fast to traverse that however the on the other side on the server side when , be une marshal this datum , have to then generate some malloc call for each and every link list item that be go to create and then finally what about a graph how would , actually marshall a graph and serialize at to send , down the wire so how would , be , little code direct graph how could , turn that into a sequence of byte that , could send down the network so typically with a graph , have to be aware that unless , be a simple tree that , may visit a node more than once and , also have to be aware to make sure that , visit every node even if , graph"
      ]
    }
  },
  "topic 6": {
    "keywords": [
      "memory address",
      "virtual memory",
      "page table"
    ],
    "mentions": {
      "lecture 02-Q02": [
        "10 minute"
      ],
      "lecture 02-Q07": [
        "0 minute"
      ],
      "lecture 02-Q10": [
        "0 minute"
      ],
      "lecture 03-Q08": [
        "2 minute"
      ],
      "lecture 03-Q09": [
        "4 minute"
      ],
      "lecture 04-Q01": [
        "0 minute"
      ],
      "lecture 04-Q02": [
        "0 minute"
      ],
      "lecture 04-Q06": [
        "1 minute"
      ],
      "lecture 06-Q02": [
        "0 minute"
      ],
      "lecture 06-Q05": [
        "0 minute"
      ],
      "lecture 06-Q08": [
        "6 minute"
      ],
      "lecture 07-Q02": [
        "1 minute"
      ],
      "lecture 08-Q01": [
        "0 minute"
      ],
      "lecture 08-Q02": [
        "0 minute"
      ],
      "lecture 08-Q03": [
        "1 minute"
      ],
      "lecture 08-Q09": [
        "3 minute"
      ],
      "lecture 09-Q02": [
        "9 minute"
      ],
      "lecture 10-Q05": [
        "0 minute",
        "2 minute"
      ],
      "lecture 11-Q01": [
        "6 minute"
      ],
      "lecture 11-Q03": [
        "2 minute"
      ],
      "lecture 11-Q09": [
        "5 minute"
      ],
      "lecture 11-Q10": [
        "0 minute",
        "1 minute"
      ],
      "lecture 12-Q02": [
        "3 minute"
      ],
      "lecture 13-Q07": [
        "2 minute"
      ],
      "lecture 14-Q01": [
        "0 minute",
        "2 minute"
      ],
      "lecture 16-Q01": [
        "3 minute"
      ],
      "lecture 21-Q02": [
        "0 minute",
        "1 minute",
        "2 minute",
        "4 minute",
        "5 minute",
        "6 minute",
        "10 minute"
      ],
      "lecture 21-Q03": [
        "2 minute",
        "4 minute",
        "5 minute",
        "6 minute"
      ],
      "lecture 21-Q04": [
        "0 minute",
        "1 minute",
        "2 minute",
        "4 minute"
      ],
      "lecture 21-Q05": [
        "0 minute",
        "1 minute",
        "2 minute",
        "4 minute"
      ],
      "lecture 21-Q06": [
        "0 minute",
        "1 minute",
        "2 minute",
        "3 minute",
        "4 minute"
      ],
      "lecture 21-Q07": [
        "0 minute",
        "1 minute",
        "2 minute",
        "3 minute"
      ],
      "lecture 21-Q08": [
        "3 minute",
        "7 minute"
      ],
      "lecture 21-Q09": [
        "0 minute"
      ],
      "lecture 24-Q07": [
        "1 minute",
        "4 minute"
      ],
      "lecture 27-Q05": [
        "1 minute",
        "2 minute"
      ],
      "lecture 27-Q07": [
        "8 minute"
      ],
      "lecture 30-Q06": [
        "0 minute"
      ],
      "lecture 30-Q08": [
        "6 minute"
      ],
      "lecture 31-Q01": [
        "0 minute"
      ],
      "lecture 31-Q03": [
        "0 minute",
        "1 minute",
        "3 minute"
      ],
      "lecture 31-Q04": [
        "0 minute",
        "1 minute",
        "3 minute"
      ],
      "lecture 33-Q06": [
        "0 minute"
      ],
      "lecture 34-Q01": [
        "4 minute"
      ],
      "lecture 34-Q02": [
        "9 minute"
      ],
      "lecture 37-Q03": [
        "1 minute"
      ],
      "lecture 38-Q02": [
        "9 minute"
      ],
      "lecture 38-Q03": [
        "2 minute",
        "3 minute"
      ],
      "lecture 38-Q04": [
        "1 minute",
        "3 minute"
      ],
      "lecture 38-Q09": [
        "2 minute"
      ]
    },
    "captions": {
      "lecture 02-Q02": [
        "to memory address zero what be thing go to happen so the exciting thing here be that actually when , process run , memory divide into different segment some part of , be read only so for example the actual code and the string literal in the other constant that , may declare inside , function i have to be load into the process but that be put inside read only memory and if , try to write to that memory , can not , process will actually actually stop with the segmentation fault other part of memory just simply do not exist yet , can have large area of memory dress which be not map to physical ram other part of memory will be map to the stack and other part that will see later on the course ok so let , try this and see what happen ok right so if i now compile this and run , contain at right do i compile ,"
      ],
      "lecture 02-Q07": [
        "hi ok so , be go to attack the follow problem , want to write a function to return of item in , into two away before the value of negative one be find and to make , tricky , be not go to use any counter , be just go to use pointer arithmetic ok so here be the challenge denton right so , be go to take a memory address which will be the value of where this array start in memory , be actual memory location and i want to keep walk through that read each integer until i find negative one so , head will do this then so , will have another variable , little pointer here and that be what , be go to keep change and will keep incremente , until , get to that negative one so , be so i want to see the value of the current address so let , use that point to remember pointer be mean to be use most of the time let , actually dereference , let , actually go and read the stuff at that memory right so once that be not equal to negative one what i want to do"
      ],
      "lecture 02-Q10": [
        "ok , go live ok great wait let , talk about the program argument so let , suppose , want to write a compiler right do , say well , know what i need to pass in some argument like one dot c and minus d for something ok how be , go to get these thing which people add after the program name and where do , go right so to that , need to understand argv and argc so every time , start , program this \" two important variable here call argc and argv . argc be the count of number of label and argv actually tell , , value so look at this look pretty scary a pointer to a pointer ok so before , panic here be what , start the first thing , see be just that work backwards like oh i have a pointer in other word all argv be be just hold a memory address and that be , could stop there and say ok point just something so that be all obvious , be go to be eight byte on a sixty four bit machine"
      ],
      "lecture 03-Q08": [
        "a case but when i run , , crash ok so what be go on here well first of all , just blindly guest and change , code and tell , compile but instead maybe , get well understand what , sprint efron do and so if i still read the man page about this , discover actually what as printf do be , be go to allocate some memory forwards and that memory be on the heap and then change the variable that , provide , so actually the code that , should have write be to have a pointer ok so a pointer to a character ok , be point at one character but , and i know that actually , be go to point one memory address for the character but then the remain character then remain byte can be use for more character , have whole c string and rather than just pass where that pointer point to , very sneakily be"
      ],
      "lecture 03-Q09": [
        "here , just walk off the end of the rate would keep go where do , go on forever probably not here be what would happen either but by the sheer luck would come across a bite a series of byte which represent a large enough integer value or , little program here would walk into a memory address that be no long valid piece of memory to read , would have expect that , would have leave the exist memory segment and perhaps , have enter no man 's land where there be no actual physical memory map to that address anymore at which point , would get a segmentation fault ok the possibility other kind of fun thing here be that , little code here do not know anything about the address that , give , perhaps , be go to give at the start of , away but , do not have to , could give , any address which be a reasonable place to start look for perhaps ,"
      ],
      "lecture 04-Q01": [
        "hi welcome to lecture four in this lecture , be go to talk about how to get datum into , process be c be a great language for processing because , can be so fast so let , get start with a little puzzle right so what do , think about this variable be , goodness so before , say to short let , have a lot that be a lot of point be go on right well hold on a moment what , can say about this be that , little variable pdr here stanley for pointer point to something and , be just go to look at that very last asterix to say ok great i know that ptr be a pointer and at that point i can just simply stop i can just treat the rest of the information there be a pointer pointer pointer pointer etc etc as useful information for the day that i actually decide to follow , pointer in other word the day that i actually decide to use , and go to memory to actually read what be in there and as , can see , can what , find that now the memory address and so on and so on and so on and eventually if , follow all of those memory pointer , would get"
      ],
      "lecture 04-Q02": [
        "so how do , get datum into , process maybe , be from a file maybe , be from what , type maybe assume network and underneath all of those idea be very simple and useful little have cold here could read and notice look , take a file descriptor just like right do and this be the mechanism by which all of the thing , have see in c in c plus plus and python java etc read from file and other source this be how , get information stream into , process and , be a very simple concise interface , look a lot like right let , take a look at , first of all to use , , need to have a far descriptor and between , and , when i push the start , get three to pick zero one or two and , happen to be that far descriptive zero correspond to standard input and then , have to say where do , want this day to arrive so , need to give , a memory location a memory address now read do not care about a type , simply go to say hey start put bite into this particular"
      ],
      "lecture 04-Q06": [
        "of that ram that process can only read or can only execute or can , do right or part of that memory space which do not do not belong to any room at all and these process container then provide a strong piece of security to , linux system if , process have a bug , a bug in , and crash , hopefully , will not bring down the entire system hopefully , process will not be able to read or write directly into the memory of , process will talk about exception to that world later on but this idea of a process be the kind of secure container that look linux provide be a really really important concept and , be go to see this especially , start talk about the memory of a process and what virtual memory can give , so great , can talk conceptive process but how about , actually create one and this be where the"
      ],
      "lecture 06-Q02": [
        "ok so let , check , understanding first of all , have see fork , first question to , there be this model there , go right so , use four quote do , know that , create a second process , clone the exist one so other variable share and no that though , use the parent as , template , now have two independent process , pointer variable , address location , only make sense inside a particular process i just want to imagine for a moment that say , be run gcc , be run gcc inside those process there be lot of pointer go on go about whether , be c code or c plus plus code those menu location be actually scope by virtual memory by that particular process so , idea of what be the address ten thousand be completely different and independent of what i think be address ten thousand so there be a very kind of important idea"
      ],
      "lecture 06-Q05": [
        "ok so let , make a version of hello world but use use two process so here be what , have get that i want to first of all create a a process where , have get a global variable little m here and , be go to initialize , by ask , to hold the memory address of this string literal in other word , be go to hold the address of where to find that that w there ok what do , do inside a little program here , have a little bit available could a , call fork and the return type of focus this process process id type now so far i retire i do not tell , the completely do not work , be possible actually for fork to fail for example perhaps , have be careful an limited the total number of process that system that , user in the system be allow to run a caution ,"
      ],
      "lecture 06-Q08": [
        "this last one this be mean to be an append function which take a available ptr and what be mean to be , be mean to be a pointer to a character pointer and also another variable call parameter call message which be a pointer to a cosmic set of character in other word , promise not to change what message point to so let , just remind , what this actually mean , mean that , be ptr be go to hold a value which , be a pointer so , be look over here but , will not actually find any character there instead , be a pointer , so , also be go to be four byte or eight byte hold a memory address and if , follow that that be where , will find the beginning of some string ok so this function be mean to append thing but , have several error so to fix , , be actually go"
      ],
      "lecture 07-Q02": [
        "the kernel which kind of software interruption which kind of positive signal , want to handle so there be actually two source signal this be where , can come from first of all the kernel , may generate a signal and this will happen typically as result of some hardware event so for example the cpu notice that , process be attempt to write into some invalid memory and the actual cpu catch that to attempt to read or write to an incorrect memory address and that cause an interrupt , stop read , stop read , process code the kernel code run instead which ultimately generate segfault which by default kill , process of course but , can also generate posix signal , when"
      ],
      "lecture 08-Q01": [
        "hi welcome to lecture eight , be go to spend , mostly fletcher talk about memory allocation but before , do that let , have a look at little puzzle ok so first question for , why be , that , put the heap so far away from this stack why be , that , organize , memory this way so to try to answer this and let , think about how these structure can grow in time both the heap and the stack can dynamic dynamic in the sense that , can get significantly large so heat get large when , call malloc for example and stack get large when , recurse so every time , make another function call , be go to need to extend , , stack space so for for architecture that only have a limited address space so particularly true on say sixteen bit and thirty two bit architecture let , put these two structure as far away as possible so that the likelihood of , collide be small"
      ],
      "lecture 08-Q02": [
        "right so , get this little challenge about what will this code print ok so , know that let , make this so , see that , have get little stack variable here and two little stack variable so let , map this out on , stack , have get let , say four byte for a ok here be , four byte and inside be the bit representation of ten so whatever that be presumably eight plus two and then , have get also , stack another variable core pointer and what type be , , be a pointer never mind what , point to simply by the fact that , have to point to any memory address mean that , be go to need to be the right number of bytes queso say on a thirty two bit machine that will be four bite on a sixty four bit machine will be a pred ok so will pretend that , have make a one two three four five six seven ok have one more byte there , go by eight byte there and what do , put inside"
      ],
      "lecture 08-Q03": [
        "ok , can put any datum , like inside there and by default the total amount of memory allocate to this be g ask sufficient for what , need ok but what about the day , call malloc and say hey , malloc i need another four thousand and ninety six byte please this point , need need to go back to the operating system to the kernel and beg for some more van back for some more real address , do not want to talk to the oblivion , do not want to avoid , actually need those memory address now to refer to some actual memory and that be the purpose of s break be to say yes i know , have get , heap possibly say zero"
      ],
      "lecture 08-Q09": [
        ", have get a tiebreaker here , could take , from the very beginning or from the very yet and , have also tiebreaker be if there be a type break use the one which be low in memory have the low memory address so , will actually assign p e to the base here ok and the up here be a two to kill about whole there be two kilobyte space right so what be , conclude well , can write down the actual memory replacement that memory placement of these different allocation and i want to know sis that , be different ok so how thing get lay out in memory depend not only on the order the sequence of malloc cost and free , that occur but also in , choice of the strategy replacement strategy secondly , fragmentation this time be not look so good , have if i have to take this little bit , use that space so , have get free space let , use a different color here just indicate whether free space be ok , have"
      ],
      "lecture 09-Q02": [
        "use those thirty two byte to actually as a metadata entry so sometimes , take a bit of get use to the idea that i can just talk about a memory address and then immediately say ok now put these filter filter over eye and do not think of , as just bit and byte actually think of , as a piece of a data structure or actually think of , as an int or a double or something else see do not care the compiler do not care the cpu do not care up to a point more about that in a bid , can say at this particular address i want , to treat , as if this particular object or primitive value so great , be go to use those byte as a metadata entry right so there be a few thing , need to do here , need to set up those field , have get a pointer and a size and a free so let , make sure that , do the easy"
      ],
      "lecture 10-Q05": [
        "ok so great , have start think about , allocation in term of these block and in fact rather than hardcode sixteen byte , be go to use size of , size t operator here be why this be this be a great little integer , be potentially large than just a c int and , represent lot of interesting useful thing like the total number of byte that i want to allocate , pointer can not hold value great , point be can not point to memory address be great than this value so if , have chunk up , memory into the size of these thing i know that , location be go to be robust and powerful ok so , have kind of stress this idea that , get to think about byte anymore instead , memory be become one big array of these size t type entry",
        ", sixty four here i jump forward of sixty four plus one in order to write sixty four into that location and , have also ask , for a hundred and thirty two bite so here be a hundred thirty two i give , plus one here be , memory address and also write the hundred thirty two in there ok so why do i do this so the wonderful thing be and i may have sketch out before in a previous video be that if , then free something up let , say that , free this one here actually , give , this pointer here to say ok , be do with this space i would say great so if i immediately cast a point , give , into one of these one of these block pointer here then i just need to go back by one to be able to read first of all , size and if i go back by two then i can read the previous"
      ],
      "lecture 11-Q01": [
        "course so call free in these variable when , go to stoke scope be easy be actually look like that memory pool remember that remember that actually when , return from the function all , need to do be just change , stack pointer to go back to the previous area and change a return value so that be why stack variable be so much fast to allocate and deallocate compare to variable on the heap there be so little work to be do with just change change the pc register and everything be go so great , have get an idea of a thread of execution and , could trace this through , program so if i want to make a second thread if i want another cpu core to be run at the same time then , be go to need space inside , memory for another thread and so each thread then , be go to get , own stack right and these be inside the same memory address space but , be go to be"
      ],
      "lecture 11-Q03": [
        "ok and each of these stack be independent when a thread finish then this memory be not need anymore in practice , may use , again when a another thread be create right so anything else , want to say about this yeah and realize that look i can have some heat memory in here i could call malloc from one thread i could have some global variable just beneath that and all of , thread can refer to these thing that just memory address , be up to , how , store these memory address where , use , so all of , thread could see , constant like hello tomato so let , put tomorrow in here somewhere down here but near the code if , have make some malloc memory i could have pass that address to , thread all , need adjust address"
      ],
      "lecture 11-Q09": [
        "beef in here for example let , cast that or what would happen if i just return the argument well sure , can do these thing remember all , doing be return memory address petere , be not little peek at that memory so , be perfectly reasonable to store to return sainul that that will be those value will be remember until someone call p thread join on that thread so right now , be create thread zombie as , two runner finish , two program to cite two thread finish , exit but but , do not clean up no one ever clean up after , , have get two thread on this and inside that , make a note of the exit value for this little program , do not matter because in a moment , be go to finish all thread and at that point the whole process be go to like a black hole just disappear and so , do not care about the thread zombie anymore alright"
      ],
      "lecture 11-Q10": [
        "ok hi so let , see what happen if , have a hundred thread right so how can , implement this well this be how , have how , have attack this right i need an array to capture all of those thread i ds , be go to hundred of , today and so when i call pthread_create ( ) i need to pass in a pointer to that memory so i could write something like i need the address of , array and i take the i th element but i can simplify that to just the pointer arithmetic on the array name and that give , the address ten of the element inside that work so great and then for each thread , be go to ask , to run little function call shout and , be go to pass to shout when , start when , finally get a cpu core to run , be go to pass in the follow memory address so what be that well , be a global variable",
        "be run inside one process and , can see memory outside of , own stack space ok so here be that shout function , be go to pass in as something on the stack of the thread this pointer and , do something with that so for example i could print , out as a pointer so arg be now hold a memory address so let , print out that memory address or flush , and what exit wait and then when i want to wait for all , fear to finish i could just call pizza at exit on , main bird instead less use pizza joint here and comment that well be careful because in the other function i actually want the thread id not a pointer to that memory , only need to do that before because , be go to change , now then i actually want to refer to to an entry inside murray and which be over here"
      ],
      "lecture 12-Q02": [
        ", main thread in other word , will never get to this line here so will never be return forty two at this point ok so that be all , main thread what about other thread be go to look at that ok with that instead i want to scroll over , keep so , display be pretty simple i just want to print print out everything and for that , be go to use right today remember how , work be , simply say here be a memory address start send the follow byte and as , be send this to a terminal , be go to see that as ascii value so , have just get a very simple a piece of code here that go through this print out a width number of byte and a little bit of calculation here to workout where in that heap i should start from at the end of that do a new line have go to the next"
      ],
      "lecture 13-Q07": [
        "need to read the following four byte please ok , pull that into a cpu register then , invoke the arithmetic logic unit to add one to , register ok so , have recalculate new value and then , take that bit pattern and , throw , back towards memory here , go memory have a new value the add one be extremely fast writing to main memory be extremely slow compare to what the cpu can do so of course practice , have level of cash operating but let , not worry about that model complexity today i just want to point out that be actually kind of three step read and add one and a right so even though , be write this plus plus , actually take three distinct step alright so that be the kind of first idea be that , have get two chef two thread run as fast as possible really from memory add on write , back"
      ],
      "lecture 14-Q01": [
        "hi welcome to lecture fourteen so let , dive in and have a look at some thread unlocked be , ready ok so let , get start right so take a look at this crazy code here and this work out what be go to happen on a sixty four bit machine and thirty two bit machine so , first comment be how could this possibly compile hello be not an int ok so what do , have here well of course , have a string literal so this be go to behave as an array but can also decay into just a pointer point be the memory address of this first entry the age ok so that memory address could be treat as an int right which , then store into this variable and then later , say ok take that in value and pass , so and change , type back into a character pointer right so this give , shiver down , spine here will , work one of the question be do , feel lucky there",
        "when , do this trick on a sixty four bit machine so now , integer be only go to be thirty two bit still but , point be can be much large , have a much large space of number now address space now sixty four bit so in practice what be go to happen here , be go to truncate the value only go to take the low thirty two bit the bit that actually can be represent by the end oh dear so be , go to be lucky be , go to be the upper thirty two bit be all zero well maybe maybe in this specific example because , be test , with a string literal and , know that be likely to be in a low part of memory but in general if this be say appoint to malloc , be unlikely to work once , start have value great than what see about four gigabyte or so so so yes do not"
      ],
      "lecture 16-Q01": [
        "on the cpu actually represent what should be in memory so , behave as if there be no cash meaning if i get two thread run on two different piece of silicon , will see the correct value run inside the sword inside main memory ok so , have set game_runne to zero and let , wake up , thread ok so now will just wait until , both exit and then will print finish ok so let , try this and see how well , work ok so , be clear that which code be this cookie solution ok so let , compile that and run , ok so , will see that i main thread be wait for some input meanwhile the angry even agent smith be go for a nap so , call pizza condition wait ok so let ,"
      ],
      "lecture 21-Q02": [
        "hi great so let , welcome to virtual memory ok so the story so far , have be design process be and each process have , own address space as , have this idea of virtual memory ok and so the address number that , and i talk about inside , code only make sense inside one particular process meanwhile , have actually go out and buy some expensive ram and ram be really precious commodity for , machine , be the limit factor for when , want to run multiple virtual machine on a host , can never seem to get enough of , , be nice and fast compare to other storage mechanism so , want to use , efficiently ok so here be one idea , could say well let , assign , process to use the follow chunk of memory ok so this can be , , can say process one or let , say process eleven at meanwhile , be run as well so here be",
        ", process may be process twelve ok so some problem with this first of all , could imagine that overtime when i stop process and end process be , memory go to look very fragmented and , be go to look exactly like problem , face with , heap that be actual physical memory ok will have bit of memory that be in use , over here ok but the free space free place in memory be be separate ok so what can , do to fix that well , could start copy bite down but these process be pretty big ass a lot of byte to copy so that be go to be pretty inefficient and slow and take up a lot of time use the memory bus to do that copy so this do not seem like a great solution the solution , actually describe all the way be call like the base and bind where there be a mapping simple mapping from , virtual memory address , add some kind of offset",
        "address or inside , ram and then , also put some kind of bind to make sure that address inside , process contract piece of memory that do not do not do not that not , concern not sort of , process alright so this be not a great , be only advantage that be simple describe and also simple to implement in silicon and give , a little bit of protection between each processor , process can not overwrite , memory well maybe , can do well than that ok so one thing to notice be that actually in , address space over here , have get ton of address load of address number which i just do not care about , be not be use right now , be not part of the stack not part of the heap be never need to refer to , and in fact , could even go far and say look this part of , program code like the initialization code that i really do not even need in memory right now or pass , heap i have not touch since yesterday ok so maybe",
        "two bit machine ok so , have get that mean that , address space be thirty two bit meaning that be actually kind of thirty two physical wire also mean that the total number of address be two to the thirty two also mean that if i actually want to write down an address i need for the debit or in the word four byte so , be go to work between these three idea continuously either the idea that , have get thirty bit and , physical bit separate and , know physical wire or this be the total number or this be the number of byte need to hold that number ok right so , just start with the idea that any address here inside , virtual machine can be map to any physical piece of , rab",
        "i need to store number i need to store what i need to store four byte so if , address space over here for , process be habig thirty two bit in other word , have get say two to the thirty two entry right but each entry now , be go to take some storage somewhere , be go to store for each one of those four byte number to say where inside , physical memory ok so how big be this how how many byte , actually need to store this giant look up table case so first of all let , just work this out this be of course two to the thirty four byte right now that do not mean much to , thirty thirty four but i know how to work , out quickly right and the computer scientist know , too to the is two fifty six but , be more useful to know that two to the ten be about a thousand in fact of course be a thousand twenty four so two to the twenty be about a million",
        "two to the thirty be go to be a gigabyte ok so what about , two to the thirty four this mean , have just come up with an address scheme that take drum wall sixteen gigabyte to store ok so i just need to go out and buy sixteen gigabyte of memory just to store this look up table right hold on a moment how much memory go to actually buy and put into this machine well , have thirty two bit address space so in other word , memory be limit to two to the thirty two bite ok so , have get a total of four gigabyte of memory i could actually put into , machine ok so this be not a great idea this be definitely kind of",
        "address space , can divide up , physical memory the stuff , physically go out and bring and put inside , machine into these same block into these same frame again these same page except that if , want to be accurate but , talk about , in term of physical memory , talk about , in term of physical frame and , physical frame be go to be the same size as , virtual friend as , virtual page and again , can now talk about a particular button here in term of a particular frame number ok so maybe this be frame say forty one forty two forty three will make that one forty four forty five so , could talk about a particular frame number plus an offset so , get to change , first stroman idea to now a mapping between a page"
      ],
      "lecture 21-Q03": [
        "be contiguous like this , page one could be map to hear , page two could be map to hear page tweaking , may be do so on right ok so how many how much space do i need to kind of hold , index here for , physical frame in other word how many frame number may i actually need to store here ok so if , address space for physical memory be also thirty two bit , may say well , be two to the thirty two of , except , have divide thing up into four thousand ninety six chunk so the same argument apply that after these thirty two bit , just discover in the last twelve bit in other word this only twenty bit remain so , have actually only get twenty bit to play with so , need to store twenty bit for each",
        "byte and so each entry hold a number and , use this by go to a particular entry for a particular page to read out the right physical frame so let , imagine this that be imagine that i want to color ok choose get let , imagine that , be try to read some memory inside , program right now i want to change a bite in , heat for example ok so , convert , physical psychological address the virtual memory address and , see this in page six so let , go to page six one two three four let , imagine , be just here ok and , read this entry right ok page six i see that this correspond to some frame number like let , imagine this be frame forty seven case forty seven forty eight etc",
        "inside the heap , go to this frame and , use the original offset that , have ok so here be the offset those low twelve bit and literally those twelve wire will be , do not touch that , do not even need to think about that what do push , straight out towards , ram and so that , can now actually read the correct but ok so that be , plan but , have just invent be call a page table so , have get a single level page table and , be k and , give , the security of of each process now each process will have , own page table so , have just look at the page table one particular process if another process start to run will have to tell the cpu to use a different piece of memory for the page",
        "kernel so if , call s break if , load more library if , will start get big than this page table need to be update as well right so anything , can do to improve this do , have any problem with this right so the first thing i want , to notice that , remember be that actually for most program , have get lot and lot of address in here that be utterly unnecessary , thirty two bit program like four gigabyte of address space be the time i talk about inside , process most of , , be never go to touch for example , stack may be small , heat may be small and yet i have entry inside , page table for these so maybe a future design can improve upon that a second problem , have get be that congratulation , just make , machine run twice as slow because now every time , program want to use memory , have now make , actually require"
      ],
      "lecture 21-Q04": [
        "ok so , design the little page table and let , just think about how big , be hopefully , be go to be a bit small than that gigabyte version that , design in the beginning so let , do some calculation here , know that each entry be four byte and , know that , need two to the twenty entry because there be a up to two to the twenty page ok so this give , a page table of size two to the twenty two k two to twenty two byte right how can , be that off well as usual remember the two to the ten be thousand twenty four so two to the twenty be a megabyte or meg ok so what if i get here there be four megabyte alright as a massive improvement over , first design in other word there be an overhead or four megabyte",
        "tiny even if , only take one hundred kb actually , be go to give four megabyte of space that i need to find inside , real memory to hold this page table and bad , need to be four megabyte of contiguous memory as well in order for the hardware to do be look up so , be ok but maybe , can do well than this and so a key idea be maybe , should actually make not just a single level page table but a double level page table ok so let , think about how that may work and this be kind of maybe a little tricky the first time , see , ok so here be the plan let , let , do , here ok so here be , kind of thirty two thirty two wire here and so far , say that the low twelve one two three four five six seven eight nine ten eleven twelve area right",
        "ignore , will just make that the frame offset as well and here of on the left hand side the twenty bit let , divide this into exactly two half so one two three four five six seven eight nine ten so , have get ten bit over here and ten bit over here so here be the plan let , have a top level page table there be only go to be use as input these top most bit so , can think of this like a directory into some other page table look up 's as well so ultimately , be still go to do a mapping from a page number to a physical frame but , be go to do , in two stage these kind of top level ten bit ok will go into this first look up table",
        "and , second read then will say ok also in main memory somewhere there be none other entry another table here ok and as input , be go to use these middle unused ten bit here here ok so these ten bit green here so same argument apply , have get two to the ten entry here and as usual each one be should be attend each one be four byte ok so again this little table will fit snugly inside four thousand ninety six byte so for example the one , be currently draw may just happen to live inside , physical memory just here right and then finally when that when , read that out or other when the hardware but instead out finally , say ok this be the actual physical frame"
      ],
      "lecture 21-Q05": [
        "ok hi right so , have get memory there , go right , have get memory virtual memory work use a page table and , have just invent a two level page table but now , actually want to think about get recover that performance because right now with output to level page table , take three memory access in order to actually read or write the bite that , care about inside , heap or stack or whatever , be not part of , process ok so here be the plan then let , talk about a useful bit of hardware there be also part of the memory management unit so , be part of the cpu and , be the tlb or the translation lookaside buffer so what be this tlb the translation lookaside buffer so this be a cache and if , remember recently use vlookup in , table",
        "so this be a cache , be get a limited size , can not remember what kind of all of oil look up 's and what , be basically do be say hey , have get a virtual memory address except that i do not need to store a look up for a particular address instead actually , be go to store this with a page the page number and i want to go from a page number to the physical frame number so let , go to the frame number which date , do use , multi level page table but what if , actually have a very fast piece of memory to do this as part of the cpu and this have to be extremely quickly have to be much fast than go to actually main memory and , be go to need this every time",
        "time , want to , want to calculate and physical frame so the speed of this implementation , be critical and in fact , be get to look aside because the cpu start go down both these path at the same time this be where ns count even tense of nanosecond count so let , start ask the tlb as , fire up the machinery to talk to main memory to walk through the page table but hopefully , will not need to complete that task because the tlb will say uh huh i have the answer for , i can tell , the physical frame for what , need now why be the tlb in practice so useful yes that be two basic idea and , be both spin around the idea of locality , have spatial locality so special colour kalati mean that if , have just recently access particular piece of memory so low cal make sure i can spell this locality",
        "for example or because i have a counter or total and i keep write into that ok so , be these two aspect of the program that , write which make the tlb so useful ok anything else wanna say about the tlb oh yeah just kind of as a quick sketch , realize that the page number be talk about , virtual memory address process specific so the mapping that , do always of course per process if , fork , make a child that be go to have a different mapping to different physical memory so when , do a context switch from one process to another , need to make sure that , do not use the old mapping because , be with four eight different process right so all the page number all of , virtual address only make sense in term of the current process so , could look over time to say after i switch to a new process"
      ],
      "lecture 21-Q06": [
        "ok right so what be the next part lecture let , do a several thing let , start talk about what , can store inside , page table let , go through a little bit of math some example and let , start talk about page fill so fasten , seatbelt and let , go ok so let , do a worked example for two level page table so remember that be where , have take the page number and divide , up into piece and so rather than have one big giant contiguous table will have a directory at the top so what do , get here how much memory do a two level page table require assume the datum segment require two page and the stack require two page ok right so , will pretend water thirty two bit system so , have get , four thousand ninety six byte for each page so the twelve bit here be , page offset the upper twenty bit be go to be the page number ok so that be the page number and that be the part , want to convert",
        "in other word , be run a very small program here maybe , be e m v or cat or something like that ok so very small about the stack very small amount of program and so if i should actually look at the amount of memory that , program be actually use , be just use two page down here ok and two page at the top here now in practice , real example , may be a little bit more complicated than that but let , let , work with this very very simple example and the point realize be that , be go to need one page of memory to hold the top level page part , page table so there , be ok with , be a thousand twenty four entry do , do ok in other word the top level",
        "to use that but most of , memory space be not , use so in fact , have only go to have two entry inside this which be even valid which will even kind of ever use this one down here which correspond to the area that i need in here for those two page and this one up here which be go to be , stack space so let , imagine will put that kind of just there ok so each of these point to another second level ok so , can see that , have now go to need three three piece of memory three page inside , physical memory to hold all of this so that be the overhead of , page table system so what do that mean right i just finish this guy off , say that the stack have two so that will be two entry inside here",
        "down here for the data segment and if , access any of these but , have to do , will tell , where inside memory as the actual data where the actual program code be or where the actual stack be ok please go to memory over there right so let , not worry about the actual memory use by , program let , just look at the overhead actually require virtual memory annual see now i need to find space inside , actual physical ram for three page of memory in other word , overhead be twelve megabyte ok , 'd say , have do pretty good at the begin of this lecture , have a system that require multiple gigabyte and then , go to a single level page table which require four megabyte wait a moment , have get , phone minute here and now",
        "oh , have get twelve kb there , go that be much well so the overhead now each process be potentially very very small right so the next thing i want to talk about be when thing go wrong and , can make thing go wrong deliberately i want , to imagine right now that the space behind , maybe , get a wall behind , or something do not actually exist wait a moment let , turn around and have a look as , turn around and have a look will put to put , or , on pause and quickly fill , in will quickly replace the wall will put , back in so the process , be none the wise so the trick , have do here be that in , page table look up ok let , choose know color"
      ],
      "lecture 21-Q07": [
        "   hi ok so initially , have just let , switch to that ok , have assume that , whole process have be load into memory but there still may not be all possible address that map to physical ram , have see this already when say , accidentally try to read or write an invalid memory allocation for example page zero or maybe , program malloc implementation there be a little bit crazy instead of try to re divide into address which do not probably exist yet ok so when that happen what be happen be that , be go through , multi level page table system here and , get to an entry that say no , be sorry i do not map to any one of , actual physical piece of ram so when that happen mmu the part that be read this page table cause a page fault and a page fault be a hardware interrupt to tell the cpu that , be sorry i can not satisfy this",
        ", be try to actually read an invalid memory address but i want to realize that , can now stop play trick on , process be so for example for the long time , have be look at , and for the long time , program have be run code inside define inside this second page over here and , have not actually need any of the code inside this another page because that be all just set up code and maybe some code to kind of save the result at the end but right now , be stick inside a deeply nest for loop and swim in cursive code busy execute all the stuff inside here ok so unfortunately as a just right now , be figure out the answer to life the universe and everything and , need to store that somewhere so , be go to start need the function that the",
        "right so at that moment , try to go to this location , use the page table so , track through the page table ok the upper ten bit tell , to use this table the middle ten bit time , choose this table and this be , be sorry that do not correspond to any memory here be what , will do , will put the process on pause because , have just get a page fault and as i turn around look behind , will quickly fill in the background and so that , will never know , be miss any pointer at this time and , be go to do the same thing in , process so what will do be will identify a piece of physical memory ok out of all of these let , choose this one this one do not seem to be do much right now and , will say , be ok i know where the byte be , be still",
        "the local ssd but i have the content of the program which i can load into memory so i will go to , i o system say hey please can read , this page of memory four thousand ninety six byte and will wait for that to complete so hopefully in just a few millisecond time but , may take long , will actually have those bite now and now , can fix up , page table to say ok do not look at nothing anymore instead this entry be now go to be just here great so now , fix , up , can release process and let , continue and , would be a non the wise , may notice that , program take a little bit long to run at that moment but as far as , be concern those byte will always available there be never a moment when those bite be not act in memory so that be kind of pretty cool trick so , have see two kind of"
      ],
      "lecture 21-Q08": [
        "part of writable the rest of , be readable , can change this this may be useful for example if , be write a hot spot compiler because now the thing , right into memory , actually do want to compile and run as executable code so , will talk about how , can use this later on in the course when , start talk about memory map file and memory mapping i want to come back to however to this idea of make part of , memory read only this actually allow , to use , memory really efficiently i want , to for example imagine that , be currently run a compiler let , say , be clang right and so , address space yes , have , own",
        "one that be do the ui layout another one which be do that download another which be the javascript interpreter etc and i need an extremely fast mechanism to be able to communicate between all of these different process right so that be all to come when , start talk about mmap in the future but , ultimately rely on the very page table that , have be talk about as how , implement virtual memory so what be the big takeaway first of all realize every page have these bit , have get thing like the modify bit , have get to read only and whether , be executable , get some of these setting for free later or control , when , talk about memory map file , give , an advantage of be able to share thing and , give , some security be not a hundred percent if , be interested then go and read up on return orient programming which be an"
      ],
      "lecture 21-Q09": [
        "ok let , round out this lecture with two little non virtual memory idea first of all , have hint at this i think of ipc so when , hear ipc in a interview , be probably talk about inter process communication and , have just see one today ok so inter process communication and where , use communication ok where , use a shared memory use the virtual memory mechanism some more that , be go to look at in the future again , be pipe where , can treat pipe a bit like file or at least stream where i can stream in some bite and then another process constrain , out in the same order and then , be go to talk about networking as well so the idea that i can create tcp and udp socket so that"
      ],
      "lecture 24-Q07": [
        ", be worried about use too many octet too many byte to represent address be worried about the overhead of make , address base too large so if there be one thing i wish , could change and vince cerf agree , here be that , wish that , early address scheme have decide to use a big address space for , network packet then just just the thirty two bit so today these thirty two bit be describe as octet so an octet be just eight bit so if i can spell out text correctly i think , need another see inside , octet and so when , talk about address such as this one hundred and",
        "ramp up , have now get this overhead so if , just want to start send individual character because , want to send a packet for each time , press something on the keyboard already , have get this overhead of these additional byte or to be precise additional octet which be go to be require for every packet that , set right so this be ip four , be a very very simple idea of let , have a thirty two bit there be a little bit more to , , can actually start talk about address space within that , can talk about subnet etc and how , divide up this total address space of two to the thirty two possible address , can reserve different part of , from i do not get there today instead i want to talk a little bit about ok so i send a packet from one"
      ],
      "lecture 27-Q05": [
        "on this main convention here so in other word , be throw around four thousand ninety six byte anytime i want to load or read something from the disk so , have probably be talk about kind of cache line and this idea that if , make a request in main memory for one byte , be go to get say the whole cache line which may be sixty four byte or thirty two bite or hundred depend on the system a whole load of byte be free , all come across right depend on the width of the actual physical number of line between main memory in , cpu so , get all these bit for free the so the same thing apply for , file base system and , be kind of at the low level say hey i want",
        "make these same size be , virtual memory be because think back to , virtual memory table where i need to have a mapping from virtual address to physical address and the very first thing , do be , take , physical memory and divide , up into these chunk into these ram into these disk sorry into these memory block here and , need to do thing like say well these byte right now i do not care about no one seem to be use word to paginate table so all that code inside here be just waste ram so why do not i evict , out of , memory meanwhile , have get some other stuff that i would like to have inside , ram inside , memory so i want to page that into from disk into memory maybe"
      ],
      "lecture 27-Q07": [
        ", seek with virtual memory and finally this give , the actual disk block that will actually hold the datum so finally , can meet the next four kilobyte of datum ok so how much can , store with this double indirection scheme here ok so each one of each one of these entry there be go to be a thousand and twenty four of , ok for , second look up here but , be not do because actually i can play this this trick a thousand twenty four time so for , double indirect block , have actually get four kb time a thousand twenty four time a thousand twenty four in other word i can represent four gigabyte worth of information here right , just need to write the logic to make sure that"
      ],
      "lecture 30-Q06": [
        "ok sir in the beginning of the course , have a very simple idea about what process , just say hey let , to start off with the program will load , into memory will assign a cpu and off , go and that memory be go to contain the code that , have load from disk some space for the heap and the stack etc right now , be always so model now be a lot more sophisticated let , just quickly review all the thing that , now understand that comprise a process first of all , now know that the memory that , be work with the process be actually virtual memory and the mapping from that use page table to the actual physical ram and that that mapping can change overtime so , may need more memory but , may also page out some of , memory in order to reuse that ram for other process , have also realize that hey , process can have more than one cpu and more more than one thread of execution , also realize there be a hierarchy of process so each process have , own id and apparent as well"
      ],
      "lecture 30-Q08": [
        "right so this should give , give , away right so much tell , about the actual memory mapping of a process which i think be pretty cool ok so this process currently get , can see , be get a whole load of library which be map into different part of the address space let , keep scroll backwards here there be a lot of mapping kate look there , go great then , may notice that , have get some address space over here which be map to the file slash bin slash bash yes that be right , have get different part of bash map of the file bin bash mapped and the difference here be whether , be rewritable etc so this one be actually executable part this be just a read only"
      ],
      "lecture 31-Q01": [
        "hello great welcome to the next lecture so off , go on a lecture thirty one , be go to keep look at file a little bit and also talk about how , can actually run a virtual machine today so i think that be pretty cool and exciting and also as part of file be go to talk about quick introduction first look at memory map file as well where , use a virtual memory machinery that , have to actually directly access file as part of memory ok so first of all let , talk about umask so i make hint about umask at the end of the previous lecture that this be something that every process have and umask come into play whenever , make a new file so if , be just change file , be not go to need to umask but the idea of the umask be that by default , want to remove some permission that otherwise would be give some read write access access permission for say other in , group or other people on the system"
      ],
      "lecture 31-Q03": [
        "ok right so i think this part one of the most exciting part of cs two forty one so here be the story so far , have talk a little bit about page table and the idea that inside , virtual address i can map to a particular piece of memory and i do this on a per page basis and then , have discuss how actually , can page out part of , memory to disk ok so when i do not need something or if there be pressure to get more memory for another process or something else , can take part of , memory and say , know well let , just copy , to disk or maybe , already be on disk in which case if the dirty bit be not set then i know that i do not need to do much because , have already get a copy of the datum on the disk somewhere right so , have get all this wonderful machinery to page out and page in disk block back into ram",
        "be cool if i could have a file like alice perhaps , have read alice through the looking glass so here be , little file here would not , be cool if the content of this file so here , be let , kind of sketch , out as some holodisc block if , could actually map those directly into some memory ok so let , kind of copy , in and then those piece of memory can be directly part of the address space of a process and that be what nmap be go to allow , to do this idea that , can kind of make as one the address space of , process and thing on the disk , allow , to do a bit more than that but let , kind of just start there ok alright so let , see what , can do with this so here be",
        "be the space in , virtual address space , 'd like to use ok so the next two thing can cause a little bit of confusion , do different thing here so remember when , talk about , virtual memory four piece of actual physical memory inside , page table , care about whether , could read or write or execute , and why do , do this again for security so for example i may have page in , stack which be read and writable but not executable or i may have page which be for the library or , code which i want to be read an executable but not writable ok so , get to choose , get to say what page protection would like here so for example if i just want to read , file then i only need read so there be other as well"
      ],
      "lecture 31-Q04": [
        "ok so let , look at , a little demo here yes , be go to actually share information between two process directly alright so will start off today whereby just share a file ok then , could have do this anonymously as well but let , use a file call alice dot text , may recognize some of the word in a moment and now , be go to say actually i want to be able to read and write to this file so i need those mission because , actually go to make modification to the file so when i say map share down here be one of , option i expect any modification i make to be see by multiple process and even inside the file , ok so yes , be map a file so , need that and what about the actual protection for each page of memory ok so , want to be able to read and , want to be able to write to these page of memory but i do not need to be able to execute , i do not care where inside , virtual address space this memory end up and i want four thousand and ninety six byte please ok",
        "i can actually start to use , will be the content of alice dot text but , of course be able to change , so let , do that right so here be a little demo where , be actually go to now do some communication between a parent and a child so strong copy and i can copy content directly into that memory location so here be the child write something into there and what about the parent the parent can read from the same address now back at the begin of two forty one and , talk about fork , say hey these be completely different address space and actually there be no long connect after , call fork ok well guess what that be a little lie why because , could not handle the truth but now let , actually have a look at the truth with mmap",
        "the only thing , have add here be some counter and thing just to prove that , be kind of update everything ok so in one corner i have the child here that every two second be go to print out forty byte out and then directly read forty byte from that address ok so organized and say be hey take this memory and send forty byte of , directly to stand , out meanwhile , parent process be modify the memory so let , use s printf to directly write to this memory address that , get back from a map and , will write the follow format string will say hello from the other side and follow by a little number account here ok and so let , actually see this in action let , start run , ok right so let , compile , get , map two"
      ],
      "lecture 33-Q06": [
        "hey ok so let , talk about some useful thing then for socket connection right so first of all suppose , actually want to reuse the same port immediately how can , do that well the trick be to know that , say option on the socket so what , be go to need all this choose a well color than that be set socket opt set sock opt where , can choose different option here and , be important to do this before , call bind so let , go actually have a look at some code that do that another kind of useful trick be if actually do not care about use a particular port number just that , actually want to listen on any port that happen to be free then , can always pass in a port number of zero here remember that , be a string not a zero pointer to memory address zero uh"
      ],
      "lecture 34-Q01": [
        "than the other alternative switch today , can find an m v e gently remember these initial but these basically connect directly to the pci bus or pci express bus so ssd chip can talk directly to the cpu so , be much fast to be able to shuffle information from the ssd into main memory or even directly into the gpu as well so this do come important if , be ever decide to upgrade , pc or build , own pc pay attention to the actual physical or electrical connection that , device will support ok so that be the kind of a quick abstract design as , can see that of , device to this get many different unit here be what , may look physically"
      ],
      "lecture 34-Q02": [
        "satisfy per second right like this in and say over thousand millisecond if each one take , of order fifteen millisecond , will see that , have only i can do approximately kind of sixty six to like a hundred i owe event per second ok so that be pretty slow right that i can only do a hundred different thing per second compare that to the number of read that , can do inside memory , will see now why storage get a bad rap in term of , performance that of order a hundred event per second be extremely slow so let , kind of go back to , virtual memory discussion when , say hey when , be run"
      ],
      "lecture 37-Q03": [
        "do safe to return all , have to do be read the old program counter and change the stack frame back to the previous one ok versus rpc what have , see , have get thing like marshalling and that can unmark sling and that can include change bit representation marshall link there so , have get modify representation , have get pause , have get oh yes , have , have get , got to traverse data structure and which potentially involve many cache line or what , be read or write to main memory , have also get ever handle as well so even if , do not take"
      ],
      "lecture 38-Q02": [
        "and consistently so now the number of page , need to kind of load into memory , be go to be much small , be just go to be a handful of page because , be always touch the same page so now , may shrink say from four gigabyte to say under four megabyte etc right so again , be kind of a little example of working set so i mention this kind of word in pass demand page and just as a reminder what this mean that i can have part of , process address space ok so for example this page , processor memory maybe , be part of the heap may be part of the code maybe be part of the"
      ],
      "lecture 38-Q03": [
        "can make these two call appear to behave the same do , have any idea ok well how about , lie how about , use copy on write so also know as the tabakow c o w copy on write ok so here be what , could do let , make use of the virtual memory machinery to lie to , poor process so for example , ask for two hundred thousand byte all zero out to be equal to zero i could cheat at this point and say this be what , address base look like be , regular virtual address in the order as lot of , and , can of course divide this into page",
        "here be with some zero in and now the big trick be to map this so that the different part of the address space all map to the same piece of ram and , little process will be none the wise if , just simply look through all of these different address , will just see a lot of zero even though in practice i set up , hardware so that , actually go back to the same piece of main memory ok so that be a wonderful electric i actually only need a single page four kilobyte of memory and i can easily give , now two hundred thousand byte of memory where be all be zero out just by play this game with the mapping between virtual memory"
      ],
      "lecture 38-Q04": [
        "fairly simple model of cpu etc navarre of , kernel a real context which will have many additional more step so so what be , go to be able to do be to explain why context switch be expensive in other word why there be a significant overhead to move from one process to another right so what be the kind of some of the thing that , need to two right so first of all , have get the virtual memory address map in other word be page table these only make sense for a particular process that a particular memory inside a particular process be go to be mapped or not to actual physical piece of ram and so the same address inside a different physical process could be map in a completely different fashion so , need to change the process",
        "i know that i want to read a particular memory ok let , read this piece of memory here then i can bypass all of the page table vlookup if , have read the same piece of memory or a nearby piece of memory in the very near future so if i swap now from process one process two i have lose all that information about the tlb in other word if i now inside process two then in order to read or write even a single bite of main memory , have get to follow the page table and remember page table will typically for , process down slow , down say two or three time compare to just begin to access memory immediately so tlb here make naively , program run say two three time slow simply"
      ],
      "lecture 38-Q09": [
        "and one of the thing that will see that be different from before be that when , set up the hint , be go to say , know what the kind of socket i would like today will be a socket d gram as oppose to a socket stream ok so , have make , socket and if , just want to send something somewhere just simply call send too and that moment , say here be , fire descriptor here be the memory address that i want to start send byte from then on the number of byte and here be the address off , go seal , with a kiss and off off both at packet right and hope , hopefully , virus what about the receiver on the receiver , need to bind , to a particular port number on particular ethernet card so , be go"
      ]
    }
  },
  "topic 7": {
    "keywords": [
      "web server",
      "web page",
      "ip address"
    ],
    "mentions": {
      "lecture 06-Q07": [
        "1 minute"
      ],
      "lecture 08-Q11": [
        "0 minute",
        "3 minute"
      ],
      "lecture 10-Q06": [
        "2 minute"
      ],
      "lecture 18-Q07": [
        "0 minute"
      ],
      "lecture 24-Q07": [
        "5 minute",
        "6 minute",
        "10 minute",
        "11 minute",
        "14 minute"
      ],
      "lecture 25-Q01": [
        "1 minute",
        "4 minute"
      ],
      "lecture 25-Q02": [
        "0 minute"
      ],
      "lecture 25-Q03": [
        "0 minute"
      ],
      "lecture 25-Q05": [
        "0 minute",
        "9 minute",
        "12 minute",
        "15 minute",
        "16 minute",
        "17 minute",
        "18 minute"
      ],
      "lecture 25-Q06": [
        "0 minute",
        "3 minute"
      ],
      "lecture 26-Q01": [
        "0 minute",
        "1 minute",
        "2 minute",
        "4 minute",
        "5 minute",
        "6 minute",
        "7 minute",
        "10 minute",
        "13 minute",
        "17 minute",
        "19 minute",
        "20 minute",
        "21 minute"
      ],
      "lecture 26-Q02": [
        "0 minute",
        "2 minute",
        "3 minute"
      ],
      "lecture 26-Q03": [
        "0 minute",
        "1 minute",
        "2 minute",
        "3 minute",
        "11 minute",
        "13 minute"
      ],
      "lecture 26-Q04": [
        "3 minute",
        "4 minute"
      ],
      "lecture 27-Q01": [
        "3 minute",
        "6 minute",
        "7 minute"
      ],
      "lecture 27-Q03": [
        "0 minute",
        "5 minute"
      ],
      "lecture 27-Q04": [
        "2 minute",
        "7 minute",
        "8 minute",
        "9 minute",
        "10 minute"
      ],
      "lecture 28-Q05": [
        "5 minute"
      ],
      "lecture 29-Q07": [
        "2 minute"
      ],
      "lecture 30-Q02": [
        "2 minute",
        "4 minute"
      ],
      "lecture 31-Q02": [
        "1 minute"
      ],
      "lecture 32-Q02": [
        "0 minute",
        "1 minute"
      ],
      "lecture 33-Q01": [
        "0 minute",
        "1 minute"
      ],
      "lecture 33-Q02": [
        "0 minute",
        "2 minute"
      ],
      "lecture 33-Q03": [
        "0 minute",
        "1 minute",
        "6 minute"
      ],
      "lecture 33-Q06": [
        "1 minute",
        "2 minute",
        "3 minute",
        "4 minute",
        "6 minute"
      ],
      "lecture 33-Q07": [
        "0 minute",
        "1 minute"
      ],
      "lecture 35-Q08": [
        "0 minute"
      ],
      "lecture 36-Q01": [
        "12 minute",
        "13 minute"
      ],
      "lecture 36-Q02": [
        "0 minute",
        "1 minute",
        "6 minute",
        "7 minute",
        "9 minute",
        "10 minute"
      ],
      "lecture 36-Q03": [
        "2 minute"
      ],
      "lecture 36-Q04": [
        "0 minute",
        "2 minute",
        "6 minute"
      ],
      "lecture 36-Q05": [
        "2 minute",
        "3 minute"
      ],
      "lecture 36-Q06": [
        "0 minute",
        "4 minute"
      ],
      "lecture 36-Q07": [
        "2 minute",
        "3 minute"
      ],
      "lecture 36-Q09": [
        "0 minute",
        "3 minute"
      ],
      "lecture 37-Q01": [
        "1 minute"
      ],
      "lecture 37-Q04": [
        "5 minute",
        "6 minute",
        "7 minute"
      ],
      "lecture 38-Q02": [
        "4 minute"
      ],
      "lecture 38-Q07": [
        "0 minute",
        "2 minute",
        "3 minute",
        "4 minute"
      ],
      "lecture 38-Q08": [
        "0 minute",
        "1 minute",
        "2 minute",
        "4 minute",
        "5 minute",
        "7 minute"
      ],
      "lecture 38-Q09": [
        "7 minute",
        "8 minute",
        "10 minute"
      ],
      "lecture 39-Q02": [
        "0 minute",
        "5 minute",
        "6 minute",
        "7 minute"
      ]
    },
    "captions": {
      "lecture 06-Q07": [
        "example the long running web server or a long running database or even shell that perhaps do this so what happen now well those child will eventually go to finish but , never call wait on , so , finish but , be not do anything anymore yes lady and gentleman , have manage to create process zombie so , child dead but , be not do anything anymore , have not go away yet , still know thing about like , process id and , exit status in fact , be go to clutch up the process table inside the kernel and if , make enough of these zombie then in future call to fork inside , code and other user of the system that may fail so at some point , will not be able to make any more process so , be important to clean"
      ],
      "lecture 08-Q11": [
        "ok right so what have , see what can , what can , conclude from from , little paper demo well let , try to think a little bit more general than just the example , have see and also maybe , can understand why what happen when , actually use this ok so first of all , be actually really hard to prove anything from these be often the case that , actually want to run real simulation on real example so for example , may actually run , memory allocator as part of a web server or database or a chat client or chat server or some other large piece of software that need to run very quickly or even a game so something which need to run well have good performance for extended period of time ok so uh would be concern about well , big problem be , be concern about fragmentation and there be several reason , care about fragmentation there be the obvious one which be that now , have get piece of memory that i can not use very well because , will sparsely separate",
        "space so that mean if , run this over a significant amount of time say on a real web server or something which create a lot of object and then freeze , will delete stub then very quickly , eat into , large space and so , know if , 'd kind of just sketch this out here if this be all of , memory if , have divide , memory up into two area for some reason because , have get an object say in the middle here then very quickly , be go to start eat into this space so this space be go to get small but so be this space whichever one happen to be large at the time will be eat away will be use to assign more object so with bad fear , tend to see be lot of medium size hole lot of medium"
      ],
      "lecture 10-Q06": [
        "so , see this in thing like say game where huge , know that , just want to create object and , be only go to disappear when the user die or which be the end of the level , see this in high performance web server where say or , string manipulation whereas , try to take the request and extract the head of information and exactly what , want or that string stuff , could call new and delete or malloc and free but why do not , just put , into a pool because , know that , have a very temporary lifespan and once , satisfy this request once , have decode , , can throw all those away in just one go so that be memory pool for , very simple concept here be a very simple implementation"
      ],
      "lecture 18-Q07": [
        "hi so let , start talk about the reader writer problem this occur in all sort of problem where i want to build a read thing for many different process and thread and occasionally update , so this for example may be a cash , may be , web cache perhaps , have hear today that many , have , web page be not serve by a single server but instead , have hundred or thousand of box set up around the globe already to cash , content and so that be how , can have an extremely responsive an fast that internet by cache the content close to the end user user so great most of the time , just want to do some kind of key base look up so ultimately , have this kind of algorithmically idea but occasionally , actually want to update value into that cash similar example be maybe , have get a sql database or no sql database and i need to do some kind of query on a table"
      ],
      "lecture 24-Q07": [
        "i mean for example pass packet be for , web browser perhaps , be for , service etc so i want to have a database perhaps i want to have a web server or run on the same machine so how do , differentiate where this particular packet should go for that let , think about if , take a steam ship to california , may end up a different port ok so , will have one other piece of information which be actually what to do when a packet actually arrive on particular machine and will differentiate where , should go by a port number and a port number be pretty small be actually only two octet in other word sixteen bit ok so , have only get number between zero and two to the sixteen minus one possible port number and",
        "time , set a network packet typically will have a source port and destination port as well so let , complete , little diagram in here ok so , have get the ip four address which be go to be make of eight octet for both the source and the destination and then , be go to need a port number as well for the source and the destination ok so when , want to send these packet in practice , need to specify how , want to wrap up , datum so , need more than just an ip for protocol in fact , will quickly discover that there be two protocol base on top of ip4 one of , be tcp and",
        "this be a big hint that , be talk to a process that have at least root access so if , trust the machine , at least to trust the process that be run on this low number port if , be connect to port number great than a thousand and twenty three then , these process be can be run by any mere mortal on that machine so basically , now trust that any user on that machine be not go to do anything nefarious without with , datum ok so , will port number , be specific to the protocol so if , be talk about a tcp protocol then listen on port twenty three will be the ssh service so i can log in use ssd or if , be listen",
        "to a web server there be another kind of protocol that i briefly mention which be this udp protocol and udp be very rarely use because , do not make any guarantee about the arrival of the information so if i send out a udp packet , can think of , as a bit like a classic telegram hey let , send out , telegram let , hope that , arrive to someone listen at the other end however telegrams can be lose in transit there be no guarantee that , will actually ever arrive , similarly , actually , can be duplicate in transit so , may discover , send out one udp and , get to arrive at the other end also if i send out two udp packet ok so let , send out one and then another one with one",
        "pipe where , can send stuff in and , will get the same byte out eventually in the same order by the way one difference on tcp compare to the unix pipe , see so far be that both the client and the server can send and receive so , behave as a full two way communication medium so i can from the client sense after this server to request a web page and on the same connection the server can write back information and , will appear outside eventually to the client again ok so that be very quick introduction to some basic idea from udp , talk about ip four , be the most common kind of packet , will see today on the internet , talk about this special ip four address and ,"
      ],
      "lecture 25-Q01": [
        "of low level idea instead , story start here with the description of the packet of how , wrap thing around the network ok so , have already mention ip version four , be the most popular kind of route today in , network but as , know , be actually run out or have run out of ip version four address because , address be only limited to those four octet so today , be start to see a rise in the new version of the ip address internet protocol addressing which be ip version six so there be other for example there be still appletalk which , may find possibly in a lab full of apple machine i suppose but today most of , packet be use ip four or ip six",
        "api , get to define how , want to access remote file and resource and describe thing like directory service as well so this top most level this be where , start talk about ok i want to be able to access web resource use http which , be a protocol that grow out of a simple file transfer protocol and another well know protocol here be smtp which be a way for , to send email simple mail transfer protocol so smtp allow , to send very simple message or to send email with attachment for example ok so these different level of abstraction allow , to work independently so for example tomorrow i may decide that as , want to access a web page not over tcp but over udp of course if i do that then"
      ],
      "lecture 25-Q02": [
        "hi ok so let , talk about udp and tcp be two protocol that allow , to send information from one machine to another so udp be stand for user datagram protocol so a datagram be just a fancy word for a packet , can think of , like a telegram so user ground datum critical \" the key characteristic of this protocol be that , be connectionless just like a telegram , can say oh i want to send , to this ip address and on this port and , can fire , off and off , go so let , create , little message and send , and let , fly away right so , be not go to track , , do not get a notification when , get there there be no there be no protocol to set up in term of say"
      ],
      "lecture 25-Q03": [
        "ok so let , talk a little bit about http so http be the mechanism today that how , actually get a web page and http actually grow out of an existing protocol and this very first version of h d two p the first of official version one point oh and also one point one be a text protocol so why do , think that be why choose a text protocol because this of always advantage to a binary protocol with a binary protocol i can be a lot more succinct i can choose , protocol so that by the number of byte i need to send or octet i need to send be minimal so why do , think the very first version be text base ok so the reason , be text base be because , be easy to implement different client and server and , be easy to debug the actual connection which be happen over , will tcp or udp connection and , be easy to write"
      ],
      "lecture 25-Q05": [
        "ok so let , build , a web client so this be not go to be quite as good as firefox or chrome but i promise , that , be a lot fresh and also a lot small there be just one little downside which be that if , want to navigate to a different page , be go to have to recompile , but nevermind , be for a technical audience anyway so here , go , want to build a web server and , want to specify name like illinois dot edu and , need to convert that there into a tcp address right for that here be a really really useful function getaddressinfo in fact , do many thing but , be go to use , today to create the information , need to create a socket and also to call connect and so , eventually will get back a family a socket type and address length and and address as well so , will use these to kind of",
        "this struct actually be ok so that be down here that be , address and address length let , grab those from the getaddressinfo result ok so , have get result address and result address length ok as usual let , check that connect actually work ok so if this be equal to negative one , know that fail guess so , have get connect fail all right and , will print out a little message and exit ok so first of all let , just see if this actually can connect to illinois dot edu alright let , see if there really be a web server listen on port eighty on this address i think , be time to compile this so let , clear this i want to make , text a bit large",
        "okay so , will read from the socket ok and , will say here be the buffer and , want a maximum of say that array size and then , can just immediately print , out so let , send that to , standard out and here be the buffer and i want to send this many byte except let , just be a little bit careful let , check that be at least one so if byte receive be great than zero , will print that out ok else let , print something out like kind of read fail ok right so , have get , beginning of a web server and , be just go to when , connect send ,",
        "understand ok so the status code be four hundred and , do not like , arbitrary request let , send something which be actually close to a real http request ok let , change this message now to something which be a lot more reasonable let , say that i want to get the follow resource and , be speak a certain variant of http so http one point oh and this time , be go to say that i know that different host could be live on this ip address i want , to behave as if , be illinois dot edu ok and then lastly , know that a line have to be follow by a blank line in order for this request to be finish ok so that be a full request now , be behave a lot more like a reasonable http client ok so will send all that so all , have to do be recompile",
        "be in klang and run , an be here then , get a different response now , get a status code of three oh one move permanently ok meaning that the resource that , want will never be available on the current request instead , will see that , be say that illinois now support encrypt communication encrypt version of http and if , want to see this web page , should open a new connection on https which would be a different port now , little web client today do not support encryption yet so , be not actually go to implement that instead let , actually connect to a different server let , connect to say , local machine on a local port so how can i do that right so let , go",
        "to do be comment out this different line and uncomment this one there , go , be now connect into a different machine and notice as usual that , be use quote double quote here to talk about a string but , be go to make a little mistake here , be go to say that i forget that port number need to be quote as well so now will connect will try to connect to this and see what happen ok so let , run clang and yes , get a warning but if , run , , will see , get a segmentation for why because , try to read a string to address eight thousand and of course that be not go to work so let , fix , code there , go so now , be connect to port eight thousand right ok i run this i get connection refuse because right",
        "so in try to connect this moment where be , connect call this be what this be where , web browser fail connect fail , send a packet , say hello , 'd like to start a tcp connection but there be no one listen at the other end so if , could not complete the handshake ok so this be where , exit out here , be unable to then send another request alright so i see to see if i have python two instal on this machine ok so what what be try this simple http server ok alright because i do not have http , into so , will have to activate let , just try"
      ],
      "lecture 25-Q06": [
        "ok so let , get a server run right so if i have python two instal i could say python simple http server something like that but maybe the ttp be actually capitalize but , have python 3 so i can say right python http dot server ok and be , serve or server , be go to guess server ok great so this be now listen for http request on port eight thousand great let , give , one k so here , go home fire fox , be go to connect to localhost colon and then the port number so off , go and wahoo what do , see , actually see that this little module by by python give , a directory listing and then i can click on a link here ok and actually see the code that , just write today which be kind of fun ok and if i want i could have a little website here",
        "the status information so this header information at the top here , would not normally display to the user , can see that now , be be serve by python and here be a stuff here be the html document that , can now pause and turn into a nice look web page and look here be all of the the link that , may want to follow so for example here be client dot c and here be a out etc so the last thing i would do be let , actually request the byte of client dot c and then , have get a self - aware client program so all , have to do be just change the thing that , be request ok so let ,"
      ],
      "lecture 26-Q01": [
        "hi welcome to let , twenty six ok so let , get start today , be go to look at tcp client and server and first of all let , just have some fun with some inbuilt thing ok so if , have get python three instal then , already have an inbuilt web server ok so let , to navigate to a certain directory and then , be just go to start , right so python off , go let , do python three and , will say ok i want to load the module http dot server ok now right so office go off , go , be list as , can see on port eight thousand so let , connect to this little web server case so right so i will now go to firefox and connect there and do , have a connection ok yes , be alright , be happily respond and finally",
        "suppose by default , do this all the file and if i click on story dot text for example i can see the content of the file ok right so if , do not have python three instal , get python two then i think the similar module be something like sorry simple http server and in both these case , can specify a port number so if , want to comment that one up if , want to specify a port then i could specify a different part number here so let , choose for example if i try to do a low port number like poor eighty , will not be very happy , get permission deny because , be not root right now on this system",
        "to be an administrative build to listen on those port so let , not connect on let , not listen on port eighty let , list on say port eighty eighty ok great and off , go again so now again i can make a connection use , favorite web browser and off , go and see the content again wait and , will see this particular web browser also print out who be connect to , and when and what resource , be request so another useful tool be call netcat let , have a look at that case so netcat be a swiss army tool be well worth , instal for when , be play and or debug with simple protocol use tcp and udp netcat can behave as client netcat can behave as a server so once , have instal",
        "alright and , will see that , little web server over here in python do not like , message here be be hey bad request and response to , request , send the follow , say ok , i do like , , be as an error code of four hundred and , do and , shut down the connection so let , let , let , try again but this time , will send a valid request ok so i happen to know a little bit of http and valid request look like this so , have get and then what would , like well how about , could have the story dot text and the protocol that , 'd like to use today be http",
        "have a blank line and there , go ok so this be what the server reply be there be right yeah yes i have that resource for , so , be ok so status code two hundred tell , a little bit about , the date and the content , be give back be just plain text that be a mime type and there be go to be twenty one byte case so after , have as a complete after , see this black line , expect to have twenty one more light , get twenty one byte , know , get the whole file so there , be once upon a time or if i connect again and i just say ok give , the homepage right so again i need to say what protocol k a new line , will see that great , be now give , a content type of text leave html in other word a web page and the speaking",
        "nine byte and here , be and if , look inside that , will actually see here be the list of file in the directory so now , could actually kind of click on those link and load , for example so great , have get , a web server use python and , have get this swiss army knife call net cap , can even use netcat to kind of transfer file as well right so right so what i mean by that be , can set up netcat to listen on one end and use netcat on the other end to to send a file or vice versa sooo let , get out of python , do not need that anymore instead how about , log in remotely to a different server so , use to be a very useful command for this call telnet the only problem with telnet today be that , send everything",
        "send someone else on the internet or someone else that be run a router or even possibly in the same subnet can sniff , packet ok so that be a problem , will be able to sniff , password ok so telnet be barely use today there be a few case of embed hardware that may offer a very very simple telnet interface say just for debug purpose but today tell netizen not instal by default on most machine , have to install , , let , show , one still fine example use of telnet and that be not follow that there be a telnet server run on the follow ip address so let , try connect to , ok right and off , go and rather than give , password prompt",
        "call the parameter i need for here be go to come from whatever get address info return now , may see a little bit of traffic actual packet leave machine , machine first of all when , call get address info because , be go to convert say a host name to an ip address and of course , will see packet leave when , call connect handshake be require between tcp client and server and so the moment , could connect , be go to send out a packet to that server to say hi please will , connect , let , do a handshake let , do , tcp handshake right now one surprising thing about get address info be that , can return zero one or more result and if , remember that the result be this struct",
        "why , need also to pass in how big be socket address so that be why i will see all under cast to this very simple type of struct and also , need to pass just how big be real struct be just as a kind of a way to verify that , be read the reading and write byte correctly in a valid struct ok so let , get back on track hit the skews , get address info be a complicated beast , be quite long but , , do not because , call many other call include do , dns look up to convert host name to an ip address , actually have a special way of return error rather than return something",
        ", be and set multi zero like and how many byte would , like to set to zero gay so if , use the pointer here that would be incorrect , actually want the size of the whole struct so i could write struct address info like that all i could just say size of hint so great , have say all to zero now i can start initialize the field that , actually care about right so , want ip four so inside here , can say address family inet by the way there be an inet any which mean so if any which mean , will take ip for ip six i just want to serve i do not care about the exact mechanism of the ip address but today in this problem , care about dinette four so let , use that",
        "what so what do , need to hear well first of all , need the ip address i can specify that a string either as an actual string like this or i can specify , as a host name so for example like illinois dot edu ok if i do this then there be probably go to be a packet leaving , machine in the next moment to say hey , need to figure out the ip address of this host name can , help , please right and then , need a port number so the port can actually be specify symbolically so i can say well i care about the default port connect that be use for this protocol this secure https all i can specify precisely so i can say ok i happen to know that be four",
        "develop some example and , laptop and , be run an encrypted https service web server on some unusual port late for example eight four four three ok and , choose that number because , be great than one thousand twenty four be not a privilege port so anyway let , pick a number right now , need the hint so here be the address of , hint and finally , need here be the address of that pointer please change this please and , will do so if , successfully manage be to take the information , give and figure out a way to connect to that server ok so what would , do for each entry here ok so for each entry i would call that i want to suck , and then , be go to try to connect and i would use the result inside each of these result object to that list to",
        "be one other thing , can occasionally do with a client but , be not normally necessary , can use and now , be go to see bind when , get to talk about set up server but realize that normally , do not care about the port number that be use locally and , do not care about specify exactly which network card , should use , 'd like , machine to figure that out automatically for example suppose , have a machine where one network call talk to , corporate internet and the other network cut talk to the internet and other network card may be connect to say a fiber line that run under the atlantic ocean , may want to explicitly specify which network card to use rather than let"
      ],
      "lecture 26-Q02": [
        "ok welcome to part two so meanwhile the story continue with a new hope as , can see princess leia have now enter the story with the two droid talk about , and that to , , look like a very furry wookiee . ok alright so meanwhile let , see about create a web client use what , have learn so quickly viewer tcp client and , will show , another kind of trick along the way here ok so what do , get , have get , hint , be set , to zero i want to do everything where i just do by by paper and maybe i want to connect locally or maybe i want to connect to illinois ok so first of all let , try let , try , and see what , say if , do this ok so pick an address right so how about cs ok right . remember that the port number must be in double quote , be pass a string ok and , be take the",
        "right ok client off , go wait woohoo , connect ok and what , give , , tell , to go to a different page ok so please refresh this and go to this other web page fine so , 'd write a web server web client now which actually kind of understand this text and follow that link right but , will see that fundamentally , request be ok and , give , back 163 byte of actual content and the content , give , be a web page ok that be the mime type , text / html so let , have a brief look at the remainder of the code to see how , work first of all , be define , request here just use a macro so this time rather than just request a",
        "to behave as if i connect as if , be this other address this other host name , \u00a0  illinois.edu . here be why today , can have multiple hostname which resolve to the same ip address and so , web server do not know which actual host that , would like , to pretend to be unless , tell , so perhaps if i tell , that , want \" to connect to behave as \" \" www.cs.illinois.edu \" \" \" , may give , a different response hey let , just try that for a moment ok so , will compile , ok and , will run the client again ok ok nope that be still tell , to go to a different"
      ],
      "lecture 26-Q03": [
        "ok so let , make , a server socket now ok so there be an exciting moment right so this be what underpin database cdns web server etc etc this be what allow other people to connect to , so here , go right the what , will do today then be a little bit different from what , see with the client here be the first big change that i want to make what be call a passive socket so passive socket be as , sound , just sit there , wait for client to come to , ok so , do not go out and reach out and try to talk to a remote server no , be completely passive , just sit on a particular port wait for those packet to arrive so this be the first big change as to how , specify that , like a server socket right so",
        ", be not go to try to go out to connect to a remote machine when i call get address info i do not need to specify \" a remote address , be not pass in illinois.edu here i be go to specify a port number now , be possible to specify zero here mean here , will take any port but today let , start with just explicitly choose a valid port number so , will assume that port one two three four be not be use by another process because , can only have one passive socket listen on a particular port for particular socket type ok so if this succeed , have get everything , now need to create a socket but here be a here be the new cool",
        "so bind say right so far what have , do , have make an abstract socket and , do that much early at the top of the code here , say i need just an ip4 tcp style socket thank , very much now , actually want to make that be on a particular port number on a particular network card on , local machine and that be the purpose of bind right so , can think handcuff or whatever to say hey , be go to actually bind , abstract socket to an actual port number an actual end point on , machine ok which be clearly what , need to do for , server ok so at this point now , have manage to get that port number one two three four as , passive port number but , have not open the shop yet and that be the purpose",
        "to start to accept in connection request on that particular port number so , be not go to hear about those connection immediately instead the kernel be go to handle that initial handshake from remote client and , need to give hint to how many remote client , should allow as a backlog so if i put ten here that mean that i can do nothing and up to ten customer can walk in the door before i have to start kind of process those customer so if , could like the equipment the metaphor here would be like a server inside the greeter in a restaurant , first walk , to a table and there be no one yet to actually hear , order to actually talk start talk to , but i can have ten customer actually walk into , establishment walk into , port number and the greeter which be the kernel will do the initial handshake",
        ", would fail and accept would would not be able to give , a valid file descriptor anymore so , web server would stop work when i say there be not much of a web server right now because , be not truly actually return web web content not something that be a real web page ok and , be not actually truly talk http instead so let , modify , just use kind of dprintf and talk about some other thing that this thing be do as well ok right so there , go now be dprintf k and that be k compile , k and run , again",
        "make a new new passive socket on the same port number that be actually previously use so if , wait for a little bit long , go see now , be actually work again i do not even touch the code ok so that be one kind of fun surprise , will have with networking will talk about how , can reduce that timeout period to zero second in a future lecture but realize that that time out be deliberate , be actually there for security purpose so more about that in the future so anyway , have get a little thing work here , should now try to connect to , let , now try use say netcat so netcat which be netcat or sometimes or some system be just nc , be a netcat i want to talk to , localhost"
      ],
      "lecture 26-Q04": [
        "be thirty two bit and this be use to describe ip4 address as well so if , want a numeric version of an ip4 address and need to convert , from the network implementation to a number which be understand on what machine , will be use as well ok so use these call then mean that now , can write c code which be compatible and , do not matter whether , cpu use a little endian format a big endian format or a completely different way to represent integer number that be go to write for port number , can be sure that as , actually want to convert these into something to send down the network on the internet that , have correctly convert the integer bit pattern into the correct bit pattern that be go to be understand by the network to mean the actual same number",
        "the kind of last thing here be that hey notice that accept have a couple of argument that , be not use i can actually use accept to tell , a little bit more about who be connect so with every tcp socket , not only have the destination address , also have the source address so , know where that socket where that client be come from i know , ip address and so if i wish i can make use of that so for example i could check , ip address and if , be connect from a certain machine i may give , a version of the website which be out of date or i may deliberately give , a website which have thousand of link so , can keep click for anywhere"
      ],
      "lecture 27-Q01": [
        "code to know about get information about , socket so here be what , will do , have this little structure here call socket address in call and because there could be different kind of socket , have to pass through these kind of function not only an address of , struct but how big , be as well so that be a little bit of code here , do not say ok i want to know the size of this and while the amusingly , pass in the address of this as well ok so notice there be some casting go on here be cast , to this base class if , like except corsi do not really have inheritance so , have to do explicit cast there right so out of this one let , print out the actual port number ok which should be the same as the port number that , ask for which be a thousand",
        "how come that everything seem to work except that the port number , get back the point , put , out here be incorrect , print out four that be uh annoying in the current code where , actually explicitly put in thousand and twenty four but even big problem when , actually say , know what just find , any of freeport because , be do some development and i do not want to specify the port right now just find , a free one ok so now , have a big problem that if i run , this port number be completely wrong so if i try to connect , do not work right so what do , forget what do , miss what , miss be that this low level c structure that , be get information about the socket bed , be information",
        "just simply print out the port number like , be attempt to do here the bit that be inside this field of this structure be not in the correct order to represent the right integer , need to convert , how do , do that , need to say ok i want to go from network to host and port or equivalent to sixteen bit of the word , want this short ok and let , convert that right and now , should give , the correct result so let , try that ok so , will recompile this run , again and ok now , have get a port number let , see if , believe , ok so , will get back over here and will try to get to , and congratulation now , work now , be give , the correct port number ok so that be kind of the"
      ],
      "lecture 27-Q03": [
        "ok right so before , dive into actually represent a file and let , talk about some of the thing that posix give for , and review how , can talk about file inside different directory ok so first of all , can ok there , go right , have probably see these before so , can talk about path and when , talk about path to a file or directory , actually have two kind a relative path which be relative to the current directory of a process so whether that process be bash or , shell or a process that be currently run like a web server that process have idea of the current work directory or the current directory and so if , want to talk about that kind of directory , can just write , as a single dot so , have probably see example where , be sit inside bash and , say ok run the file dot slash a dot out in other word look inside the current directory for this particular",
        "be all start , will notice with a forward slash so , be talk about an absolute directory and of course , can convert a relative path to an absolute path and vice versa and one of the way that , be go to talk about do this be when i need the absolute canonical path ok so let , first of all make a an absolute path which be not canonical ok so let , start with the a forward slash so ok , be go to go into say /etc and i may find thing like the host name of setting for , web server and other thing inside there ok but then i want to go to parent directory and go somewhere"
      ],
      "lecture 27-Q04": [
        "find that directory , actually have to go and make those place , have to make sub one sub two so let , do that , can say make this one and then make do a sub one sub too if i want to do that in one go i could have actually say minus p and that would have make all of the child directory which do not exist for , automatically so i could have do that even just one go but anyways so so now those exist so now when , run , , give , a non null path , go into sub one go into sub two and then i say ok now i need to find a parent now , find that so great be give , canonical path let , start talk about how , can use this for something like a file server so which be part of a web server how can i make sure that i only serve content from , web directory i do not want to start this happily send the content of arbitrary file ok",
        "of the following in other word the canonical path should always start with the follow character that , have highlight if there be a malicious user request resource for example , may request dot dot slash dot dot slash dot dot slash dot dot slash etc let , say message of the day or the password file or something more nefarious to do with , web server now , may claim oh i do not know how many parent directory to go up well , do not take very long to try four and if that do not work try five and six and then seven and pretty soon , be go to hit the original root directory so this be just a simple problem of enumerate these and typically , be go to be less than ten ok so let , try that so will",
        "reduce this well try will try a couple more ok oops i want a.out ok look , actually find , password file so , guess the number of time to go up and in fact in this case because of the symbolic link which , have not talk about yet on this machine etc / password , be real canonical path be that follow private etc / password that be the absolute directory so if , be to check this result , would quickly discover that , do not look like a valid subdirectory of of , web server so what i should do then be check that the first say thirty character also truly be look like the base directory of , web content so what i",
        "ok let , do this be that will say that the base path can be for the web server that be go to be all the content inside sub one ok and now , have get two path and now i just want to see if , be valid so for this i want to say ok let , compare the first n character so let , have a look at the path of what , 'd like versus the base path and , will see if , start the same so those be the two string i want to compare but i do want to compare all of the letter and , want to compare up to the length of the base path ok so if , be the same then great i now know that , be look inside that subdirectory so , can ok will check that return zero if , be then will agree",
        "this be correct , can say look valid to , right otherwise let , not give the user that file so let , see if i get the number of parenthesis correct right ok oh wait i need to include strncmp so i have not include string.h    yet ok fine let , get string.h each ok right ok let , run , and right now , do not look like a valid file so , do not serve , so let change this back to something more reasonable like sub two and the cat picture ok so off , go run , again and great so now the request the file that , be go to serve over , web server look like a valid resource ok sure ,"
      ],
      "lecture 28-Q05": [
        "about sue do and , will see , get little s here which mean ok the set effective user id be set when , run , when , execute , , be not only give permission to execute , but on , system suit will actually run as root not as , right so that be the effective user id little bit there be also one for the group but let , not worry about that today and one example of that be when , want to do so , two could use this for example perhaps , want to write a web server that school , be a web server and , know that , want to run , on a privileged port for example port eighty or port four four three if , want to make a web server which be list for http request or https request and , 'd like , little program , little web server to actually"
      ],
      "lecture 29-Q07": [
        "inside , also for example , may find a subdirectory cause dot ssh for the secure shell and there be useful thing inside there for example , can set up a whole load of alias inside config so that rather than have to do ssh and then a long name , can just have a nice short name , can do thing like say ok for this particular host connect on this unusual port number or forward these other port as well so that i can say directly connect to a database that be list on a port on , server and make , appear as if that database be actually ready to be connect on , local machine so ssh be kind of very powerful and , be all configure by these kind of little hidden hidden text file let , get rid of that plus ssh , can make public private key pair , can even specify particular public private"
      ],
      "lecture 30-Q02": [
        "a different ssh session where now i can still look inside this directory same directory where be , head i get there , be ok so i should be able to run this so let , run hello and , say great yes hello engrave , user id as a thousand and , affective user id be a thousand in other word anything this process anything this program do on , behalf have , right have the right of angrave so , can not start alter system file , will not be able to open port less than one thousand twenty four for example case so , be not go to be a very good web server if , do not have those privilege right then so that be not stop play with this let , run this as say root ok so , be go to run hello again",
        "hello be complete running shell now just by run , , have , can become root and do anything , want so that be a that be a way to attack a system if , can add a sticky bit to something which can do generally useful thing the alternative be that maybe , have get a bona fide reason to do this for example maybe hello be now go to be a web server so great now angrave for anybody else that can run this program can start a web server so maybe i want to change the permission on this so that only people within a certain group for example can run this program so , see how ok how the sticky bit be be useful here let , let , go and have a look at this for a slightly more complicated program where not only do i"
      ],
      "lecture 31-Q02": [
        "file right cull expect http address so , may say ok http something rather right and just like cat , will by default spew all of , content onto standard output so how can , fix that where , can either redirect , to a file or , can use this minus oh just to say hey figure out a reasonable filename base on the url that , give , here so curl be kind of tremendously useful tool , can even with , web browser get an equivalent curl command form a web browser request that be useful if , need kind of session cookie or other authentication item or color well , can specify additional header as well so , be a very fantastic and swiss army knife tool there right so let , imagine , have use curl together i"
      ],
      "lecture 32-Q02": [
        "ok so when talk about scheduling and how , be use , resource there be some very common term let , go kind of throw these so first of all there be the turn around time ok so let , draw a life analogy here if i ask , to produce a report and , start send , page and finally give , the whole report the turn around time yet be the time between when , first request to report and when , finally get , all complete so for example if there be a web server this would be the time between , make the request and then get the complete web page ok so this be go to be with in term of , little formula here thing like the completion time minus the arrival time ok write the wait wait time , have already talk about that , be the total wait time the total amount of time that process be spend on the weight on the redi cube",
        "do , think of that be , ok so this be the moment that the first output be create , can imagine for example that with a web page , care about the very moment , can thirst start send the byte back because that moment , can at the web browser can start trend the response maybe , do not have all of the javascript library available yet but , can store start to see the basic outline of the page or for example if , could long text file , may take awhile for , to load the entire content or fax if , be more something more complicated like a three d game or an architecture picture , may take a minute to load all of , high resolution graphic but even when there be few second potentially , can start to see what the page look like what , , model look like so the response time be the idea between the difference between the"
      ],
      "lecture 33-Q01": [
        "hi welcome to lecture thirty three so , be go to return to networking and , be go to see a little bit far but how to make a web server and also start talk about epoll as well so all kind of great stuff cs two forty one so here , go first of all let , just refresh some basic idea right so do what h two n s be and what n two h s be and why , need , one of , name stand for so hopefully remember that this stand for kind of host to network and the s stand for short ok meaning , be talk about sixteen bit such for example as a port number and this one end to hs around so that would be network to host so , use these to ensure that the bit pattern hold by that short variable that sixteen bit variable be in the correct format so for example if , have to send , down the wire to the network card to out onto the internet then , better make sure that part number be actually represent correctly",
        "these call ensure that if there be a different with different representation between how be cpu represent number and how the network represent number that the correct representation be store or use ok so right so , will see those a lot with port number and there be also the equivalent for four byte number as well so each two and for a long be always four byte and , integer varied between two byte and four byte so this be use for when , need to convert ip four address as well ok so right next review be what be the four call , need to set up a server right so hopefully , do not say get address info no that be just ice on the cake what , do need however be a socket ok and of course , be go to make a passive socket because that be how , make server socket right what do ,"
      ],
      "lecture 33-Q02": [
        "ok let , talk about some malicious attack against tcp first of all port hijacking so whatever now other malicious user could take over a port so , think , be connect to , web server but in fact , be connect to a malicious process list on the other end pretend to be a web server but in fact just steal , password etc right so how can , try to prevent this so there be two kind of common mechanism first of all the idea of privileged port so as to spell privileged correctly if something like this privileged port so , know that , need to have root or administrator privilege in order to be able to listen on a port number less than a thousand twenty four ok so , have to have administrative privilege which mean that no mere mortal process can pretend to listen on those port , already have to be bless by the administrator of that machine",
        "be capture by a different process ok so , have privileged port , have , have packet timeout ok on the port information which , can disable , will see how will do that a little bit be this the end of the story when , come to tcp attack absolutely not , have get thing like denial of service to talk about , have get thing like tcp session to talk about session hijacking ok so right let , think about what to pack , actually be tcp packet there be four basic piece of information plus one more that identify the two end of a packet so , have get the source ip and the port number and then , have get the destination ip"
      ],
      "lecture 33-Q03": [
        "ok right so , know the basic of hey when i make a server all i need to do be call accept inside a loop and ok , will handle the air conditioner return negative one but otherwise , give , a file descriptor for a client so once , have get that far descriptor i could write a very simple web web server or file server or database which service one request and then close that file script down and service the next request ok so that be not go to scale very well if i could only actually handle one request at a time so perhaps , next idea be to every time except return be to fork and , will have a child process work with each each client well that be scale up to a certain point because at some point , all these process may be very heavy handed way of service thousand of client process",
        "do a well job so maybe a well job be to use thread ok so great let , make a new thread for every client that connect every time except return let , kick off a new thread just to handle that request and some web server do that so for example there be python web server do that ok so this scale fairly well but of course if , attempt to have say a thousand active thread all try to run at the same time then , performance will start to suffer perhaps there be a well way of do this and so yes lady and gentleman welcome to the game , have try to figure out how to write really top and high performance server server that actually squeeze the most possible bandwidth out of , limit cpu limited memory limited network connection etc and , want to be able to handle not just say ten friend or hundred people that connect to , machine but possibly thousand or even great connection",
        ", will not find poll on , linux machine but , will find , on , macintosh laptop on os x because os x be base on bsd ok so which bring , finally to epoll so whilst poll be an improvement over select and satisfy a few corner case like be able to easily discover when file descriptor have close epoll try to kind of fix all the corner case of poll ok so today if , challenge be to write the world 's fast web server linux then , need to pull out epoll out of , back pocket so equal solve the order n problem epoll allow , to in order one time find out which file descriptor be ready to receive or send information"
      ],
      "lecture 33-Q06": [
        "free report for port for , but if , do that then , be time to actually figure out which port , be happy to do that where , can use get socket name but if , just simply attempt to read this struct this simple straight here then , be be for surprise a port number that , get there be in network byte ordering so that integer be not very useful to , when , actually want to print out , have get to remember to use do remember what hopefully , say well i want to go from network to host and , be a short ok so , have get a rap that integer with that and then , will print out the right number for , ok another quick note here be hey what be go on here why do i have to cast this stuff well be because see do not have inheritance and this socket address",
        "and so that need to be cast to the kind of the base type the simple type which be just a socket address here so that be why , do the cast , be in order to have this kind of fake inheritance model here right so let , go actually have a look at some real code now where , be go to implement an actual actual web server and yeah let , just go jump straight into code ok so will still the top ok right ok jump down a bit ok right so some code , be very welcome to use this to actually kind of print out , own ip address but",
        ", be some thing , have to do inside a good web server even a simple one here so for starter , need to handle sigpipe because maybe , want to send some bite down a socket but the other end be already close , if , do that , will get a sigpipe and the default behavior be seek pipe be to close up process so , well do something about that ok secondly a good web server will have to implement a well version of right because remember right can return just the negative wall and say oh , be sorry i get interrupt by signal such as sick pipe case so , well keep track of that so if right return negative wall and , error be interrupt then hey just restart right attempt otherwise let , keep track of the number of byte that , have send so far and keep call right",
        "send ok so will just need to keep track of how far along , be in term of the buffer that , be try to send out an make sure that , do not send too many byte so just take the total number of byte minus the number of byte send so far ok , need to be able to read what the client be send , so will do something similar with weed in the request header except , do not try to read the entire request from the user instead , be look for the magic slash r slash n slash r slash end mean great , have read enough to see the end of the header of the request ok so here come , main method where , be go to set up , signal handler straightaway will print out the ip address and , actually want to serve up this meme image as well so how could i figure out how many",
        "port number so how do , do that , can use this particular circle option call reuse address ok then will bind as usual ok and listen and then let , start look for a connection so , will call accept here inside a little loop and then ok wake up wake up , be ok great after accept return i know , have get a client and i can send a response so , will read , request at that point i may process which kind of what , want but today , be just go to send the meme if that be what , request that particular image then , will send the picture so i need to say be the first thing , response hey everything be ok i understand what , want"
      ],
      "lecture 33-Q07": [
        "ok sir let , compile , and let , go and then let , just run , so , will see , , be print out , ip address and , know , be listen on port one two three four ok so let , try connect to that ok so i need a web browser here so i need to go to http key and actually i do not want regular port eighty on a listener port one two three four ok do , work right why , have to give , a second right yeah ok so , send , a web page and then , make a second request to get the get the image and so here be a cove silly picture i use as , first meme and on this side , can see that , see the request , actually get the actual request from the web browser , can find out let , see who , also this be all of the information",
        ", accept where , come from and , be happy to keep the connection alive in this case , do not keep the connection alive in order for , to get additional resource , actually remember always close the connection so in fact this be actually kind of knew connection each time for every resource so , will talk about how , can improve that in a future lecture but for now who be , have make , a very very simple web server and , only take like a hundred line of code if that actually go to serve the internet and server picture ok so let , get outta here let , just see how long , be"
      ],
      "lecture 35-Q08": [
        "ok so let , get out of the weed for a moment and talk about signal kind of in real life first of all pathsss , want to write a web server so very famous one be apache and apache like many other program have configuration file and like many other program , want , server to keep run so just because , have change part of the configuration file be kind of annoying to have to disconnect user so instead the apache web server feature a little cute little feature which be if , send this particular signal call sick sick hub , will automatically re read the configuration file , be not go to do anything to exist user , will continue to satisfy , request but all new request that web server will be use the new configuration that , have just describe so that be kind of pretty cool also java next time , have get java process maybe kind of out of control or stick"
      ],
      "lecture 36-Q01": [
        "so that be why , be initial value random , be a security measure and in fact if , read a lot of the tcp spec and see how , be evolve overtime , be a protocol that do good effort to try to prevent malicious actor from either prevent delivery of packet or masquerade as as the other end , be not go to go into all those detail but understand the tcp make good effort but , be not perfect and actually , have continue to find vulnerability inside tcp over over many decade alright so that be enough for this video except for one little last question , see the tcp header and here , be but where be the ip address what happen to that , have only get the port information why be the ip address miss here so to answer that realize",
        "that this be the tcp header but on a real packet , be go to have the ip address in front of , so , actually have protocol wrap up inside other protocol a real packet would have ip information so for example if , be ip for , would have a thirty two bit source ip at a thirty two bit by , packet be thirty two bit wide i should win for the full length ok i would have like the source and target in here ok so so be the source and destination ip for ip six of course there be many more bit so , source ip four which be why network engineer do not tend to say , be a tcp packet will send to say thing like , be a tcp slash ip packet which be more technically correct"
      ],
      "lecture 36-Q02": [
        "ok right sir how about , cause a great flood right in fact , be go to cause a syn flood waha right so let , think about what , now know about tcp and see if , can bring down a server right so , first example of this be where , just start send packet to a server and so will send just a single packet to say hey server , 'd like to make a connection with , and here be , tcp packet and , be go to set the synchronization bit here be , synchronization number here be , ip address up here inside the ip part of the header here be , port number that , be come from here be the port number that i want to connect to please to meet , and if that particular destination port be open because someone be write a server and ask the server to start listen on that port then let , think about what",
        "please to meet , , 'd like to acknowledge , packet and let , start talk right so now at this moment the kernal have to remember the synchronization number that , provide and also the port number and also just get ready to start talk to , or hard so now this be where , can do , the synchronization flood first of all what , be go to do be yes the server will send back and an acknowledgement packet but , do not care about that acknowledgement packet , do not even need to listen to , or be interested in do be just keep send more synchronization connection to the server now , do not care about this acknowledgement so which mean , can even fake where this packet be where this packet be come from , can fake the source ip , can fake the source port and the server will send packet back in that direction but , do not care , be not list be",
        "a lot of machine resource so that i can still actually connect to regular traffic but there be more , can do today which be today , put intelligent intelligent firewall and network device in front of , , precious database and web server and , can try to identify in real time these fake connection versus real connection and so , only provide a limited amount of resource for these kind of fake connection attempt and protect , valuable but slightly slow resource like a web 's real web server or real database from these from all these kind of small packet which do not necessarily , could have do much but do not ask , bona fide request for server ok so that be kind of distribute in other service where , have many machine on the internet try to attack , machine and today that can produce kind of gigabyte of bandwidth",
        "device perhaps , have hear of bot net for example so i could use every machine or , botnet to attack a particular service which lead , now too and the most sophisticated kind of attack today where the so call internet of thing do not have service so this be kind of merely in one sense a variant of have distribute denial of service except now , actually , can do a lot more with this and , be much hard to discern beg , eat the malicious traffic or the fake traffic versus the actual real traffic and so here be the plan be let , say that , put a web server what i can do be if , bot net if if , be a malicious attacker and i own million of machine i can make those request from those million of machine look like bona fide",
        "why be , call internet of thing do not have service simply because today , see many many device simple device such as camera such as wifi enable light bulb that connect to the internet and have some kind of ability to run arbitrary code because , be so pure so badly configure so , be vulnerable to simple attack for example maybe the admin interface still have a password like admin or maybe , be run extremely out of date web server which be get know vulnerability or maybe , have some other well know a backdoor into , which allow an attacker to take over these device",
        "malicious actor , can find a million of these device or even billion of these device soon so now i can create very large attack from a very large swath of the entire ip address and then send all those packet to a single enterprise in attempt to kind of take , down and possibly extort some service or extort money forward from a company so this be device of the internet of thing base in out of service , be extremely hard to protect against the day the good hope of a company be to have a cloud base system and to attempt in real time to identify when , be under attack so as , can see , be continue to see arise in these level of attack be hard to say , be go to see tomorrow and if , be write code for internet of thing i employ , to write create device"
      ],
      "lecture 36-Q03": [
        "run some kind of tcp server on the lunar base so , will assume that control the lunar base there be make a new tcp connection each time so , first problem be , want to save the astronaut have second elapse between want to send a close air lock message and the server actually receive , datum ok so , ask about charge into the base an on earth side , run the follow code right , make a socket , connect on that socket to the ip address of a lunar base and , write the follow command and send thirteen byte right so , could use , understanding the tcp protocol to , to work this out first packet at the moment , call connect that be go to take one point three second to cross"
      ],
      "lecture 36-Q04": [
        "ok right so let , suppose that , have a web page and in , there be a small image like a thumbnail picture of a cat right so let , think about how long would actually take to actually get that datum to the client and , be go to start with hypertext protocol version one point zero which be the first major version of http and the simple as well so do , think this be a buy new or text base protocol if , say text , have be correct yes now one of the advantage of of text , be easy to debug , be easy to see what be go on but of course , be not necessarily that efficient in term of how , use network bandwidth and network bandwidth lead to limited number of connection that , can support on a particular physical connection and also a little latency simply because , have get to simply send more bite in order to get thing do so yeah there be some awesome limitation but the",
        "one tcp connection per per request and in fact be probably , be go to have two request be go to make a first request to say a homepage or web page and that will have some html incite ok so html look a bit like this , have get inside html tag , have get to head tag and inside that , have get thing like title and cache information and then , have get body tag and inside that body tag , be go to have say a background image or say an image tag to say ok here be an image here i may give a hint about , size but the source of that image be some other http request so make a new request to some server may be the same server blah blah blah blah blah and then here be a picture of , cat or whatever i want to load now for this calculation , be go to calculate the minimum time require so , be go to assume",
        "to be set so , will not worry about that instead , look at the minimum time so now , can see why this actually take more than just ten millisecond to get all this information and , will see that actually everything happen in pair so , have ten millisecond ten millisecond ten millisecond and ten millisecond be go to take a minimum of forty millisecond to display , picture and if , have multiple cat thumbnail then each connection be go to take more time so the very early web browser say well , know what , need to do well than this be take a long time to display all these advert , have on a page what will do be will , take cs two forty one will have say some multiple thread and , will make up to four connection at a time to each web browser so"
      ],
      "lecture 36-Q05": [
        "ability to have virtual host with https as well so that i could actually now have a web host business where the same ip address and the same server list on the ip address could be pretend to be multiple thing so for example maybe i could serve the web page for chocolate dot edu or document dot com and start sell favorite candy bar i could have another website that say sells go cart so i guess , be listen all kind of , favorite thing at this point and the same web server on the same ip address can pretend to be these different server so as part of the http request , could now send a header the say please respond",
        "i can specify a name like please behave as if , be go kart dot com for example so that kind of become an integral part of the spec and there be integrate with https as well right so , still have some problem however which be that the cat jpeg can not even be send until the web page actually be send back to the browser and the browser have actually finish look at the content and figure out the cat jpeg be even require plus with each request , make , be not just say hey i want cat dot jpeg there be a whole load of header information for example , may be set cookie information because the cookie disambiguate who be make the request so cookie can represent some session information"
      ],
      "lecture 36-Q06": [
        "ok so let , talk about modern web request so let , think about how , can make , protocol much more efficient ok so here be some idea first of all let , think about where , experience slowdown so one be the problem of , ask a waiter for a particular resource and off , go and , bring that back and then , ask for another resource and off , go and bring that back this be quite inefficient , would be great if , could just ask for multiple resource and then , just arrive as soon as , be ready so the first idea then be hey , can have pipelining which mean that if i can spell , that i can make multiple request and not have to wait for the response , be like yes i want the web page so give , the give",
        "when , request the picture of so the website of , favorite cat dot com , the server already know the resource that , be likely to want , already know that , be in the future as soon as , decode this web page that , be go to be ask for a cat say the react javascript library and maybe the custom css s so why do not the server actually say hey have these resource i know , have not even ask for , yet but i know that , be go to want , in the future so , be a bit like the way to say hey have this have this soul all this bread or idea or all these being i know that , have not even finish , order yet but i have a sneak suspicion that , be go to be happy that i already start for fill , table and pull these thing on , before , even ask"
      ],
      "lecture 36-Q07": [
        "so , see this in various form where say , want to get a web page and , use this as motivation for h t p two to say hey , should be able to get all these resource at the same time hey , solve the problem well , have not solve entire problem because beneath http two , be still run on tcp and this thing back to what tcp do ttp say great , have get these packet arrive and the kernal be go to assemble , into the correct order ok so , could use this sequence number for that but then a packet be miss meanwhile other packet continue to arrive so this packet right here in http http two may be just information save for the favorite icon or a particular jpeg these be the packet however continue to arrive",
        "so now packet that may actually be contain javascript may be contain css s , may be complete and ready , should be able to give those directly to the web browser with tcp , can not do that , call to read be block right here until , get this information and only then will all of these other packet be send so google kind of reject this instead , can do well if , start with udp , can actually implement all of the transmission control and resende control directly as part of , user process and besides if"
      ],
      "lecture 36-Q09": [
        "so , can have security error in a protocol , may for example specify a state diagram and there may be a way through that state diagram which bypass say login step or an authentication step or an authorization step after , log in but , not suppose to have the privilege that , actually do so , may actually have error in , protocol but , can also have error in , implementation of protocol and here be a very famous one call heartblead and this actually be the code from open ssl and which be a very kind of common secure library implementation if simplify , a little bit just so , actually fit on screen here but the ssl as there , go and i support by web server at the time support different protocol message and one of , be be very simple idea be just a little",
        "and then what if , subvert this what if as a malicious actor on the internet , say ok , be go to send , hat please send , back five hundred letter ok and this be which point , little right request will happy send back five hundred letter in other word , be send back five hundred arbitrary byte in for more process which be actually run part of the security protocol of web server oh dear , have a problem here because what be go to be in there be thing like message which be suppose to be for other client the private"
      ],
      "lecture 37-Q01": [
        "be to ensure that , have good privilege separation to realize that one thing that process have give , be a security model , can say that a particular process run as an effective user id and have access all not to certain system resource so , know for example if i be write a web server that the web server have to run as root in order to access support that be privileged like a port less than a thousand and twenty four ok so should all , code however run as administrator vernor route maybe not maybe some of , should for example if , be go to work with the file system run in a much more constrained way perhaps i for example should run , under a certain user that only have access to a certain set of directory simply with browser today a web browser , have get different part which can have different different privilege require"
      ],
      "lecture 37-Q04": [
        "of the nice thing about json be extremely readable and if i give , a blob of json there be online tool to kind of nicely format nicely indent so json be of very loose format and be use today primarily for send back information request from a server and then , will have some client side code to render this into some html for example so , see a lot of json information be send today back to back to back to web page where , then iterate over this in order to turn , into something displayable for on the page ok so the downside of json be that there be no formal specification about which field will be there which",
        "so , can think , be go to very kind of loose format another alternative then to send information be xml and in fact today when , talk about kind of html which , use for web page so for example , know the web page have thing like a body tag and then inside that i may have a paragraph for example right this be actually a variant of xml where i have these tag and these tag , create thing call element so for example i get to tag here call , be at each each one to say , be start a head text inside there and then i need a closing tag there , go right so great by now have an h one element and inside that",
        "open tag i can specify some attribute so for example , paragraph on , h one here i may specify say the ok so what happen if , mouse over that event or , body here wall no node one be a key i can say bg color and i can set the background color of , web page today more than html have attribute to do with style sheet so i can say hey use the follow particular kind of style for say this h h one tag but let , actually have a look at some more xml with regard to actual kind of datum that , may want to set so in fact down here , have get the very same , be kind of very same piece of xml datum as before so same datum as before but this time instead of json , have expect express"
      ],
      "lecture 38-Q02": [
        "time slow than normal and this this effect be call thrash that , be constantly swap in and out page in order to make the small amount of progress and so , appear from the user perspective that the whole machine be slow to a crawl unfortunately what do , tend to do when , machine do this invariably what , do be to say , be too impatient to wait for this website to load or for this compiler to finish i know what , will do i will give , machine something else to do instead like , will open up a different web browser or , will try to compile something else and so i just make the problem even bad that now , have actually increase the load on , poor system and so there be even few page leave or be , available to actually go to make any progress so thrashing be a problem , want to avoid"
      ],
      "lecture 38-Q07": [
        "ok right let , remind , about some http which be the bedrock of how , display web page and other item on , web today so why be , that web page be fast use http one versus one point oh so at this point , should remember that one point oh be a very simple protocol and , do not support a key feature which be keep alive mean that if , want a second resource , be go to have to open a new tcp connection which as , know take time because before , can send anything with tcp first of all , send over a packet with , synchronization number then the server send back to the client and acknowledgement of that plus , own synchronization number so , have get this latency lag of backward back and forth before , can even start make , request so , be",
        ", be a binary protocol which mean that few network bite be require to be send in order to transmit what , want , have get header compression remember that http be quite verbose , send thing like ok the the name of the web browser in , version the kind of , tight be prepare to accept whole lot of other stuff like if , have cash , some tag value associate with , local cache , have get a lot of information , want to send up to say kb stuff or more if , get lot large cookie , would be great if , could be significantly reduce that down so that , take less time to transfer that information ok but what else , get here be , favorite one , have get multiplexe mean that i can make several request so , 'd like this cat picture that picture that dog picture etc",
        "in bring in different part of , food all over the same tcp connection so i can ask for multiple thing at the same time and , can be deliver piece meal as , ask the kitchen start to prepare , ok what do , miss oh yes and lastly server push that hey the chef in the kitchen really would like , to have this desert , do not even know that , be go to choose chocolate pudde cake yet or ice cream or whatever that server just have a strong suspicion that , be really go to need this resource so , can actually help , create , web page fast because when , do suddenly decide that oh yeah i really do need that cat jpeg , have already get , locally right so , be just kind",
        "call head of line blocking and the idea here be remember how tcp work that the kernel will reshuffle datum so that if there be something miss ok , have receive this stuff so far but right now this piece of datum be miss , have get these piece the kernel will not release the future datum to , be read call will block in other word until the day that finally this miss datum have arrive and that may take awhile so versus what i do , would have happen be that hey be those other resource that javascript file , be try to download on all the stuff that be not actually connect with these packet , would be great if , could have give that already to the client and then , web browser would have be fast"
      ],
      "lecture 38-Q08": [
        "ok , be a dns so , have already have to play with dns , have leave the lab possibly at least this semester , be record , and , know that dns be base on udp so that let , say that i type into , web browser hey i want to load say a page from bbc dot com , need to turn that into an ip address maybe like before ip six address and that be where domain the domain name system come in , need an authorative way to say ok in order to actually talk to this server there be an ip address somewhere and that mapping be part of the domain name system so when , type that type that in the second thing that , machine do in order to actually convert this be to send out some udp packet and in fact dns be design such that , can talk to",
        "look , be do a query do , have a for example and a record in other word in ip record associate with this host name like bbc dot com ok and oop actually , see the exciting part be that uh , do not know if this be go to succeed or not this second exciting part of this be that , may succeed in that sense that , could be that more than one server react to this and say yes , have get an ip address for , and the way that dns work be to say whoever give , the fast answer win so if , be malicious coffee shop of if , have have to work for government agency , can do some exciting thing",
        "give , an answer to that here be an ip address largely bloody bloody blah there , go and , control then that ip address mean that the server will now decide to go over to that ip address and display content from that machine rather than the real bbc dot com right so that sound pretty scary do this happen yes absolutely , be be use to inject a malicious javascript into web page in order to take over machine the however there be start to be some defense against be in that for for web page which of for https connection then , be possible to actually detect whether the certificate for web server be valid so , hopefully that that be a second",
        "machine directly instead , talk to this distributed system and if , do not know the answer , will ask , neighbor and if , do not know the answer , lose , neighbor etc etc and ultimately , request may end up at one of these root name server but i want to get back to something i say at the beginning which be this be the second thing that , do yes actually so there be time when , do a dns look up and no network traffic be generate , do not see any udp packet ok so one answer to that be as trivial answer which be simply that hey , process be already cash in answer so if , web browser have already go to the bbc dot com then , do not necessarily need to look up that answer again and in fact dns record have a timeout parameter to say how good a piece of information be available for though be consider",
        "and that be inside there , go that be clear that ok inside a special file let , have a look at say the to look at but i will not do tail there , go look at the top so what will do less ok let , let , look at etc host and , can see that , can have some basic entry like localhost etc and some ip six version of this but as , scroll down , see , have get many many other entry so that if i attempt to go to , machine want to divide to get to this machine to this host name in fact , be not go to be get be not go to get a valid ip address so this be kind of fun of perhaps",
        "to read , so let , quit chrome there , go and this time try open , inside a new browser cape and will try firefox now great i can no longer connect to read , ok so , could do this with whatever , favorite waste of time be and now now get a kind of spend all , time hack on cs two forty one and in fact there be these so call black list of host where , can reduce the amount of tracker that be able to track , on the on the internet because now with web page that have a whole lot of javascript and other mechanism to track or what , be do those will no longer resolve to valid host and in"
      ],
      "lecture 38-Q09": [
        "want to send here be the ip address that i want to send , to right so , client however can also wait for packet to arrive so , could wait for the result before print something out ok right that be enough talking let , actually see this little demo so on , local machine here i can call this little send two thing and , be go to send a message to a remote lennox machine ok so so what be , ip address over here right well i better run , first of all ok so let , let , run i receive from ok and when , need a ton use port address let , go for seven six five four ok great , be listen on that so now i need to connect to , ok so will try",
        "be annoy dot edu and then import so , say port seven six five four and then a message ok so , will try hello right ok and great , send a little datagram with six byte the actual datagram that get send of course be a little large because , have get the overhead of the ip address in the front of , and then , wait for a response and here , be now , and i know that all , little server group the other end be just flip the low bit ok and , can see that , be be process , here so if , actually send the same message back ok this time great because , flip the bit on the letter , can see that , have also manage to flip",
        "type if , can think of that be like the base class if , like but then , have get version to work with ip four ip six or if , just want to say , be go to have a storage mechanism which be big enough for or possible socket address then there be this type dissipate type here right now , be possible to if , truly only want to send datum to one to one ip address and one port so call end point then , be possible to use connect with datagram connection however , be still the case that udp be what be know as a connectionless protocol"
      ],
      "lecture 39-Q02": [
        "ok right sir i remember the next question be go to talk about and , be the follow , be actually a typical kind of interview question where , look at something a power be simple and then say ok what actually happen what all the step so let , take a look at the kind of typical question suppose , open up a terminal and , run the follow so call http illinois dot edu and press return what happen next right so this be an opportunity to show off all of , operating system knowledge and system programming knowledge ok so first of all what be curl right so , well talk about that for a moment ok so curl actually be a bit like cat but rather than say ok tammy cat about a file curl will connect to a website , understand several protocol include http and https and , will make a connection to a web server so great and then , can see , have connect to this and , have get back the kind of basic html document ok the actual body of the response , can probably ask , for more information maybe if , do kind of both",
        "to call exact so , be go to load in the bite of cult into memory remember , have a head transplant at this moment goodbye the shell whatever be go on side that side that process because now , be go to be call the main function for curl and , be go to pass in the argument ok so when , start up kerbal purse password give to , and , be v r x y and , will see the string so now , can start talk about finally about some of the network stuff how , have to first of all identify a domain name so , be illinois dot edu so , be go to try to connect to that how do that work ok great now , have an opportunity to talk about dns , be go to turn that into some ip address by do dns what be dns development",
        "can talk about the fact that maybe , have get an entry locally inside , e t c host file or maybe there be a cashed information because , have recently kind of connected to this website but if not , have to make an external request and dns simple dns today just use udp packet so , send , out say hey neighbor , be look for an ip address associate with this host name and whoever can tell , the answer the fast win that be what happen today tomorrow hopefully , be go to have more secure system for example this current discussion about run dns over https so that , be more difficult to forge and not possible for internet provider to sniff all of , dns traffic ok so finally , get back an ip address great so now",
        "ip six socket so ip four socket and then start make tcp connection to , web server , know that http run on port eighty so , have not specify report , be go to use a default poor poor eighty so let , connect to the illinois edu server and then start talk this particular protocol so now , can talk about the fact that , be go to send to the server follow get slash so , just want the base resource and then some protocol so perhaps , may be say http one point one depend on whatever the default for kerr list and , be also go to send say other header like the host etc but eventually because , know http finish , know , be go to see just a blank line so , will see the sequence slash r slash n slash r slash end right and then , wait for the service so now"
      ]
    }
  },
  "topic 8": {
    "keywords": [
      "file descriptor",
      "network card"
    ],
    "mentions": {
      "lecture 04-Q02": [
        "5 minute"
      ],
      "lecture 05-pt7": [
        "0 minute",
        "2 minute"
      ],
      "lecture 12-Q02": [
        "4 minute"
      ],
      "lecture 13-Q06": [
        "5 minute"
      ],
      "lecture 22-Q01": [
        "0 minute",
        "1 minute",
        "2 minute",
        "4 minute",
        "5 minute",
        "9 minute",
        "15 minute"
      ],
      "lecture 22-Q03": [
        "0 minute",
        "1 minute",
        "5 minute",
        "6 minute",
        "17 minute"
      ],
      "lecture 22-Q05": [
        "0 minute"
      ],
      "lecture 22-Q06": [
        "0 minute"
      ],
      "lecture 22-Q08": [
        "2 minute"
      ],
      "lecture 23-Q01": [
        "3 minute",
        "6 minute"
      ],
      "lecture 23-Q04": [
        "4 minute"
      ],
      "lecture 23-Q06": [
        "0 minute",
        "1 minute"
      ],
      "lecture 24-Q05": [
        "0 minute"
      ],
      "lecture 24-Q06": [
        "2 minute",
        "3 minute"
      ],
      "lecture 24-Q08": [
        "7 minute"
      ],
      "lecture 25-Q04": [
        "0 minute",
        "1 minute",
        "2 minute",
        "3 minute",
        "4 minute"
      ],
      "lecture 25-Q05": [
        "7 minute",
        "8 minute"
      ],
      "lecture 26-Q02": [
        "1 minute",
        "4 minute"
      ],
      "lecture 26-Q03": [
        "5 minute",
        "6 minute",
        "8 minute",
        "9 minute",
        "10 minute"
      ],
      "lecture 27-Q01": [
        "2 minute",
        "4 minute",
        "5 minute",
        "8 minute",
        "9 minute"
      ],
      "lecture 28-Q01": [
        "13 minute",
        "14 minute"
      ],
      "lecture 28-Q02": [
        "0 minute",
        "1 minute"
      ],
      "lecture 28-Q06": [
        "3 minute"
      ],
      "lecture 30-Q03": [
        "4 minute"
      ],
      "lecture 30-Q06": [
        "1 minute",
        "3 minute"
      ],
      "lecture 31-Q03": [
        "2 minute"
      ],
      "lecture 33-Q01": [
        "2 minute"
      ],
      "lecture 33-Q03": [
        "3 minute",
        "4 minute",
        "5 minute"
      ],
      "lecture 33-Q04": [
        "0 minute",
        "1 minute",
        "2 minute",
        "3 minute",
        "4 minute",
        "5 minute",
        "6 minute"
      ],
      "lecture 33-Q05": [
        "0 minute",
        "1 minute",
        "2 minute",
        "4 minute",
        "6 minute",
        "8 minute"
      ],
      "lecture 34-Q04": [
        "8 minute"
      ],
      "lecture 36-Q08": [
        "0 minute"
      ],
      "lecture 37-Q02": [
        "2 minute"
      ],
      "lecture 37-Q05": [
        "1 minute"
      ],
      "lecture 38-Q05": [
        "0 minute",
        "1 minute"
      ],
      "lecture 38-Q09": [
        "11 minute"
      ],
      "lecture 39-Q07": [
        "3 minute"
      ]
    },
    "captions": {
      "lecture 04-Q02": [
        "buffer space here pick a random number like four thousand ninety six ok so now , know that if i just use the variable buffer without push the square bracket then that be go to evaluate the very first bite of that away or the stack be not a pointer , be an away and array can not be change to look at somewhere else so i can not say ok variable start look at this other memory location , can not do that but , can use , in a pointer context so let , do that let , call size t and will say result and say ok read now at this point i need that file descriptor be go to want to standard input which be zero there be a constant , 'd have to look , up but i now need to say , actually go and , want to put , into the buffer and how many byte while , be use an array so if i use the variable name i can actually find out how big , raise so"
      ],
      "lecture 05-pt7": [
        "hi so let , workout with the follow piece of code do this be pretty obtuse stuff , would not expect a programmer that have not see , system programming to understand , so let , break , down and see what be go on right now be actually base on kind of real bit of system code that , have see ok alright so first thing be close one what be go on here right so , know and i know that by default , little process have three file descriptor little integer start with zero the allow , to read and write and , get by default three stdin stdout stderr < br > and , have just close standard out and immediately , call open so , be ask for a new file descriptor and , be give , a filename log dot text now , be give some hint about how , want , want to use this , want to open this , 'd invite if , do not exist please create , if , do exist then append to the end",
        "descriptor one so do that mean that none of this be go to appear well almost here be a little cunning trick , be go to call open and if that succeed the fast the colonel will use the small non negative integer file descriptor that be currently unused and i think , can guess what , be go to be this that be right , be far descriptive one number one , close out so , know that be available so , can reason that this particular open call will be give , file descriptor one right so what do , put inside there with the sea life be go to get captain log with a new line and then call chdir what do chdir do do as a read the man page chdir be be change current work directory of this process every"
      ],
      "lecture 12-Q02": [
        "write use octal so that be three time eight plus three this be the magic sequence to tell the terminal to go back back up so that in a certain amount of time will go round this loop again and , want to rewrite the whole display start from the top so , be ask for ten millisecond delay and then around , go again so that be , display loop as , can see , do not actually do any calculation , simply take what be in , heap memory and display , and send , out to spell , out , stand up , file descriptor one ok right and then what about , , rain effect while here be here be , loop , be go to run remember this little piece of code ten time ten different cpus"
      ],
      "lecture 13-Q06": [
        "the actual mutex , more be a bit like a file handle so when , have do thing like f open to open a file handle or passive call open the kind of posix the low level version to open a file descriptor the thing , get back word maybe just a little integer or one of these see object right so file f open this be not actual father spain store on disk , be just the variable and , be the same idea with this this mutex lock , represent a mutex but , be not the attribute x , ok see what else do , want to say right so , call peter mutex lock and , get to continue great what happen if another thread now call peter mutex lock on the same object on the same mutex"
      ],
      "lecture 22-Q01": [
        "ok welcome to lecture 22 . so , be go to make a new kernel object today . , be call a pipe and a pipe be a stream and , can use , to communicate between two process . now , be go to start with what be call ' unnamed pipe ' where the only way , can talk about , be just use file descriptor , but later on will have a quick look at create ' name pipe ' where , actually exist in the file system . right , so let , get start . okay , do , have a ... great . so , know that , can do thing like call write ( ) and in fact when , call printf ( ) , fprintf ( ) , and fread ( ) , fwrite ( ) , etc ... underneath , all , be \" talk to the kernel to say \" \" hey , , want to write to a \" \" particular file descriptor . \" \" ok so here be , file descriptor \" and that be typically a small number say 0 , 1 , or 2 for standard in , standard out , and standard error and then if i start make file with fopen ( ) , , be go to have some more ... 3 , 4 , 5 , etc .",
        "and , also will see these again when , actually want to make network code as well . so this will be the way that , send a byte over the network say to a server or say back to the client . right but today , be go to use this with the pipe . so , , need a way to create a pipe and each , anonymous pipe have an input and output . so that mean , have two file descriptor , ok . so let , make a little array with just enough space for two file descriptor . ok , so there , go . and right now these be not initialize to anything . but if , call pipe ( ) then , can pass in the start address at , two integer . ok that be easy . , be just ' fds ' . let , call , ' fds ' . right for , two file descriptor . and if that succeed then now , have create ,",
        "remember rw because , say read and write . then the first file descriptor will be the one that , want to read from and the second one will be the one that , want to write to ok so let , actually do that let , actually kind of have a play with this . right there so , will start write some code . so , will have , file descriptor . \" ok and then , will say \" \" , need to pipe , please \" \" and here be \" , integer well code would check this succeed to do check ok right and now that be actually print this out so will decide to see what , look like right so ' fds of zero ' be ... ok .",
        "ok so yeah great , have get something which be work now , have get as , can see , be make to file descriptor so great let , actually use these i can try to read from the first one and write to the second one ok so let , do that let , have a buffer here right i will have a buffer say over hundred byte k and , will try to read from fds zero kay and , a buffer and , can have let , say up to ninety nine byte ok or if i want to say well would say size of buffer minus one ok let , see how many byte , actually get ok so this",
        "be case so numb rhett and will just cast that student ok so off , get what do , think be go to happen right so let , compile this and kate dot slash i can not type this morning let , try again and look at that , be block yes so , course to read and write by default can block in other word , can take forever so in this case , reed call be wait for bite to appear but , be a pipe and no one write anything to those bite yet ok so let , write some bite so what do , think about the following let , write an remembering the right be the second file descriptor case so one",
        "hey ok now , parent be able to continue . if , want to actually send something back to the child , , would need a second pipe . so for example let , make another pipe right and will make that a pipe k so now for fun let , actually make , parent just be echo so in addition to write , out let , instead yeah that be not right , out to standard outlet actually just send , down the other pipe ok so i want to use the second defile descriptor so that be another one right and meanwhile , , child let , read from that so , will",
        "there , go . , will flush , because , be call fork ok so and if , be use standard out and standard in , can flush those as well so , could call .. flush on standard out , flush on .. what else be , use .. standard out right ok so that look a bit more posix compliant so now , have make , server file handle and , be go to call that right so let , run this and off , go after two second yeah great , get thirty character back and then , send , back to the child ok so remember this trick that , can convert from a low level file descriptor to sea level four handle use fdopen ( ) right that be enough for one video in the next video"
      ],
      "lecture 22-Q03": [
        "ok right so let , have a play with , pipe and , be go to do be try to close one end and see if the other end notice . so here , go let , make a pipe so , have do that so far . and now , will , will make a couple of variable second , that the read end be the first file descriptor so let , fds[0 ] and the write_end be fds[1 ] so , know , can always kind of read thing from a pipe \" , do thing like \" \" ok tell , the number of byte , \" \" read \" \" \" ok and will call read ( ) . so read ( ) ... here be the read end the first file descriptor of , pipe and here be a buffer and here , can use all of the buffer this time ok i do not care about turn that into a null terminate string . let , print out the number of byte read ok so why , be read ok and i can only do ' % d ' or alright i could use",
        "ok , let , have a new line there as well ok right so .. right now if , run this program , would simply block on read ( ) , so what , be go to do actually be close the write end . so let , say there be no more byte that , want to write into this file descriptor into this pipe right so that mean , be do what do , think will happen when , get to this read call ok let , let , try , . let , compile , and run , ok so i need that k right so , be climb for fun and will say i think , be pipe close great and , see the read this time immediately return zero in fact if , be to read the man page of read , discover that return zero be a special , be have magic value , mean that",
        "if i be the if i be the child case so if the child pid be zero then , be the child process let , do , little high , game again ok and will exit at this point so , return from main . ok meanwhile the payment will will read as usual case oh well this kay compile write , correctly read the seven bite but look , do not finish this time , never get that zero . why be that ? what have , break ? ok so all , do be , just move the writing and the close into the child why be , now that , never get that magic value zero ok so well problem , be that the kernel be keep track of all of these file descriptor and the read and write end both exist inside the parent",
        "be write into the right end in both the parent and child could be read from the read end so , close the right end but , only close , in one process so as far as the kernel be concern , be still technically possible for bite to be send down this pipe so , can not yet tell the reader that , be do , be still possible that the parent can send byte because , still have an active file descriptor so if , want to use this mechanism , be important that , close the file descriptor in all process and so if for example , be use this to send if , want to use the pipe to send bite from the child to the parent then immediately after fork , should close the close the file descriptor , be not use",
        "normal writer because so order the active file descriptor have be close that be go to discover that that , finish and the other one , have see be when , try to write the first time on a pipe that be that where there be no reader remain , get a sigpipe ok , will see this again later when , get to network if , try to write to a network stream where , be impossible because say the client have disconnect already , again , will see this sigpipe so , will need to kind of catch that by instal signal handler ok so , be sick pipe but also if , then handle the"
      ],
      "lecture 22-Q05": [
        "right ok so let , think about fall position when , come to share file handle between a child and parent process and the big idea here be that there be kernel object so , have already see a couple of kernel object in term of say a pipe and that pipe be share between the child and parent and , be go to evaporate disappear once the parent and child close or far description or , close all those place as well but the same be true for open file open file as well ok so when , call say f open underneath , know that actually be go to call open to give , a little file descriptor and that far to script be share if , call fork so let , just draw a little model here that if , have get , parent process just here with file descriptor here , be safe , will skip to number three that be actually of course refer to an actual object inside the kernel that , indirectly"
      ],
      "lecture 22-Q06": [
        "ok right . quick question for , : why do , think pwrite exist and when would , use , ? ok , so what be pwrite ? ok , so here , be . , behave a lot like write ( ) . , give , a file descriptor as usual , , give , a buffer as usual , and the number of byte , want to write , but , also give , an offset . in other word , , do not care about the current position in a file , just want to explicitly say where to write these byte . and by the way , there be a similar call call pv ( ) as well . so where this become useful be where , have , say , a whole load of thread which be generate output . suppose , for example , that , run a competition against student from another university and all , have to do be sort some number ... oh , want a well color than that . there , go ... and write as quickly as possible the output to a file . ok , so maybe , know about thread . so great ! , be"
      ],
      "lecture 22-Q08": [
        "output and standard error ok so how do i do that well there be one of the thing call duck to sewed up two allow , to rename file descriptor so right now , have get , pipe file descriptor which , be go to use to actually be able to send datum to , process or all capture this output but i want to rename those to be zero one or two ok so now , just need a little bit of thought to say do i need the read end or the right end of a pipe so for example for standard out that be go to go there , go into the right end of the pipe because , be write into the pipe and simply for standard error meanwhile for standard in if , be go to be read from a pipe , need the read end of the pipe so that be why"
      ],
      "lecture 23-Q01": [
        "enough space for this struct ok so , can see , be already use typedef so i do not need to keep on writing struct so instead i can say right the the result will be equal to right let , get some memory here right malloc and then size of this struct ok so size of file not file pointer ok and then i can start to set thing up in here so i can do thing like ok right as the file descriptor could be equal to something be send in the buffering , can set to some kind of default right maybe , want to try to test the current file descriptor and figure out if , be correspond to a terminal or not but for today let , just make , implementation as simple",
        "implementation of a position so that if , start call s seek and use f tell i do not need to go back to the the kernel to work that out so i may have yet more complication in height site here say i may keep track of , current position ok but as usual there be always a trade off in term of complexity and performance ok so let , put that in there as an idea about something that , may want to add if , want more performance and , want to support everything support more sequel without have to go back to the kernel right but anyway this give an idea about how , can implement fdopen ( ) now , have implement this i can now if i wish implement fopen ( ) that would just need to call open that give , a file descriptor and now i can use that far descriptor an then call , fdopen in order to be in order to be complete ok so great"
      ],
      "lecture 23-Q04": [
        "so now , have to say right ok whereas let , advance forward half bite and put in , terminate zero byte at that point there , go ok and finally return with so what do , think about that if , test this likely , will appear to work however if , give , give , this be at a code review i would be unhappy why would i be unhappy ok so the thing that i do not like be that , open the file but , never close , so if , keep call this eventually , will run out of file descriptor and the kernel will say , be not give give , another"
      ],
      "lecture 23-Q06": [
        "ok , be go to finish with the challenge for , something , can discuss on piazza etc if , wish so , be the follow , be the kind of typical have exam question where , put in a whole lot of concept together and the nice thing about this one be that , be easy to write and easy to test as well ok so but , show , demonstrate that , understand file descriptor and exact all this good stuff right so here be what , want to do , want to use fork so , have a child and a parent process and , want to use a buffer so , be go to have a buffer of four kb at a time and the parent be go to copy the content of some file call input dot text and , want to send that to start , in of the child process ok so , got to figure out how to do that how would , like to send send those those byte , so , be go to need to",
        "but then that father script will not be the correct file descriptor so the good news be that , can use dup2 two to re label , to file descriptor zero in order to be standard in of the child process ok so how , get to make this work right so , will let , figure this one out have a great writing , and then , can always test , of course because then , be go to take that and call exec inside the child process and set , as a create a bash shell so , can call exec , will need some version of exec and then price if , be look on the path for example , can call bash but do , remember that , be important to call bash"
      ],
      "lecture 24-Q05": [
        "oh i forgot to say one little thing about erino down here which be when be , set ok so here be a big idea be that , set to zero when , first program first start up , value be change whenever there be an error with a system call and , read the man page to learn more about that but , be never reset back to zero so if i have a whole lot of call let , say that i try to read from warm particular file descriptor and then try to write those bite somewhere else to another file descriptor fd two over here if i then check if evan oh zero or not then i can not actually tell , whether where the error curd maybe , happen early on inside , read maybe , happen inside , right or maybe , happen even early so just think of be a global variable that if an error occur , change ,"
      ],
      "lecture 24-Q06": [
        "be talk about early to say what actually happen so what value of oh no may , see ok and here , be right so all of these be actually actually just constant define integer refer to the value of earner ok so , fault , give an invalid file descriptor negative number , have get thing like ok , give about a file descriptor which do not actually refer to any active fire scripture , can use for writing and , one that , be go to talk about in a little bit more so here be the into after want to say alright that , attempt to do some , attempt to write but a signal interrupt",
        "really lazy if , get interrupt by signal so for example suppose an alarm signal go off suppose a sigpipe happen suppose a child process finish then , will just return do not actually do any write force ok what a lazy kernel that be so ok will keep scroll down and , can see here there be more and more stuff there be other one as well for when , start talk about asynchronous right so , probably hear of node node js which be kind of take the server world by storm but , can make javascript on the server that use asynchronous io and so , use epoll to figure out which file descriptor ready and , use thing like these e again and , would block to figure out which file descriptor ready for more byte so as , can see there be plenty and"
      ],
      "lecture 24-Q08": [
        "have not yet be send and , can do that multiple time or , have get the case that , have now send all of the byte correctly to the file descriptor so great quick comment on this be if , implement something with read well with reed , have get one other possibility which be that there be no more bite to read another word the pipe or the stream be finish and shut down ok so for read , will have to also do the special case of reader turn turn zero mean the pipe be now empty or the socket have send the last , read everything from the socket and , be already shut down at the other end ok so the last thing to mention here be that right now , be work with read and write which work in a blocking"
      ],
      "lecture 25-Q04": [
        "ok so here be the big idea to make tcp client i actually only need two call i need a way to escape out of , c code and actually start talk to the network card and for that i need a socket so this be the thing that be go to give , a file descriptor and , can pass some information into this be to say what kind of socket , want do , want a tcp or udp kind of socket in other word do , want to stream base or packet base data ground base kind of socket here so , will talk about how to fill these piece of information in airmont but i want , to realize that the result of call socket be just a file descriptor so this if , like be very similar to call open or very similar to call pipe now , have actually get something that i can use great but no bite have actually leave , machine yet know octet have be set that actually happen",
        "possibly to , if i want to connect to one hundred and twenty seven point zero point zero point one if , be use ip four ok and how do i connect then , client use this thing call connect ok and , just use this socket ok so notice that in both these case i careful to check the error value ok so this will be a non negative value if , be a valid file descriptor if , return negative one then , know that , attempt to create a socket fail perhaps i do not have privilege perhaps , have create too many socket at anyways so let , print out the string of every number and quit exit so network code have to check very carefully whether each system for work but once , have get to suck , now , can call connect so again let , check",
        "find out , value of erno and print out a useful message and quit ok so what do , do with this file descriptor well if , make a tcp will not guess what , can call read and write on , so in this sense , be a little different from a pipe in a sense that , support two way communication that if i write to this file descriptor then the server will see the bite if i read from this file descriptor then , be read bite from the server have send , some thing to watch out for of course be that , be do right can return negative one and due to a signal , do not have to necessarily send all of the byte or , read do not have to read all of the byte so i have to be able to be ready to only get partial amount of information and let , see what else oh yeah so i can block so if i call reed and i have not get any light yet from the server then that recall be go to block forever",
        "block until , be able to send those byte to a buffer when , do return that do not mean that all those byte have actually respond to as far as the host at the other end be simply mean , have be able to take , buffer and copy those bite into say the network card buffer and at some point hopefully the next few millisecond those byte will start to leave , machine eventually , want to close this connection in fact there be two way two thing to know about this first of all there be shutdown which , can use to say ok i do not want to send or receive any more bite on this particular file descriptor so , be go to say ok here be , socket fd and then i can shut down that socket for either reading or writing or both so i get a choice there and what this mean be after those bite that , have already give , have be send the very extend another packet to say ok no more bite for , at this point",
        ", anymore bite but be , do not know , should also call close just like , have a file descriptor of the file be time to have free up these resource ok so remember to close , as well ok so the these have two different effect the shutdown be a way to tell the other end that , be do either receive or sending or both and close actually say write this file descriptor can now be use for other thing remember that , only have a limited number of fire descriptor , can actually use for each process right so with this in mind i think , be time to fill in some code here but there be one thing , have not talk about up here so i say that , tcp server only need actually two network call which be true but in practice there be a third one that come in very very useful and , be the follow be this get address"
      ],
      "lecture 25-Q05": [
        "talk to the server so , will make a socket right so the first thing be the kind of socket well ok where do i get that from i get that from the result and , will see , have make a note of the different field inside here and the first thing that socket be the domain that be the actually the family that , need here so the socket family ok and then , be the socket type ok so that be ai_type ok and that be the last thing be the protocol which usually be just zero for some kind of family that could be different kind of protocol but so , need to get loop socket here there , go result and then ok so then result go to ai protocol so great , have get that but , better check to see if , fail so if the socket file descriptor be negative one , know , do not work so at this point",
        "right so give , have get , a socket now , be time to actually connect to where , want to go bbc or illinois or whatever ok so let , call connect right so , will call , connect result let , call connect right so the parameter for connect be first of all be the socket file descriptor ok so , have get that but then , need to pass in a pointer to a struct now all style code for network would have be actually assemble and create this struct for , directly so in theory that be why , actually only need the socket in the connect call but , have be lazy today , have be use this swiss army knife call getaddressinfo that actually set this set this up for , so ,"
      ],
      "lecture 26-Q02": [
        "so if , fail let , just exit after print out the error ok and here be where , be just go to only look at the very first entry so i make a socket with the right family and the right socket type and then , be go to connect and connect all that need be the socket file descriptor key and the address and the length of of that struct ok so let , compile this then , talk about the remainder of the code okay alright so ok , will stop this i can hit the ctrl + square brace there , go in , back into telnet hey telnet please",
        "about , before call dprintf ok so dprint be this very strange call be not truly part of the posix standard but , make , life a lot easy what , do be , be equivalent to write in the sense that , take a socket file descriptor but , also give , format information as well so i can do thing like % s , % d and and start pass in additional parameter ok so if , have get string and integer number that , want to send to , socket remember dprintf can be a useful tool here rather than use write directly and then , be go to start read back what the server say so i need a little buffer and , have get , little read loop in here and every time i get some byte back , be go to write , out to standard out , be go to finish if ,"
      ],
      "lecture 26-Q03": [
        "important idea here be that now be that that server socket be the front door to , shop but , be not actually go to be the way that , talk to , client instead when accept return , get a new file descriptor one for each customer which be the private communication channel between , and that client so with this new file descriptor that be how , be go to be call read and write so accept will return immediately if there be customer which have complete , handshake and wait to talk to , or , will block if there be no new customer ready to talk so , may for example write code where , will put this accept inside a loop and will process one customer at a time and there be exactly what , be do here perhaps in the future will write a multithreade version where as soon",
        "say a thread just to process that particular customer so let , see what , can do then right with this client , will hear what , have get to say so use this client file descriptor , be go to listen to what , be go to send , ok so let , read up to nine hundred and ninety nine byte and if , give , something valid then , will just print , out but remember what i get be not a c string , be up to , to terminate what what , receive with the zero byte ok and , will print , out and then , can say something back to , ok so let , now use either write or dprintf ok and so i can only say hello or , could if",
        "or that i promise , that , be never go to call write on that socket anymore or or both so in this case let , use , do not want to do anymore read or writing so let , edit , code to say , be all do with this connection but the file descriptor still exist so that be take up unnecessary resource so now actually let , kind of reset that ok alright so now , have get , little server finish the last thing , should possibly do be to see if accept fail so let , see if the client actually be an invalid number so if , be less than zero , know that , be a bad connection so bad accept and , could print out an error message for example",
        "ok so and maybe this point , want to break out of , while loop or maybe not maybe , just say ok let , just keep go but , be go to finish at this point ok right so let , compile this ok and then , will come back to talk about a few thing which i have not yet look over there ok so i want to use clang more so tcp server right now well write ok so great , be listen woo right i think , be time that , try to connect to , ok so , will see , be listen on file descriptor three so that be , passive passive port k and let , try to connect to , ok",
        "actually have several request from fire fox at this point fire fox want to know if there be a favorite icon , should display with this website but here , be actually request just the home page and , be tell , firefox be tell , a little bit about the client and , say , actually send , two hundred sixty byte just just to request that that home page , also may notice that , keep reuse the file descriptor four so file descriptor three be the one , first make for passive socket all of , connection be reuse this file descriptive number four why because , remember to close , down each time so the kernel able to reuse that particular file descriptor"
      ],
      "lecture 27-Q01": [
        "will use the result this time to say there be , family so expect that to be a fine , be the only one , want will have the socket type in there and will have a protocol which be actually usually just the value o of for , regular tcp ip type socket right ok so , have make , suck , will check to see if , work if , get a valid file descriptor now let , bind that to an actual network port ok so this be when , actually start say right i want to use a particular port ok so , have do that ok now , turn out that if , have not actually specify an explicit port in other word if , just ask for zero , would be nice to know which port , be actually bind to so , can do that the surprising thing be rather than be call get sort port be actually get socked name",
        "say that , be prepared to accept a backlog of up to one hundred one hundred connection from hundred client in other word if i do not call accept at all the first hundred people be lucky but after that one hundred and first person , get turn away ok so here be , little service loop here , be go to do be when someone connect great will have now a client file descriptor will print , out and , could immediately tell this socket hey by the way , refuse to read anymore , be just not listen anymore to any byte be go to arrive on this socket that will actually also give a hint to the client as well to say hey stop send anymore bite then will say hi will write three bite which be nature nine in new line to the client and because , do not want to say anymore let , shut down now that client file descriptor for write as well and then finally because",
        "the file descriptor so , can reuse , ok and then , will go round again so let , compile this and run , a case so off , go like will run , and , will see that , say oh bind to port four now can , guess why because , be pretty confident if i connect to port four be not go to work let , just have a quick quick play here i use telnet today and , say no unable to connect there be nobody listen on that port and so so i could try , with netcat as well for example and that be not go to work either just immediately return but , and i both know that actually , be connect to port thousand be a listing on port thousand and twenty four so there , go , see that finally accept return give , a father scripter and , go rather loop and decide to block again ok if i use instead of netcat if i use telnet the same thing right so , great , connect , print",
        "etc in the network byte order and use network representation which may or may not be different from the way that , cpu represent integer ok in this case , want to go from network to host hence end to hs if , be set up the c structure explicitly because , do not want to get address info , may go the other way , may go from host to network right so i think that be all i want to say , talk about shut down , talk about why , close the file descriptor and let , just for file let , before , close out this video let , not close , or case so off , go right and the other thing , will do be before run this loop",
        "ok so , will compile this and k run , so i can now already so i can get there in time yeah connect right notice that i successfully connect to the host that be because , have already call listen and so the colonel be willing to be the welcome auto collapse in a restaurant that kind of welcome , there right and then right please to meet , and shake , hand right , do the protocol handshake so that be so that be listen in action , could have up to a hundred people arrive or reston before , call , call accept and now if i keep connect , notice on the other side , be start to use up , file descriptor here let , connect again right"
      ],
      "lecture 28-Q01": [
        "security problem that , may work once or twice or ten time but , be leave a file descriptor open and eventually will run out of spare far descriptor for process and then open file or calling open be will not work in the future , do not have any spare file descriptor leave ok the other thing that , may comment on if , be do a code review instead open a could fail so if this return null for example there be no current directory 's kind of a little bit bizarre but , could imagine that happen for example someone be delete the current direct current directory then this open durcal would return null so , be not actually check for that ok and by the way in case , do not notice look , be do this trick to hear to say ok i know that , have finish read the current directory when this be call to read return null",
        "to fight but the big idea here be that , do not clean up , , do not always release resource so always check , code , system programming code to make sure that in all code path particularly error code path , have release resource as soon as , finish use , ok and this will correspond to file descriptor to memory to any other resource to tcp socket etc etc etc right ok so let , have a look at this actually , have get a demo somewhere here , be right and in this demo , be go to implement a version of ls that be go to read a directory and also not only print out the name but print out the i node number as well so i want to make , code be somewhat cross platform as , be just bring , out , be go to assume that this i know number be at least unsigned be no"
      ],
      "lecture 28-Q02": [
        "ok right so here be a big idea that the idea of say tell , about the statistic of the information about a file basically , be read the representation of the i node entry of a file be just that , be not ask for the i node by node number instead , be use a directory name and , be the kernel task to figure out the corresponding i note number for the path that , have give , ok so this three variant of stat , can just simply say ok here be a path to something , could be a file , could be a directory , could be something else please fill out this strike for , and there be also an equivalent version to say hey i guess what , have already open a file or maybe a directory and please use that file descriptor again to fill out this truck for ,",
        "matter of convenience as to whether , know the path or already have a file descriptor to an open file there be one other version be as well here which be go to leave a little bit but , be go to find that useful when , start talk about symbolic link so let , have a look at the kind of information that , can get back from stat ok right so the system give , the following struct , can use and big important idea and , see this multiple time be that ok , be go to give a pointer to struct so , be go to write thing like ok here be a address of say some staff that some struct that , have get on , stack or somewhere else , be only go to fill out memory structure force if stat return success so , be very important to be able to check that , return ok so"
      ],
      "lecture 28-Q06": [
        "do , open the file and , be go to overwrite , so let , just send the option to say , want to truncate , of course there be go to be some other option in here as well but this be just a sketch and then i write to , file descriptor , new datum and then i close , so if , look in time kind of ghost and stuff so there be a problem with this which be that if the power go out between say , right corner make clothe and the actual datum be write to disk then tomorrow when i restart , machine i would discover that hey , entire file go because the only thing that be happen be i manage to truncate , so many program"
      ],
      "lecture 30-Q03": [
        "so , be go to redirect standard error which , know be file descriptor two so this be what this be do to a special place a very special file this particular file do not exist , will not find , on any any disk drive , be because sachdev be a something to , device here ok there , go because slash dev be a virtual file system and slash dev slash null have an amazing amount of compression , can put as many file , can copy as much output , want to this file and , do not take any space , be the wastepaper basket of , file system so what , be say be look , may generate a message because a loadout do not exist that error message i do not care i do not want"
      ],
      "lecture 30-Q06": [
        "of open file descriptor but these do not need to correspond to just file , can refer to pipe and socket like network socket process have a limited number of these that more recently , have talk about the fact that the process run as a user and in fact , have two concept of the user the original user that be sit behind the keyboard the user id here just a number but then what can this program actually do when , be run as a process that be govern by the effective user id and , see how use thing like the sticky bit , could actually run as a different user with different privilege , process also contain a present working directory and , be go to need this and use this anytime that , be work with relative path because , be relative to the current directory and , know that , can change this by use thing like chi hdr tudor",
        "user or the amount of memory that , process can have that kind of thing or even the number of file descriptor , also have meta information about whether , care a lot about a particular process or thread , can give , different priority so if , have a thread whose goal be to keep the steering wheel point in the right direction that be probably a pretty high priority thread and , should be give a cpu in priority compare to say something which be go to download an update off the internet and the last thing will have , set up process which will talk about any future lecture be this concept of umask which be go to be use when , create new thread sorry know file and new directory but more about new mask in the future ok so come back to school over here because a couple"
      ],
      "lecture 31-Q03": [
        "the most powerful one that , be go to play with today that , say i want to map some memory and i want to map , to a file now , do not give a file name instead , just give a file descriptor so for example , have , have already open that by say open somewhere now some thing , can do with this , could specify a particular dress , like or alternatively , could just say , know i do not care map , find a good place in , address base for this , do not need to say how many byte that , 'd like so this could be a fix number like hey i just want a thousand twenty four or maybe , have already state the same file so for example if , just want to load the whole file if , want to map the whole file then maybe , could say something"
      ],
      "lecture 33-Q01": [
        "by invite , to a port number also bind , to a particular network card as well right so great , have now identify a particular passive port that be list on now , can open up , shop so , say listen at this point when , call listen the open for business meet that package can arrive on that port and the kernel will take care of , for , will start the tcp handshake for , ok but at some point , actually want to start talk to all of the client which be connect to , so this be what , call accept and except will block if there be no new client otherwise , return a new file descriptor force an unused file descriptor number which be which be connect to one particular client one particular connection right so that be what , need to kind of set up , server"
      ],
      "lecture 33-Q03": [
        "the ideology work in term of , far descriptor that if , have get a set of file descriptor right now so let , see accept 's return to many time and many time and , have actually get say here , go far descriptor four five six and seven correspond to four different connection right now i could have a single thread i think process somehow try to talk to all of these client at the same time ok now but , turn out of course that right now for , do not need to do anything with the waiting for , to say something to , five death send be some datum and but , do not have any datum for , right at this instant , be still wait for more to arrive six , be currently send result and , be halfway through send that file but , be not ready to receive any more datum yet and seven well , just have not hear of in awhile perhaps at some point , be go to give up on seven and terminate that connection right so one single waiter could do all of this so , plan be to somehow say hey thread i want , to block",
        "say on this set of connection and this be what do select do so with select , can say here be a range of far descriptor say four to seven and i want , to block forever until something be happen ok actually select allow , just put a time out so , could say block until something be happen or say one millisecond or second have pass right so when , return be , can actually interrogate to see what be happen to each of , table and decide what , be wait want to do the problem with select be this check this polling of all of the file descriptor be an order n operation so , be not order n square be not n log n so , be only order n but if , be talk about say want to have thousand connection or truly truly have the",
        "call actually slow , down perhaps as a well design and so this be where poll come in paul be really design system interface to say maybe , need instead away to say look , be go to tell the system about a set of file descriptor i care about and come back to , when something be happen but do not make , keep ask each table whether , be ready instead tell , which specific table need more food so poll be a new way to kind of interrogate the system to see which file descriptor be ready to either receive or send more datum the poll be develop on there go to bsd system so not linux but the another free operating system"
      ],
      "lecture 33-Q04": [
        "ok alright so that be here , go let , talk about select people have a case remember select come first and so one good reason for use select be when , care about write something , just cross platform in other word , want to make , work on say mac as well or bsd , want to make , work on window even then select be have be around the long and be the simple to use so if , just want to write some very simple code where a single thread a single process can work with a few file descriptor then , select and the amount of code , need to write will be small and , be much simple to use ok but if , goal on linux be to write a high performance server then epoll should be , answer ok so epoll be obviously like i say linux specific , be also",
        "ok event base , return or fill out a way for , to tell , which file descriptor be , need to process ipoh also use a set of far descriptor so , set up an object which be simply a simple set of integer which be the file descriptor say here go equal here be all the file descriptor that , care about now please block until there be at least one event happen on these and then when , return do not return just one event give , an array of all event that , should work through to process ok right the last thing i want to talk about with people be that , actually have two different mode of operation and , can think of , be let , say bath yes so , be something",
        "the temperature in a room for example right so , could think of say the bath , try to fill sorry let , do let , do wear of a bath that , level that someone else be go to fill up meaning that , have put some bite into , bath i fill up the level ok so , be go to go from not interesting to , to suddenly the some by survive and now , batt be full of by , be ready for , to process ok so epoll can be use in two different method once call edge trigger another one call level trigger so , both , be both design to be use so that , can say hey this be something interesting on this file descriptor so in this case yeah , bad level have",
        "avoid for , let , pull , out so presumably when i do that the ability for that particular file descriptor to give , more bite , be go to drop down to zero again mean , be sorry there be no more bike available right now ok but the way to epoll can work then be to say either return that file descriptor provide the some activity that , can perform on this so this be now a level detect to say hey there be here be , level to say that yes this invite available to process or alternatively , could say yes there be some space available for , to send more byte right and with a level detection i could keep call epoll and , would keep keep return an array with this",
        "bath be ready for , , can use , ok so that be level detection just just check , some current stat and include , in this set of return event if , be in the positive , be byte be available to be read or the space available for , to write more flight to back out to the client so that be , level the other one be edge trigger ok let , choose a new color here where , just get notify one time that , should actually do something with this file descriptor so the day that , change from unintereste to , to interesting then , will call epoll and will get that notification just once , be up to , to actually then keep track of that because if , just ignore , if , do not actually",
        "particular file descriptor be not go to include that in the result until the day that the bath be empty for some reason right , go below go back down to the uninteresting case so this be call edge trigger meaning that , be the change in state that , be detect now how , write , code depend on on which version of these , use there be a couple of advantage to kind of both approach arguably for level detection , be a little bit simple code because , be now , can just simply say ok lyric thank , for tell , all the file descripter which need need processing and if for some strange reason i do not say to get to a particular one then , do not matter because the",
        "life with edge to edge detection one advantage here be if , actually get multiple thread then by be tell about this event only once then , can ensure that a single thread that call epoll be assign that duty be assign the problem of work with that particular file descriptor because if other thread now call epoll , be not go to be tell about , , be not go to be not decide this file descriptor a task because , be kinda be use , be common , be be assign to a different file descriptor sort different thread ok so that be epoll for , , will look at this but realize like will see a demo this but realize like i say that there be actually two different way to use , , could say level detection or edge trigger meet only tell , about the fire descriptor when , state change from unintereste to interesting or ready ready"
      ],
      "lecture 33-Q05": [
        "hey actually i remember , have gota little demo with epoll so let , do that instead ok so first of all , have actually get before , look at epoll a little program that can make pipe and send datum so kind of here , go , be call pipe writer and , may send down a pipe i the message ella island or noise ok so for this , be go to use some name pipe so , in , file system , be go to make pipe one and pipe two here , be and let , actually kind of make these pipe in now i actually want to actually start send datum to , so for this , be go to have two file descriptor here , go ok so use this this be go to be , test little test program where i can send datum to one pipe or the other pipe and then the other side will use epoll so all , be go to do be , press one or two and send the right message to the right pipe ok so that be just , little pipe writer",
        "ipoh ok so y poll somewhat complicate to use more complicated than thing , have see in the past but , be not terrify , be not the bad this let , see how , do this ok so , will choose a bright color right so again here be , little epoll demo , be go to make some pipe on this side as well and , be go to have two file scripter where , be listen now on these pipe object but , be today to make , more interesting not only , file descriptor be go to be read only , be go to say please do not block ok so that mean that , call to read and write will not stop instead , will just simply return negative one and set errno if , be unable to do anything useful for , right now ok so remember that because instead , be go to use",
        "also know as asynchronous , can now make sure that just one thread of , process can actually handle multiple connection multiple pipe right so let , get start with people how do , make an equal object easy call people create and , think of some random number because some random positive number be require here in practice be no long use just by convention stick something positive , ok now , have get , ipoh , need to tell this particular people instance that , want to listen to certain file descriptor so y pool , have a file descriptor but , be not something that , be go to use like a file , be just go to be a way for , to identify particular set of file descriptor that , care about now i can care about different event i can care about the fact that some datum have arrive i can care about the fact that there be some space available to send",
        ", go , can say equal i want to change the set fire descriptor that , be watch on this particular people set ok so this equal let , want to control that equal set in what , want to do be add some far descriptor so , say here be the file script that , care about and here be the event structure that , want to use and so in this case , be go to say that , care about event where datum have arrive by the way this data over here that be for user datum for , to be able to easily associate a particular event with a particular file descriptor but , could also please set of pointer as well so , set this up for both file script award five script two and now , can start list right so i mention that equal",
        "this event happen i want to know about the file descriptor so let , extract now the fire scripture from the event answer more event information still exactly what kind of equal event , be and so , can use that then too figure out what , want to do cap so , be go to slowly process one event at a time ok so now , can actually use that event integer with some bitmask flag to decide what kind of event occur so like i say by default that could be any poll inori pour out so , care about datum come into , process so if that be set , know that then that on that file script there be now datum ready to be read in other word this coulter read should succeed otherwise there be no point call , if , be not sure that there be no datum available in that file scripter",
        "equal weight be return no sorry i get no event for , now i think , be time to actually send some datum down there be two pipe down to far descriptor three and four so let , do that ok right so if i press one over here , will see that , get an event yeah , right that , have a equal in event k and , get some character now look at this , kind of get two two two different return here i think , be because i set up , code to only grab , say two character of time i forget exactly why ok so i could send some more align eye here , go , be go to keep read two character of time now let , send some datum on the other file descriptor as well ok so , should see some"
      ],
      "lecture 34-Q04": [
        "so a well way be to replace , signal call , have something call sig action which be old much more flexible and , kind of interesting interface to use , can do a lot more with the action ok right now so that allow , to install an asynchronous signal handler in other word no matter what , code be do when that signal be deliver these two call allow , to run some code at that moment asynchronously there be some other way to work with signal however one be that if , want to synchronously wait just to say ok now , be go to wait till signal happen , can call signal and specify a particular signal but , be a more interesting way to do , , could actually get a file descriptor whose only job be to tell , about signal which have be deliver so , can set up , own special thread just service deliver signal and the advantage of do this be that ,"
      ],
      "lecture 36-Q08": [
        "ok so last two thing be go to talk about in this lecture or remote procedure call and also when protocol go wrong with look at a security problem so let , talk about remote procedure call here be the idea i can actually split up , code into a local portion and remote portion and so , be a bit like say look , have get a function here call say update scoreboard and this may be save for game or something where for a particular name , have get to score to set but rather than do this kind of locally within , process i be actually go to run this on a completely different process and typically this process may be in a different server but the idea be that , have to do this of course , be go to actually send something down a file descriptor public send something down a socket possibly likely a tcp socket right so to do that , actually have to construct a message that request this and the y why may , do this well perhaps , have get a distribute"
      ],
      "lecture 37-Q02": [
        "number where the denominator be fix to be one over two hundred and fifty six so now i can represent not just integer but small integer together with a small floating point limited precision format something like that be actually use today in modern gpu card as well or what about today if , want to represent something more interested in some some interesting thing like a structured piece of datum like a composite piece of datum like something which represent a string and integer how be , go to marshall that be how , be go to send this so , may be tempt to write something like the follow let , just write all the byte inside , struct so for example suppose i write ok , be go to write to , file descriptor"
      ],
      "lecture 37-Q05": [
        "be careful this little get sure have be people in the past and , will bite people again in the future right but with that let , change tax actually have a look at a new version of something fun , can do with mmap which be guess what , can use mmap without even have a file to write into so , be kind of see this here , be right so here be , kind of main method today instead of use with mmap to say hey here be , file descriptor please map this into memory , be go to say actually i want anonymous mapping meaning that , do not actually map to any file at all so why may i do this because i can create some shared memory between"
      ],
      "lecture 38-Q05": [
        "ok right riddle , this give a network example why , why , may call equal control with people control delete ok so when would , want to do that game so let , have a think about this , know that ippo control be how , actually manipulate the set of file descriptor that , want people to care about so , be say hey , be go to give , a file descriptor that i do not want , to care about anymore so do not wake up do not tell , event about something on that particular file descriptor right so why may that be ok here be some , some example one , could simply be , finish talk to that client perhaps , have upload enough datum and the client have return yes , be good in goodbye so in which case there be no point keep , server around anymore so now",
        "entire server or , could say hey this file descriptor that be service this particular client , do not want to generate any event right now so let , delete that from , control group come the second see give network example second be that , simply finish the finished twice a week so , finish some kind of say transfer or some kind of argument and , know that , do not need to to do anymore like , have transfer all the byte or , have receive all the byte that , could ever possibly care about ok in which point there be no point ipoh track that file descriptor anymore , may as well remove , from the active set of fire scripter"
      ],
      "lecture 38-Q09": [
        "there be no part of the protocol that say , be go to first sense in packet backwards enforce , truly be connectionless , want to send a message , send just another packet so when , call connect , be not really connect to the other side , be simply actually just give a hint to , machine that future call to use send will always use the same host and port number as as the destination so , just make the future part of , code just a little bit clean because now , just need to file descriptor and the buffer that , want to use to send those bite so that be big important idea that compare to tcp which be connection base udp be and always will be a connectionless protocol ok so that be the udp if , have not have a quick play with , have start start with the code , have put in to"
      ],
      "lecture 39-Q07": [
        "question right so yeah if i want to find out if , be a symbolic link yet , should use l stat and also let , take all of that and stick , in here so will check to see if that be equal to zero for succeeded and also will s link here , actually want to check on the mode bit ok so great , fix that one and , last question of this letter ok so what do , think will happen if , keep call open there and never call close there what will , run out of so that be the kind of question where in real code , will see , work in like testing but the moment , put into production seem to work and then , go home three o'clock in the morning , suddenly start to fail what be , problem here , problem be that eventually , will run out of file descriptor so feilde right be file"
      ]
    }
  },
  "topic 9": {
    "keywords": [
      "return value",
      "void pointer",
      "thread exit"
    ],
    "mentions": {
      "lecture 02-Q01": [
        "0 minute"
      ],
      "lecture 02-Q02": [
        "2 minute"
      ],
      "lecture 02-Q08": [
        "1 minute"
      ],
      "lecture 02-Q11": [
        "0 minute"
      ],
      "lecture 02-Q14": [
        "0 minute"
      ],
      "lecture 03-Q01": [
        "0 minute",
        "1 minute",
        "2 minute",
        "3 minute"
      ],
      "lecture 03-Q03": [
        "0 minute"
      ],
      "lecture 03-Q04": [
        "5 minute",
        "8 minute",
        "11 minute",
        "12 minute"
      ],
      "lecture 03-Q05": [
        "1 minute"
      ],
      "lecture 03-Q10": [
        "4 minute"
      ],
      "lecture 04-Q02": [
        "6 minute",
        "10 minute"
      ],
      "lecture 04-Q03": [
        "1 minute",
        "6 minute"
      ],
      "lecture 04-Q04": [
        "8 minute"
      ],
      "lecture 04-Q05": [
        "2 minute",
        "12 minute"
      ],
      "lecture 04-Q06": [
        "2 minute",
        "4 minute",
        "9 minute"
      ],
      "lecture 04-Q07": [
        "1 minute"
      ],
      "lecture 05-pt3": [
        "5 minute"
      ],
      "lecture 05-pt4": [
        "0 minute",
        "2 minute",
        "4 minute",
        "6 minute"
      ],
      "lecture 05-pt5": [
        "0 minute"
      ],
      "lecture 05-pt8": [
        "0 minute",
        "1 minute"
      ],
      "lecture 06-Q01": [
        "1 minute",
        "2 minute",
        "3 minute",
        "5 minute"
      ],
      "lecture 06-Q02": [
        "1 minute"
      ],
      "lecture 06-Q04": [
        "1 minute"
      ],
      "lecture 06-Q05": [
        "2 minute",
        "3 minute",
        "5 minute"
      ],
      "lecture 06-Q06": [
        "3 minute",
        "4 minute"
      ],
      "lecture 06-Q07": [
        "2 minute"
      ],
      "lecture 06-Q08": [
        "0 minute",
        "10 minute"
      ],
      "lecture 07-Q01": [
        "0 minute",
        "6 minute",
        "8 minute"
      ],
      "lecture 07-Q02": [
        "8 minute"
      ],
      "lecture 07-Q03-05": [
        "1 minute"
      ],
      "lecture 08-Q01": [
        "3 minute"
      ],
      "lecture 08-Q04": [
        "1 minute",
        "2 minute"
      ],
      "lecture 08-Q06": [
        "1 minute",
        "7 minute",
        "8 minute"
      ],
      "lecture 09-Q01": [
        "2 minute"
      ],
      "lecture 09-Q02": [
        "6 minute",
        "8 minute"
      ],
      "lecture 09-Q07": [
        "1 minute",
        "2 minute",
        "3 minute",
        "5 minute"
      ],
      "lecture 10-Q02": [
        "11 minute"
      ],
      "lecture 10-Q04": [
        "5 minute"
      ],
      "lecture 11-Q02": [
        "4 minute",
        "5 minute",
        "6 minute",
        "8 minute",
        "9 minute",
        "10 minute",
        "11 minute",
        "12 minute",
        "19 minute",
        "20 minute",
        "21 minute",
        "22 minute",
        "23 minute",
        "24 minute",
        "25 minute",
        "26 minute"
      ],
      "lecture 11-Q04": [
        "1 minute"
      ],
      "lecture 11-Q05": [
        "2 minute"
      ],
      "lecture 11-Q06": [
        "0 minute"
      ],
      "lecture 11-Q09": [
        "0 minute",
        "1 minute",
        "3 minute"
      ],
      "lecture 11-Q10": [
        "2 minute"
      ],
      "lecture 12-Q01": [
        "2 minute"
      ],
      "lecture 12-Q02": [
        "2 minute",
        "6 minute",
        "9 minute"
      ],
      "lecture 12-Q03": [
        "0 minute"
      ],
      "lecture 12-Q05": [
        "1 minute",
        "2 minute"
      ],
      "lecture 12-Q07": [
        "4 minute",
        "5 minute"
      ],
      "lecture 13-Q01": [
        "2 minute",
        "4 minute",
        "5 minute"
      ],
      "lecture 13-Q09": [
        "2 minute",
        "6 minute",
        "7 minute"
      ],
      "lecture 14-Q09": [
        "5 minute"
      ],
      "lecture 15-Q04": [
        "5 minute"
      ],
      "lecture 16-Q01": [
        "7 minute"
      ],
      "lecture 16-Q02": [
        "2 minute"
      ],
      "lecture 17-Q05": [
        "2 minute"
      ],
      "lecture 18-Q05": [
        "0 minute"
      ],
      "lecture 22-Q01": [
        "12 minute"
      ],
      "lecture 22-Q02": [
        "1 minute"
      ],
      "lecture 22-Q03": [
        "10 minute"
      ],
      "lecture 22-Q05": [
        "1 minute"
      ],
      "lecture 22-Q08": [
        "0 minute",
        "1 minute"
      ],
      "lecture 23-Q02": [
        "2 minute"
      ],
      "lecture 23-Q03": [
        "4 minute",
        "9 minute"
      ],
      "lecture 24-Q03": [
        "0 minute"
      ],
      "lecture 24-Q06": [
        "1 minute",
        "4 minute"
      ],
      "lecture 24-Q08": [
        "3 minute"
      ],
      "lecture 25-Q05": [
        "2 minute",
        "5 minute",
        "6 minute"
      ],
      "lecture 25-Q06": [
        "1 minute"
      ],
      "lecture 27-Q01": [
        "1 minute"
      ],
      "lecture 27-Q04": [
        "0 minute",
        "3 minute"
      ],
      "lecture 28-Q03": [
        "0 minute"
      ],
      "lecture 29-Q02": [
        "0 minute",
        "4 minute"
      ],
      "lecture 30-Q04": [
        "4 minute"
      ],
      "lecture 32-Q02": [
        "8 minute"
      ],
      "lecture 33-Q06": [
        "5 minute"
      ],
      "lecture 34-Q03": [
        "1 minute",
        "2 minute"
      ],
      "lecture 35-Q04": [
        "2 minute"
      ],
      "lecture 35-Q09": [
        "0 minute",
        "2 minute"
      ],
      "lecture 37-Q01": [
        "4 minute"
      ],
      "lecture 37-Q05": [
        "2 minute"
      ],
      "lecture 38-Q02": [
        "10 minute"
      ],
      "lecture 39-Q02": [
        "4 minute"
      ]
    },
    "captions": {
      "lecture 02-Q01": [
        "hi welcome to the first online lecture and the first question ok so let , get start , be go to look at the example and problem from the second lecture here the cc crash ok so let , have a look at , first little first little problem here , have get here be ok so , want to know about the pre the pre processor let , pull , in here ok so what kind of three example of common example first of all what be the c preprocessor be that , be a text replacement tool that run before , actually compile this c code and , can think of be very simple and fairly dump tool that only stand a few understand a few limited command so one thing i can do be that , can , can include additional file so for example if i say ok , utility function then that moment inside , compilation"
      ],
      "lecture 02-Q02": [
        ", contain function well for example i want to be able to say result and then , will call contain a lot of c code actually the style be to use underscore so let , do that and will say contain out and , expect if , call , with a test one that if , pass in a string with an app side , expect that to be equal to one ok so , can talk about the certain little bit but for now let , just decide what , print out so i print out result so if , be all be one then then that , evaluate to true and , can print out something and , can say contain that right and otherwise , will say no app find ok but this be not the good of code , probably should put those brace around those single statement for the year from the else but in the interest of time"
      ],
      "lecture 02-Q08": [
        "and the puzzle be how can i make these two call actually return the same address now , may notice in this example here that , have get these void thing so avoid pointer mean i want to store an address and , be not go to tell , what there just simply treat , as a number as an address as a memory location and , will not talk about what kind of object or what kind of primitive or anything about with store there so , can not , can not , should not do pointer arithmetic on void pointer or at least that be the official line more about that later ok so , have get , two memory allocation request how could these possibly would be return the same thing so the answer to , little puzzle here be what do , do the following after call malloc , immediately say hey thank so those bite but , know what i change , mind i do not need , anymore so let , call free and pass in"
      ],
      "lecture 02-Q11": [
        "ok great so puzzle for , let , think about so now take , address of thing so have a look at this code , have get , a global variable so that be not go to be on the stack ok , be go to initialize that to five but this be what , do inside , main , call a function f one , pass the value of ten and , also pass in the address of , global variable so just sometimes , actually do not want the value of , variable , actually want to know where , live that be the purpose of this address of operate say tell , where something be because maybe i want to write something directly into that those memory location right so that be go to pass in the address of , global and also the value of ten meanwhile there be go to look inside f one because , challenge to work out which one of these line will actually which one or two or three of these line will actually print out an address in the stack ok so , first contender"
      ],
      "lecture 02-Q14": [
        "hi right in this last video , have get a bit of a challenge here , go so i want to make use of the follow function call get get message and this function first of all , be go to change , name to be a bit more see like there , go get message and this function take a pointer to a pointer and then , do some wonderful thing with this pointer first of all let , go to , locker say hey malloc i need ten bite that will give , back the address of that ten contiguous byte and , store that somewhere , store that inside magic except not available magic directly instead , follow magic wherever magic be point to that be the thing , be go to change and then , do something similar whatever magic be point to that be where , be go to make , change so , know , just change , , know that be actually go to be heap memory so into that heap memory , be go"
      ],
      "lecture 03-Q01": [
        "ok , good morning , and good afternoon , and good evening whenever , be watch this video . so welcome to the second record video , that be lecture three of cs 241 let , get start where today , be go to look at a day at the c side , so if , wish , can look at the hand out and the code example or , cs241 lecture repository . so , first little puzzle for , be the follow : what do , think the result or the value of this expression will be ? and , clue be that p be a character pointer and , be initialize to point to the following . so , take five second to have a guess , and , will tell , the answer in a moment . ok , so p be hold the memory location of that string literal , that constant , and inside that memory , , know that actually there be go to be four byte , the capital s , \" y , the s ,   and the zero byte to say , \" \" hey , no more byte please \" \" . \"",
        "go to evaluate to ? well , when , pass a strlen in this memory location that be hold by p , strlen be go to walk along , read a byte at a time , until , get to that zero byte , and then report to , how far , go , and in other word , how many character be actually in the string . so in this case , , be go to read the s , y , the s , and then the zero byte , and , be go \" to say , \" \" actually , have to read three character . \" \" so strlen \"   be go to evaluate to three . so what be the result of call p of three ? well , in this case , that mean that , be go to advance to that zero byte at the end . ok , so the result of that expression be zero !   and of course , this be go to be true for most string , provide , pass strlen a valid memory location , so in other word , if p be a valid pointer",
        "to delete , little mark , there , go . right , so let , think about how strlen may work in some different situation . if , call strlen with an empty string , that be still go to be a valid memory location . , be just that the very first bite be that zero . \" if , call strlen with an \" \" at \" \" , then that , of course , \" \" will work , and , say , \" \" , be a string of length one , \" \" and \" actually that string of course as , now know take two byte . but strlen be not always go to work . if , pass , an invalid memory location , and here be one that everybody know for example , null , which be implement as address zero , then , program will crash . this be not a fault of strlen . if , actually know about strlen , , would know that , be only guarantee to work if , pass in a valid location . so strlen be not break , , be , incorrect use of strlen , and in this case , strlen attempt to \" read a byte , but , processor say , \" \" hold on a moment , \"",
        "so how do , find out more about the function that , want to use inside , function inside , program ? for example strlen or something else , at which point \" , say , \" \" ok to get the scoop on the actual specification \" \" of how thing be suppose to work , use the man page ! \" \" \" and , can access , from the command line on kind of any normal unix system . so for example , let , go have a look at the man page of strlen . , want to get rid of , little mark . there , go right so let , go and have a look will type man of strlen . so go and find the man page of strlen and here , be on , mac system , so , describe exactly what , do , and also will will describe exactly return value . so"
      ],
      "lecture 03-Q03": [
        "hi , so if , want to allocate some heap memory , how can , do , in c ? hopefully , already know the answer to this one . if , want a certain number of byte , , be go to call malloc . and yes , , may hard code a value in here , but at other time , , may actually evaluate something . so for example , strlen of , character pointer and then plus one because , of course , , need at least one extra byte to hold the zero byte . ok that give , back a pointer , what can , do with that pointer ? answer almost anything , want , provide , promise but of course , only use the number of button that , request . , do not want to accidentally start write memory location before that pointer or memory location after the end of , . , be go to corrupt the process memory . so if , have get a pointer that malloc have give , , \" there , go . \" \" so hey malloc , please give , some memory . \" \" \" then later , when , finish use that memory ,"
      ],
      "lecture 03-Q04": [
        "to keep go until , get to that zero byte of , source , and , be move byte across , so , hey destination ! \" please take the source byte . \" \" \" ok , and then , be incremente , . now , actually want to move the pointer , . , do not want to change the value inside each of those memory location . , be just move the pointer to look at different byte . ok , so what do , think of that ? have , get a reasonable implementation of strcat ? so , will give , a go . let , see if , can actually make , work . ok , so let , run a quick test here . and whilst , be write this , why do not , think about why and what bug , have introduce here . so standard io dot h. , want int main , argc argvalue . ok , so how about the follow ? , have a destination and",
        "right , so if , be pay attention , , may have notice that what be , pass into , little function here , mystrcat ? , be pass in , variable destination but do , initialize , ? no ! and , be a stack variable , so , value could be anything . , be go to guess , between , and , , that , be probably point at nothing just because , be deal with a fresh process here , because , stack be probably go to have some zero byte in that memory , but that be just purely by chance , purely just what happen to be in memory at the time . so , should set , equal to something . , may try abc etc here , but , have get a problem here . that be go to be read only memory . , well actually get , some memory that , can change . how can , do that ? well , get a couple of option . , could have some heap memory . so here , go , let , have a hundred",
        "take , on trust that byte that , be go write into be of valid location . so that be why c programming can be exciting . , have actually get to make sure that , think carefully about , memory location . , be up to , to wield this power and this fire correctly . so only set fire to thing which be suppose to be on fire . alright , so with that , will commit this , and let , go back to the little example here . ok , right , so , can , can actually consider , , 'd actually kind of walk through and single step , program , and let , see . , could actually think about how this , how this actually write byte a single line at a time , a single character at the time .",
        "yes , , do ! ok , right so , , can look back at , code and imagine that if , have pass in a source , the follow memory location and a destination at two thousand , , could actually kind of evaluate what actually , process do . so let , set up a little example here where , in , source , , have get the following , and in other location , , have get the follow . so now let , actually look at , code . where do , go ? ok and , will make , a little bit small so , can see both at the same time . ok right right so , , want , ..."
      ],
      "lecture 03-Q05": [
        "lifetime of , function . and of that , of course , be go to need some heap memory . ok , so let , have a go at that . the last thing , notice be that this look a bit suspicious to , . be these the right way around ? turn out , be not . how can , confirm that ? answer : use the man page . so , if i use the man page of strcpy , , would discover that the destination go on the left . ok , so with that in mind let , write , own version of strdup . ok so , will skip that and go to [ indistinct ] . right , so , will write mystrdup ok . here , be . so , want to write mystrdup , and , can return a character pointer . ok , mystrdup and , be go to take a pointer to a constant character . , promise not to change that character or anything else use this pointer . ok , so first of all let , figure out how many"
      ],
      "lecture 03-Q10": [
        "and will run , ok and , will see by default the assert actually do not really cool , actually be generate c code that know the filename assert demo and the line number line six that be really really cool how do , manage to do that well the trick by the way be that the there be actually two kind of constant switch two constant which change one be that , have let , just do this percent s percent d , have file with two underscore before and after and line and the compiler there , go the compiler define these and of course the line number change and cost to file change that"
      ],
      "lecture 04-Q02": [
        ", print out the result of the return value of result so how can i do that i can say printf and then result be and , could treat , say as assign simple integer right and for that i will cast , to a simple int because , result actually may be large than , but today , just for demo purpose this will be sufficient right and with anything else , want to do well ok what do , think about this let , see , have get some bite but , do not necessarily get a c string what , get be just some byte be not actually go to be null terminate so how could i actually see those byte well one way be to use every right to say give spit out those particular bite but let , start use as a c string how can i do that and the trick",
        "to think about that i will compile , and run , ok off , go this time , be go to type say cde anne would , see now right so i say cde , have get this other garbage be print out this this second ib as well ok why do that occur why do , see extra letter so the answer to this be that the content of , buffer in the stack be just go to be the whatever happen to be in those stack memory location and , do not actually set any other to zero so when , ask to print , out as a string printf and put i say fine , will do that , be go to keep work until like happen"
      ],
      "lecture 04-Q03": [
        "please parse the input and i expect to see , say a number and a comma and then a another say number integer number that be maybe another comma or not but let , just deal with just two two number per line today right so that could be , format now what happen to these number , need to give some memory location of where to write , and so because , have give a hint to scanf after , be expect integer , be go to write four byte integer so let , for example say here be the address of , first integer k available here be the address of another integer variable ok there , go right ok so scanf behave a lot like printf there be a little",
        "ok so let , have a go with this let , have , x and just for demonstration purpose will set the value of two item here and let , try to read , in so i want to use scan if and will say ok percent d percent d for the comet in between here be the address of x here be the address of why ok and will print out the value of x and y and then , will go back and look to see what the return value of scanner be so will do so x be now d and why be now ok and will say here be a value of x and y so notice wizard"
      ],
      "lecture 04-Q04": [
        ", sure off , go right so will run , say could not open data file ok so that be , first hint that something go wrong let , have a look at , code and shape be try to open the right file which one be open file call , data dot csv do , have such a file no , have something call datum dot csv so , can let , either fix rc code or change , file , will use medidata to change the file i want to move datum dot csv to , data dot csv ok so now let , run , ok and see how , go around that loop seven time if , actually look at the datum , data dot csv , will see that , have get seven item seven rise here to read so great , have successfully manage to read"
      ],
      "lecture 04-Q05": [
        "and for performance reason each time , call get line , will pull in a new line of datum and store , and overwrite the original area in memory in heap memo so , need to be able to get a process that line before , call get line again so , do this for for performance because , do not want to have each time go back to the heap and say hey heap i need some more memory for another line instead could be a lot more quick to run if , can actually just overwrite the heap memory that , already request in the case however that the line , be go to read be much long than before then oh , have a problem , do not have enough space in the heat for , fortunately get line will then free up the old memory allocate some new memory force and , do this all automatically the only thing , need from , be to",
        "on , mac system here will go scroll down till , find the return value here so , return the number of character write exclude the null character so that be important information to know , can write correct code if , be accurate ok so i want to overlay that that that new line so i need something in here to say right go to the end of this so i could say put stroller learn of buffer that would find other white location that would be the near the end but i already have the result so what do , think about take result and that should be a new line character well hold on a moment imagine for a moment that the all , have be a single newline"
      ],
      "lecture 04-Q06": [
        "so how can i create a process here be the big news , be go to look at a system group i do not want to know i want ok , be go to use assistant call call fork and fork do not work the way that , may expect when , call fork the process that cause , be clone so that be right , be not call maine again , be not run from disk instead , be say hey colonel look at , current process give , a complete copy of , that be right the whole stack all of the heap memory all of the process all of the constant that , have inside memory , be go to copy all of that into a completely new independent process the new process",
        "that that be say and , know what , be not go to even tell , how many argument that this function have right so , have main and , have a little stack variable inside , here be , variable say ten i could make some heap memory as well by call malloc have some global variable as well etc but that be just enough for today right now , be time to clone , process so , be go to call fork but just keep , on , toe i think be fun today to call fork handful of time let , call , three time and , question to , be what be go to happen here to make , real will get each of , running process to print something so will say , variable be percent d and , be store at like upset be ok so i want to print out the content of , variable but also and i want to know ,",
        "to say to be twenty and then let , continue what would happen remember these process be isolate , do not affect each other so all of these be the process be that , see testing to print out ten , do not know or do not care about the change that process memory so the process , do change will print out twenty and then later in a moment when this process be clone by call fork the clone of , will also be hold the value twenty so that will print out twenty now one point of confusion here be if , actually look at the output of this , look like these variable be all inside the same memory location ok very important idea and point here be that these address of variable and in fact the address of anything outside ,"
      ],
      "lecture 04-Q07": [
        "so who be the current user and , be , angry of great how about , actually want to get access these from rc code as well ok so to do that , alright so from r c programming there be some couple of useful thing one be if , just want to read , , can call get environment variable and that return the value associate with a key ok and , can also set environment variable and , can iterate through order , use a special environment variable call in violin which , will talk about in a future lecture so the way to think about environment variable be a very simple key value pair and put a simple string"
      ],
      "lecture 05-pt3": [
        "to do be to say look if rf open fail so if file , be a null pointer , want to print something out that be useful like could not open or whatever file , say for read ok and i need the file name on v one maybe , should put that inside of variable would be clean code and , do not continue do not pass go instead return and let , have a different error code just for fun the last thing , want to change be to also set , capacity k two super alright so , get , bike red , check return value and if , be negative one , stop ok so and , want the free in here as well so free the line pointer ok alright so let , compile that"
      ],
      "lecture 05-pt4": [
        "hi so let , actually think about write a version of get line will sketch , out here and , will add the complete code to the repository there be some gnarly little point inside here so , have use get line a few time this be , signature where , have point to a point to remember an a pointer to a size variable so those be the variable that , have , call get line , be pass in the address of all line and the address of , capacity right so the value which be actually go into get line or the memory location of those two variable so just to be clear what , be do be , be dive in to get line and pretend that , actually need to write this little function ok so here be the plan , need to start read character and , want to be able to keep read character until",
        "here and see if that be equal to zero why be that why be that incorrect ok well hopefully with a little bit of thought , would have realize that be very variable inside here do not point to heap memory be actually point to that little variable that be on the outside that that be actually go to hold the result so that be not what , need , actually need to use that pointer there , go and actually follow , so if that be like look at all then , know , have no heap memory to actually hold the result so , may wait that if , do actually end up call malloc then i actually want to change that variable so again same idea , would be mistake just line pointer inside here yes that will change , little , little variable here but that be not what",
        "kay break out of that loop but , also want to store that new line inside the result so let , always store the value of c inside area so , need to say something like ok hey line pointer i know that , be look at case of man heap queso dereference that little variable ok , be go to do that first after dereference , now great , have actually look at the heap memory and that be where i can now start write thing in so let , now treat that as a way of bite and i can use , bite rate k light red to make sure i update that heat map in the right spot",
        "a little bit careful however because , be go to need to return a c string so at the end of , code kate be disappear right anyway code that be the case , be go to write , for real the enemy code , can get way there , go , have get one last thing to do which be , need to take , i line pointer dereference with now look at the heap memory and then put a null byte at the end to ensure that what , return be a proper terminate c string so let , go bite weird and , would say sure ok but when , do that , have get a little bit of work to do first of all right now , be turn negative one"
      ],
      "lecture 05-pt5": [
        "hi so let , look at complete solution of , implementation of get line first a couple thing to point out be , know , can actually check to see if the point be , be be give a valid , expect all of these pointer to actually point to be non null so let , use assert to check that each of these value be a non zero ok so , next piece of code be to check to see if , do not actually have a valid piece of heap memory to use so , be go to follow the pointer be give because remember , point be actually point back to the stack variable use by the caller ok so let , follow , and see if , be equal equal equal to zero then that be no use for , instead let , now get , in new buffer ok right now let , have a look to see how , be go to extend the buffer i like , code to be performance so rather extend , buffer just buy one or ten or twenty if i run out of"
      ],
      "lecture 05-pt8": [
        "hi take a look at the follow code , get quite a few thing go on first of all , be actually use fork and remember what fork do focus hey take this current process and duplicate for kit and now that , have get the original parent process and a child process and these two process look very similar to one another , have the same variable setup , have , have some stack memory , have heap memory , have all of the program code but there be one little difference one easy way to tell whether , be in the parent on the child and the answer to that be what be , value of fork return so one way to think about this be that , have immediately step into a mirror world now there be , and the new , and , 'd like to know whether , be the actually the original , or the new , so let , put that result into a variable and in fact what , give , be",
        "the parent the original process will see if , be the new copy if , be that doppelganger then actually what , get back here be zero so that be the easy way to find out if , be the original or the dastardly clone ok if , be the child process ok so let , print out there be actually print out the result of fork and , actually see that so now , be go to actually have multiple process run both compete to print thing to , little terminal so actually expect to see that line of print twice just like if , be run gcc and i be run gcc hey both of , be go to produce output the difference of course be that now both those process be connect to , terminal so , be go to see a lot of confuse output from two process"
      ],
      "lecture 06-Q01": [
        "cheat and give a little bit of cpu time to each process but , can swap between these fast than i can notice , may be swap between , say every millisecond or every time that one process have run out of input to process so , will talk more about scheduling later on in the course but great , have now get to run process but at some point i want to synchronize , behavior and the simple synchronization that , can do be to wait for , child process to finish so , child be run here practice calculate something perhaps , be send something to disk etc perhaps , be serve a website who know , could be any of those thing but sometimes at some point , will finish good example here be perhaps , parent process be the shell , have log in , ssh - ed in for example and , have type something to run and now , use fork to start a child process perhaps that child process for example be go to be run gcc but anyway for whatever reason , finish and so",
        "for that how do , do that well , now make use of another call call wait or wait pid if i use weight pid i could actually specify a particular child process , have like to wait for so for example let , wait for process number hundred and thirty two but , can do more than that , can say hey kernel please not only wait for this particular process to finish but give , some hint tell , what happen to , i want to forensically find out why , why and how , exit so will pass in the address of an integer ok so here be the address of some little integer like s for status or something right so , be go to get back a limited number of bit of information and in fact this integer be pack full of good stuff , tell , the exit value that ,",
        "program crash for example , try to read and write some invalid memory like memory location zero then , be go to segfault and , could discover that well or if , program be perfectly happily run along and somebody press control c and interrupt , then would crash , program then , can discover that too so all this information be encode inside this little integer now i could tell , thing like and on this particular system the exit value at least the eight bit the low 8 bits exit value be encode somewhere somehow inside this integer perhaps in the low bit , perhaps in the high bit , but in practice , never have to write those expression , for example , never have to say something",
        "base system i pull this from the as , can see android dot google source but in practice , would never actually productive write this expression , can just make use of the macro suppose , want to check to see whether , child process do not exit normally but instead actually exit abnormally because a signal be deliver what be a signal , ask great question , be go to talk about that in a moment but for now be two example of a signal or when , press ctrl c or if , crash due to a segmentation fault so , can check that by first of all say be , signal and if the result of that expression again be non zero , can also find out which particular signal , be that cause , program to stop and so , can use this macro w term sick to pull out the signal number"
      ],
      "lecture 06-Q02": [
        "lecture anyway but , do and when do , return , usually exact do not return usually with exact , provide a program on disk to load and that be the moment , give , poor little process ahead temp head transplant , have completely throw away all of the heap memory order the stack no need to do free or all that memory have disappear to be replace by a brand new program , be the same process and will have the same process id and the same number of open file but now , be run a completely different program that be go to start from maine so hopefully , can now see that a very very common pattern be to call fork and then inside the child process , want to do something else , do not keep execute the same code"
      ],
      "lecture 06-Q04": [
        "will evaluate to false so do not go around anymore ok so let , think about that for a moment imagine that , initial value be for c be five then in this loop the first thing , do be , pre decrement see another word before use , value change the value of the variable so c be now full which be great than one and then , say ok and not fork so in child process ok so here be the original power to poopy doopy doopy doopy do and then , make the child process in the child process fork return zero and otherwise , be true so , get to kyon round the loop so around , go and that"
      ],
      "lecture 06-Q05": [
        "when , create a shell where , be read every line of input in order to run that as a process ok so now what , want to do , want to say somehow i want to check to see if , be the child process so imagine now , have a split brain what , want to do be actually think about , code in two different scenario that will have the scenario where , be the parent and the scenario where , be the child and to make , life simple , can actually buy some if statement remember then what , wait inside one 's statement be only go to be able to applicable to the child process right so how can i tell if the child if i if this code here be actually be run inside the child crisis well return value from fork be what be o , can also find out who , parent be just by call get p p i d so , have get all , condition for a child",
        "value of m to point to a different string hello and right what happen next in the child process well all this other stuff go to else be irrelevant to that child process so what be the child process do next , print out string put s remember just print half with an additional new line as well so , be go to say ok child print out whatever , find with the m point to by kate provide , will remember that , value of m be completely different inside these two process just like if , be to run a program multiple time different time of the day even though i can show , the same source code actually two different process if , run , in the morning and in the afternoon so have that frame of mind when think about this kind of code right so , child be go to print out hello and return",
        "ok no , be i be just still in the ink mode ok so hello world great right so , have error check the check so i want to say delete two parenthesis insert mode and then f if f be zero i know that , be a child right otherwise inside here , have the status variable here if , want , can initialize this but in practice , will be good to to check return value wait pid so wait pid i want , to please wait for this"
      ],
      "lecture 06-Q06": [
        "the process name so , have get compiler and then maybe i want to give gcc some option for example hey please compile with debug information could turn , on and then what be the name of dot c file , want to compile , be store that inside little variable call target ok right so off , go , have give , a little head transplant and the child process will now merrily run attempt around the compiler so what should , do inside the parent inside the parent , need to wait until that compilation have finish in other word until that child process be finish so , will call wait pid that be turn , into and i can i backwards right wait pid and as usual will need the child",
        "ok and there be no option today ok sue if the child successfully manage to compile the program then at some point , be go to break out of this loop and actually run the program if the compilation fail then , want to wait a bit and try again so how can , detect if , fail well the compiler like other good program actually set the exit value depend on whether , be successfully compile , program or not so , can just check , return value from maine or exit value feel like , know how to do that now with two wait macros so let , do that let , actually"
      ],
      "lecture 06-Q07": [
        "ok so how can , do that well let , give , a sneak peek of some really fun stuff that , can do with single programming and in fact , be do some of this stuff already so how do , think , be that when , press ctrl c , process just stop and the answer be that actually the kernel support a wonderfull idea call signal and what be just happen to put , poor little process be that , say send , a sig int , generate a cig interrupt and the default behavior of that be to stop the process and of course , could find this out use the weight pid macros here be another one if , write bad code and , try to read write to some invalid memory location , get segfault or a cig i think a sig fault sick i notice i notice let , let , delete that that"
      ],
      "lecture 06-Q08": [
        "hi so let , review some idea from c code first of all what do , think the size of char be \uff1f at this point , say oh now i know this one easy the size of chart be define to be one yes the character in c be actually a fundamental way of how , talk about addressable memory and so that be kind of the fundamental unit of one item that , can read or write so that be define to be one in c code and have a look at , suppose one someone say the follow , have get x what be x , be a pointer to in , and , have initialize , to hold the follow value now , choose today to write that as a hexadecimal value but , could have also just use integer just a regular decimal integer as well and then someone say ok so what do , think the value of x plus one be at this point , need to say oh ok hold on a moment i know about pointer arithmetic and x be a pointer so when i try to move leave to right by use point arithmetic",
        "down to strcat , strcat be immediately go to find that nul byte and say ah - ha that be where i should start from the last thing i notice be that return a type of void pointer a void pointer be not be not scary , just mean i want to point to some memory but , be not go to tell , what be there i just actually really only care about the address the actual piece of memory that i want to read or write to later right now , be not go to declare a type ok so let , return something there and will return say this be the piece of heap memory that may be allocate or the memory that , give , that be there so the code be write assume that if , be give valid piece of memory that be large enough , could now modify this code to actually calculate the new length of of the old message there plus whatever pende and possibly create large piece of memory for that"
      ],
      "lecture 07-Q01": [
        "hi welcome to lecture seven so , be go to look at how to build a shell how to play with signal and how to review some system code so let , start with that here be , first little problem here be some c code and , want to see if , can spot any error in this so let , go through this and see what , see if , can understand how , work what be try to do and how , may improve , so what do , see ok i get , little pen go right so right i have a , method here main method and , be check to see if oxy be not equal to two in other word this little program that expect , own name and some command file to run ok let , find out what that mean in a moment and so the usage here be not correct what , want be the first string argument so i could have write argv of zero there because remember argv , point to a table of character pointer and then ok good , do not continue",
        "so , now have the exist the original parent and an exact copy of the child so both of these be go to return from fork so now , have one piece of code but two process be run and now , can make these two process start to do different thing , have the same history , look behind , all , variable be the same , get the same open file but now , ask each process to evaluate the following if not fork so remember usually if , be the parent when , fault return , get the parent so the child id but if , child , just get zero as a result so this be where the pound and the child process be go to diverge go to do different thing if , be the child then , return value or fork be zero so this result be true and so the child do the follow maybe if , write production code would actually document",
        "all right so , be go to pass this to bash be this the right way to do , be this be how , tell bash to execute a line of code interpreter line of code for , well not quite here be here be , first mistake that i would like to change here be that remember , have to specify the first thing twice this be the name of the file , have like to find on the disk on the path somewhere please load that in and give this little child processor head transplant stop run , code in one that instead and then , well actually say what the process name be go to be and so typically that be the same thing so typically , would write to bash here as well as , fight , a second time ok now bash may need some argument to tell , to actually execute that so let , come back to that a little bit and check that ok this be good , be terminate argument be verbal argument with null pointer"
      ],
      "lecture 07-Q02": [
        "to send a signal to , how do i do that well i can call kill sir let , go have a look at that right so if i type man kill i get the wrong thing i get the thing that i can type on the command line so as , can see in the top left and right hand corner that , be actually in section one of the manual so that be great if , be try to do something from , shell not so great if , will not actually program c code ok so let , get out of that ok let , have a look at section two ok this be more like , so now , can see , need to process id and the signal that would lead to set ok and there be more stuff , can do with , alright so i will need hash include signature h so let , go back to , editor and"
      ],
      "lecture 07-Q03-05": [
        "colonel please generate a cig alarm for , in exactly four second time or close to four second time alright so , first challenge to , be what be the secret password that , need to enter so quickly read this code see if , can read this c code see if , can workout what each part be do because , have only get four second to escape this little while loop to get the password right if , do get , correct then what happen next well so , do port s alright so let , continue line so presumably that be probably go to be flush out if , just in line buffering mode and then , call exec and , be go to ssh ok so , wanna find ssh that be precious name and then , be go to say hey ssh , argument be an essay backdoor dot net let , connect to that and finally of course no point yet , do not expect that to return , expect , process"
      ],
      "lecture 08-Q01": [
        "world right now where , just get a single stack a single heap area and as , make more complicated program these be go to expand , heap expand as i keep call malik and i never call free , stack expand downwards as eye for example keep make lot of recursive call right so , will learn more about stack and how , represent thing on the stack in cs two thirty three for now let , just realize that , need a space for the argument for the return value for , original program counter so the cpu can go back to do whatever , be do before and anything else argument maybe return value as well ok so ok so immediately above , have nothing in practice the the operating system may include what be call"
      ],
      "lecture 08-Q04": [
        "hey system i need to increase , data segment by that many byte ok so , will call , s break with say four thousand ninety six byte over many , need ok add will wait for that to return system call can be slow so this may not be the fast memory allocator but certainly be the simple ok so will wait for that to return to give , some more valid memory location and then when , return like i say , return the old address so great that mean that if , have just increase , watermark here , go up to valid high value that mean that all of these previous address be now mind right into so and since there be break give , the old value of datum segment",
        "ok so i will just however just check to see if if , fail esperat return negative one when cast , as a void pointer if , fail if , refuse to give , any more memory case so in that case , should return null because that be part of the malloc specification wait just a reminder what do void pointer mean , mean , be a pointer but , be not go to declare or i do not care i want to keep secret exactly what , be go to store at that location and void pointer can be cast to other kind of pointer implicitly so , do not need to explicitly say cast that to another type ok so yeah , do not care about what this pointer be just simply or what be go to be store there just simply that if i want to compare , to get negative one i should cast out first"
      ],
      "lecture 08-Q06": [
        "to use so actually this do not take very long at all , be just go to allow , to stay live in the same place and , can now go two hundred foot out do not worry about , if , turn out however that realloc can not play that quick performance trick realloc will copy all of , furniture all of , byte into the new location and then tell , where everything be be move to so , be important to use the return value of real if everything go wrong then realloc will just return null and have not do anything with , at the old old allocation ok oh more less common be that if , do actually move stuff to a new location , automatically free the old memory that , have inside the heap so let , have a look at how , can use this right so let , have this accessory leg ample that time , be read in some value perhaps and i do not know how many i have so how",
        "the actually , will never go to grow this array anymore so , could be a little bit more efficient with memory , could say hey by the way , have actually change , mind the actual space i need be no long capacity but just before i return i now know i need exactly this amount of space so this allow the heat to reclaim that unused extra capacity at the end that , and i know , will never use for particular program ok so , have get little program now , 'd have to store the datum on the number item in in a data structure , have now get away to read in value and to efficiently use , heap memory ok the last thing , do not do be too if , want to write production quality code let , see if , add up failed so i would have another pointer in here ok to see if",
        ", could handle that and exit or something right so if there be no no real to memory , better stop otherwise hey let , update , datum point that key and , will notice , be not write any kind of cast in here so i be some people traditionally like to put cast here because , be change the type from a void pointer to a double pointer in practice i find i do not like to do that i think , be necessary and be lead to more visual clutter when the most likely mistake be to accidentally request the incorrect amount of memory so i have much more other kind of like this coder stand out where , actually think about the exact number of byte where , be request ok so that be , example use of real ac"
      ],
      "lecture 09-Q01": [
        "ok so so great now , have get this type , can have pointer to memory and also get appoint a memory i can talk about the entry at that memory in particular , point , pointer to some boy to memory that the user can use and how large , be ok alright so here be the game plan then be that , will have these little entry , little metadata entry and when i allocate some memory i will make a note of that i will set the pointer to point to some memory and say hey , go there be some maybe on the hit that , want but as , can see that , have also have a next pointer which would point to , next entry so , will not decide where to put these yet so let , just kind of keep this conceptually as a separate from the actual heap memory that the user see an that will have another piece of memory that the user be use or not etc etc so great use little next point be go"
      ],
      "lecture 09-Q02": [
        ", would be an error just to return the actual pointer to , metadata because then the code that be call , would overwrite , struct instead inside , struct , have get a pointer so let , use that let , return the value of pointer that will tell the caller exactly which piece of heap memory , can use so that be all of account that , be go to need for first part of malloc alright so let , go back to this line of code here and let , talk about what , be do so , be say let , look at the current size each time around this loop of this entry and see if , be less than the choose size ok now , talk about this code be that first of all , have get an ore here so by short circuiting , be only go to evaluate the right hand side of this or if choose",
        "on the heap here be some code that attempt to do that what do , think of this alright so let , take the size of , struct notice i do not put an astrex in here that would be that would be mistaken if i put a pointer here , 'd only get enough space for four or eight byte how , make a point , be so let , not do that ok , cut that away there , go instead will actually evaluate this to be say that twenty four byte or thirty byte however big be little structure and then , be change the size of , heap memory here by call s brick and that be go to increment a high watermark serve this be the amount of heat member , have get so far in , hip , have just increase , by say thirty two bite and , metadata choose be go to be"
      ],
      "lecture 09-Q07": [
        "be always go to be the metadata i just need to therefore subtract off some magic number to get to the start of the metadata so if , give , a void pointer that i perhaps just need to go back sixteen byte or sixty four byte or however big the size of this metadata be and how can i determine the size well guess what there be something call size off so i just need to write size of the metadata , be not about metadata out in full but the metadata entry type will tell , how many byte that be so i can use that to walk backwards ok so let , have a an attempt at write this then right so here , go right so i give the use of pointer here and for that",
        "first way let , get those c standard people unhappy and put the compiler people be happy so if , give , a user pointer that be non null i know where the metadata be , be go to be the follow location so , , meter datum entry type ok be , pointer right , will take , user point to add i just need to pull back a sweater with ice so , will say minus size of ok and then that type so a meta data entry type but , be say hold on a moment this pointer , be start with this user pointer , be avoid type that mean that , be not declare anything about what be actually at that memory location and if , read the",
        "be absolutely correct however or modern compiler gcc clang and other do support this be the following extension which be , can add and subtract avoid pointer and if , do that then , behave like character pointer and in particular , be add subtract byte off this memory location so , be walk back exactly the right number of byte in this case because of this type ok so now , have get that now i can immediately say thing like alright point p i know , be look at , meta datum entry so now let , declare that this entry be now free and then i would write , code to the block coalesce sing by check , neighbor left and right to see if either of those be free and",
        "for a moment that , memory no long be of bite but imagine , could put some transparent paper down on this with show enough space enough byte where each one of these entry be a major datum entry type in other word be enough space for two integer and avoid pointer so and , start off with a pointer that be look at the beginning of the user area but , have just cast , so i can walk backwards by one and so i get now to the real metadata entry and now i can free , up and do that all that other good stuff so that be kind of a different way of do , the trick of course be not to confuse these not to mix these up and to be very very sure about , pointer type because , do not want to accidentally subtract"
      ],
      "lecture 10-Q02": [
        "at this point ok so here be the kind of wonderful thing be that i could make a pointer to any memory i want and declare this truck there so i can say ok this be , , new entry here and that will be where , exist data end so what would that look like well , may look something like this what do , think about the follow , have get the exist entry entry , be currently talk about and i just need to go to the end so that would be ok that be go to be just know size ok right whoop this be a great example of forget about pointer arithmetic the type here be not a void pointer , be pointer to one of these entry strut so , be not add just one , be add a very large number here but this"
      ],
      "lecture 10-Q04": [
        "to write , , lock code now always with regard to these sixteen byte boundary so conceptually now , be go to stop think about , , , memory in term of byte for the rest of , malloc code i want to think about , now as all of , distance and space be actually go to be conceptually sixteen byte so now when i do any point arithmetic or talk about size , be go to talk about , anymore , be just go to actually think about , in term of these block where each block be sixteen byte wide and if i kind of keep that convention then , start to make , , lock code a little bit easy if , have kind of declare at the outset this be how , be go to do , then i do not need to worry about , when , be do internal memory pointer"
      ],
      "lecture 11-Q02": [
        "to do anything on , program for potentially along time and in fact the colonel will give that cpu to another thread that would like to run or tell that can not cpu core to shut down and go into low power mode ok so pthread_join can take a long time right now how do , say if , actually inside a thread hey , be do i do not want to do anymore ok so for this , need to say , 'd like to exit please so \u00a0  pthread_exit right so the peace road exit be the last thing , thread will ever do there be no return from p thread exit , be do , cpu cause ok , be go to wash , hand of this thread i know that there be nothing else be go to happen so p thread exit be a one way ticket do not try to execute anymore code after p call",
        "let , call , say , to continue that silly idea at some point i want to quit so i would call p thread exit by the way if , return from that function in other word if there be no more stack frame then that be equivalent of call p thread exit so i may have some code in here this may call other function call air from that cause g and that cause premier fanatic or something else etc , open file whatever but eventually if any of these call p thread exit then all , return from here that thread be do ok so there be a bit of a kind of mind moment here that i want , to realize that now , write code on a page but , be important to think about which thread be actually run that code and of course by default",
        "start up in all of , program which execute maine and , be up to , then to create additional thread when , want , so and just like rp for example when , return from maine , also finish out thread however the one exciting piece of news be when , return from maine that kill that be the end of , process that be the equivalent to call exit not p thread exit but process exit and when , do that everything disappear all of , other thread disappear ok so i think , be time for a demo soon but first of all let , actually kind of have a look how , can use p thread and detangle this ok so let , have a look at what the manpage tell , and , will see the follow kind of thing so let , for example take care p thread exit and type , into man page ok so man p thread x copy so",
        "the cpu hey please start run this particular function and the kind of function that peter support be something that take a void pointer and return a void pointer so hopefully this be no long look quite so so gnarly right so , can see this return a void pointer and take a void pointer , still look pretty awful and that be because , be a , function definition in c so let , talk about that when , want to talk about pointer to function first of all just write down what kind of just imagine , be write down the function declaration so for example suppose i want a function that , turn a double ok and , will call , calc ok and let , say that , take a double ok right so that be , function declaration how can i now create pointer that point to these kind of",
        "have to do be put an asterix before the name and surround that with parenthesis so now , can read these thing right now , can see oh , want to talk about pointer to function and the kind of function , care or once , take a double and return a double and that be exactly what , have here for a start routine , want to talk about function that take a void pointer and return a void pointer now the take and return avoid pointer p thread do not actually care about those value , be for , benefit and in fact when , say hey colonel please start , other function for , on a new cpu core i want to be able to pass something into the start routine",
        "hand over a pointer to say when the cpu finally start , mining function or whatever , be go to be give , this value as , parameter so eventually when , start routine actually start so , do not know when that may be , may be the millisecond time or , may be practically instantaneous but at some point in the future , , know that the function take a void pointer and so this be the value would like to pass in ok and the return value that be go to be the exit value from the function so if the thread never call p thread exit , return value will be the thread exit value ok so let , go and actually kind of demo demonstrate this now right so i need a little bit of a program ok so here , go right here be , very first program this time , actually use the exit success rather than say return zero , do not need to wait",
        "with threat so i need of course the preferred library so let , include that hash include p thread to h , get that from the band page now let , have something which actually run separately ok so let , do i know , have to return a void pointer and i will call , let , say hello alright and key and , know , take a void pointer right so what should , little program do i will make , little thread wanna do a big calculation yeah , will get , to just call sleep for a second ok and then , will get , to say something so how about , call printf from here and , can say right hello what so now , need to make , to to finish what should ,",
        "return say null alternatively i can call p thread exit now so , be equivalent statement nothing happen after this point and , be important to bear in mind that anything else any other thread that be run will continue to exit , be just that one thread that happen to be run this hello code ok right so , could now start to kind of create create , thread here so let , do p thread create and at this point i need to give , a pointer to a thread id so i need the address of , little variable here will make that in a moment the next thing be the attributes and i do not need any of those wait be that the way , round let , check yet the attribute yet and now , need the function pointer",
        "pizza create and many program unfortunately in the world today will work by accident so the fact that , happen to run because , happen to be wait long enough do not give , a nice warm fuzzy feeling inside but unfortunately today many program real program in development and actually in production i have little delay loop in an attempt to , to make sure that , work right but as a ui uc student i hope , can do well than this so let , actually now do a well job in this sleeping for two second , want to make sure that , wait for both of these thread to actually finish so how can , do that ok so let , do pizza hut join on right and now i need to say the on the thread that i want to join about so , be go to wait for third one ok and i need a k return value on and",
        "let , have a look at p thread joint and p thread join and , will see , take a pointer to a pointer to avoid star ok so the idea here be that , actually give , some memory that be go to write into so here be , voice dial pointer ok return value one here be another one ok and , want the address of these variable because , be go to be change ok so just to kind of see that , be be change let , dump actually look at , value so i can say thing like printf right return value one be now if i do percent p , can get thing print",
        "and so , can now will only print out return value after both these thread have finish ok so let , compile , ok well run , after a second , both run and , will see oh , get return value of zero zero now do , believe , hold on a moment maybe that be the arbitrary value of these before so let , prove that , be work let , let , return something here ok so why do not for example i make i return ok i can return x deadbeef ok but i can not spell there there , go and , will say here be an integer hexter write in hexadecimal notation but i want , to treat , as a memory address and ,",
        "ok after one second , both finish what return value one be zero what do , do ok so see void pointer why do that fail be a good question wait oh because yes do , see why ok , never get to return statement yes , p three at exit take away , thread never to return ok so now let , prove that dead code here right so i well spell that code as a hexadecimal value ok so let , let , see if if , can make these thing",
        ", be just care about the first character if that first character be eighty because , be tomato i want to run down here ok wait so let , run this now ok clear ok and ok sure cast , right ok ok so after one second great now , have a return value of dead beef and if i be to look at the other one , would see dead code so that last part of , demo right case so return value two be ok there ok right so one thing i hope i persuade , be that yeah , get deadbeef here and dead code there ok so one thing i",
        "thing at the same time , have get one thread over here call function printf and all that kind of stuff independently because , have , own stack , own thread of execution so that thread have , own variable call message and there be another thread with a different stack with ok so different part of memory that take a different argument an run to a different sort of execution be go to end up in p thread exit so just kind of prove that these variable be live in different place let , actually print out the address of , local variable here so , message be at let , actually look at the address of of , local variable so there , go message there and just to make , life a little bit saner let , put some new line in here as well ok so now , be go to look",
        "stack be of these different different thread ok so let , clear this compile , ok right and , will see that , live in different area and if if , do a bit of math , could actually figure out how space apart , be and first impression be be that , be actually not that , be not space apart that much actually so be careful just how much recursion , do on these thread ok so write anything result , want to say about this , see how , can return value and then obtain those value while np thread joint there be one common culture and let , make a typo here so some common typo be the only time , need to take the address of a thread id be at the beginning here so in all the case all other case , need , value",
        "on one of these line so for example if i do peter create here then , have lose the the original id and i never set td two ok so let , run that ok and now , will see that , have get issue here that return value be not correct because , , be not wait now on on a valid thread id and in fact the behavior can be bad than that , can crash for example right so be very very careful if , be just copy pasting this kind of code much much well to have raise and and and be very careful about about typo when , copy paste code alright so , have make , first program that can run two thing at the same time in"
      ],
      "lecture 11-Q04": [
        "a process , have see example where if i call exit or if i return from main then the whole process be do and of course if the process disappear all of the cpu thread be go to disappear as well because now , do not have any memory for , to run on versus a thread , see how , create , and then destroy , through either p thread exit or by return from the function , will just say the starting start function from return from the start function where basically where , originate , so once , stack have go to zero or , be , be do ok the , can have many many thread inside one process"
      ],
      "lecture 11-Q05": [
        "yes , have difference between exit in p third exit ok so this stop the entire process and give the process at exit value pizza exit just stop this to one thread now be that thread happen to be the very last thread then then the process will finish uh ok so that give , a reason sometimes for call p thread exit inside , main method be a way to be lazy let , let , go have a look at this so if i have a program that start many many thread be case so imagine ok there , go i start many many thread here i could write p thread join and wait for , all to finish i could put that"
      ],
      "lecture 11-Q06": [
        "ok so for way that thread can be terminate right so what do , get so , may have that the thread call p thread exit , may have that the thread return from , start function ok what else so the other way be that a thread could be terminate as if , terminate the whole process so that may happen gracefully for example any thread , do not need to be the main thread any thread call exit for example the main thread return from maine so those be equivalent the main thread , turn from maine ok ok anything else well how about a signal so if a signal terminate the"
      ],
      "lecture 11-Q09": [
        "ok i bet , be wonder how many of these language record well actually , be go to do , for now but if , do not actually have a go pause the video and see how much , have retain and use the manpage to actually have ago write this honestly , will learn more if , try , , but for those of , that actually have have to go let , let , see how far , get so , be go to try to do this quickly alright so here be what , need , need a main method , be go to start with a new program let , meet hello world ok write some thing remember first of all , need what , need the peace red library so , p thread dot h and also remember when , compile , to set that flag as well so , will need standard i oh ok right and i need , little run a method or case so let , have , little program call say shout right except , need to be something that p thread can understand so let , make , a void pointer and take a void pointer be right so what should , shout",
        ", can shorten this code to just print percent s and then , arg let , and let , k let , do rather than have a new line let , flush and , out today just to prove that , can do normal c code there be nothing special different inside these thread compare to the main thread for an important idea be that all the thread great equality there be not an idea of a parent and child relationship any any thread can join another thread any thread can create new thread , one big happy clan of thread ok so , have flush something else and now will exit so what be use pthread_exit just practice ok so , have get something , can shout stuff out great now i need , main method so let , not declare the argument today will be a bit lazy and , want to call shelt so shout hello right and then shout",
        "the function or be that be that the right way round let , check to , man page , go pee thread create ok well , find k , be the thread then the attribute so yes that be correct so now and then , say shelt right but , do not just pass the argument there no , be go to say hey pthread hold on to this pointer for , and give , to that shelt function later when , actually find , get , get around to start , ok so there be one and i want another one that be go to say world so the second id well go in the second slot so let , add one and address point arithmetic come to the rescue rescue and i want to use that trick of just say p thread exit here so i will never return from maine ok never return so so exit never happen wait"
      ],
      "lecture 11-Q10": [
        "there , go but instead i prefer the kind of use the array syntax instead and , want to find out what the thread exit with so here be the address of a variable that will take that ok between , and , , know that , be go to be exit with the value of null so , be just go to write not into that that variable there alright so let , run this and see what happen ok so i need to compile , k wait let , turn , off right so gcc one hundred and do not forget to say oh by the way compiler , be use p thread great , work less , run , all right and , produce lot and lot of output wait a moment today really do , really get a hundred"
      ],
      "lecture 12-Q01": [
        "where , be very simple wrapper this piece of gift wrapping here that do not do not care about the parameter and be only job be to actually delegate all the work to this recurse function ok so , be go to call start and that be the last thing be the parameter value that be go to be pass in when , do finally get round to start a new thread will go in here so that null be go to be the value of this pointer if , have say something else like an address of a variable again that void pointer would have take that address ok so great , be start three thread and then after that loop , be go to call p thread exit and as , know what do p thread exit do ? , be the point of no return , be the one way ticket to oblivion for , poor little thread and in this case , be do , on the main thread which mean that , will never return from this call that be the end of the line for this cpu"
      ],
      "lecture 12-Q02": [
        "and as an argument will pass that heap memory and then , have get all of , runner which actually cause the rain on , display so , be go to run a little function call run and again i pass a pointer to , heat then , so , may be concern that , variable here image be actually a stack variable will remember , be not actually go to that particular variable , actually pass , value what be this value be a pointer be look at the heap memory that , , allocate here ok so yes , be use a heap stack variable here but that be fine because actually what get pass be the address of of heap memory of the mileage memory ok so anyway back to this , be go to create all of those thread , remember",
        "ok and here be , magic code to get the width and the height , see , be take pointer to , to integer and then i update i right into those location ok so back in , main method where be , , can say get terminal width and will pass in the address of two integer the last thing to do be change the colour so there be control code , consent to change the background color in the foreground color in the terminal ok so great let , run this right and , see ok , have get , initial version of the matrix , do not look quite as cool , have get a few way to go before , can win oscar yet but hey , be a start so let , let , improve this and when i hit control",
        ", see today need some kind of interesting noise , do not want very high frequency noise , do not want very low frequency noise and a guy call pearl in actually develop a noise function and write , in c code and that be now a very common source of noise for graphical effect so , look , up perlin noise or like i say , be the only a piece of code and , be in c to win an oscar alright so there , go that be , first piece of graphical code use a whole bunch of thread to run and feel free to play with this and turn , into something that look more like a matrix like the matrix movie i hear that the original coding of the matrix effect actually be base on character scan out of a chinese cookbook but that be why do not , kind of invent , own character"
      ],
      "lecture 12-Q03": [
        "hi ok so a couple of quick question for , so can thread access heap memory i think the answer right now , should know be yes , can so , be actually pass in some heap memory in , , previous code right so , say ok let , start or run method and , can see , be get the right signature to be give to p thread < br > create and , pass in pointer there , be initialize a stack variable which be go to be individual to each thread unique to each thread but what be , pass in here remember , be pass in that memory that , malloc'd on the main thread so if , go back to original code over here right , first of all , malloc'd < br > that memory and then later when , call , runner , be pass in a pointer to that memory so yes of course , can access heap memory and , could even create that heap memory on a different thread there be"
      ],
      "lecture 12-Q05": [
        "right and this be definitely a very hacky way to do , so here be what , will do , will have a little loop here and , little loop will know when i call pizza create i have to pass in a void pointer but what if that void pointer actually be just the y value in other word somehow will take the value that , want to give to a thread and convert , into just the void pointer type so , be literally just cast , pretend that the value zero be a memory location pretend that value one be a memory location etc so , be not actually pass in the address of a real piece of memory , be just convert the integer into a void pointer into a memory pointer , have to do the same hack when , receive this information",
        "to get a new cpu for , to run this calc one so what be calc one here , be ok and the value that , pass into hack here so here be hack which be go to appear here that be go to be pass into this variable here avoid point here and rather than try to dereference that no , be treat that memory location that address as the actual integer that , want ok so , be pass , cast , back into , so this be an exciting hack honestly , have no true way to know whether enter officially go to be as large or small than what can be represent by a void pointer i certainly would not recommend this in production code but i hope , can see how , work and certainly , will come across these kind of hack again in the future"
      ],
      "lecture 12-Q07": [
        ", be give , the address of why so , be not read the actual value of white instead , be say hey here be the address or something , may need and if , go and look at calculator here be what , do , say thank , for that void pointer but i do not want to avoid point i know there be an integer that location so let , cast that argument as an end pointer and the only reason i need to write , like this be just because peter create create require , to have a void pointer argument and avoid point of return value so great now , have get an integer value at that site interpoint sure i know there be never there so let , read , so that be the purpose of line ninety eight , have get , that y value from the for loop and then i go ahead and calculate all , pixel so what do , expect to find that memory location ok and here be the problem that now , be talk about multithreaded program so , have get to main thread",
        "be create a thread be do a test , be call sdr delay so this value of y be go to change as fast as , possibly can ok meanwhile , be go to ask to create a new thread so that new thread will read that memory location read the value of y as soon as , can but , do not know when that be go to be so this all this print s stuff and sdl delay the reason that appear to make , program work correctly be simply because , be slow down this loop so that be a great chance that when the thread create when the thread start , would actually see the intend value of y however , be not certain and in practice , be go to see thing like two thread see the same value of why because of when the increment happen because when the value of y change and as , see uh there be no guarantee that that thread"
      ],
      "lecture 13-Q01": [
        "save , heat memory and the number of byte , have manage to download here some number between zero and two thousand forty eight k will talk about f right in the future but , just want to save , to a file but , have do that be always a good thing to close resource so let , say ok now , be do with this file and finally let , get out of here so how do i finish , thread just by return from this function so may say return , memory if someone else want to use , or i may equivalent discord pizza at exit remember , do the same thing but , say that this thread do not need to run anymore ok great so if i run this , have get a potential race condition can , see where ok so , race condition be that , main method may",
        "why i always wonder why that percent k thing say i do tooth p thread id two and here be the address of memory two so great , have do that and now now i i can do whatever i want with that memory perhaps at some point however i should fit ok so let , free memory one there , go and similar for for two as well so ok so now go to a program that will wait until both do download have finish but the great thing be , great , be do , independently now , listen to text here so this should be two way for these story to complete yeah the other way would be just in , main thread if that be the only thing i want this program to do be i could call p thread exit and the the word , be ask , main thread to not do anymore work ok so i go to say pizza exit null and",
        "ok by the way this twist , create can cause create , own thread right i get to question for , let , go look at this code at the top here suppose someone say , will hold on a moment , be kind of confused because be not there a race condition as well with this this malloc and the fact that , have get , have get a stack variable here i mean be not , possible that both thread may end up use the same piece of heap memory so can , see why that be not true why be , that both thread will always end up with , own heat memory why be not , say that , do not end up share this mem variable k so why why be , that , both get , own heap ok so some thought that hopefully go three of , head should be something like list ok so first of"
      ],
      "lecture 13-Q09": [
        ", never free so i that be appoint to some global memory or like a static variable or this be generate billion of million of bit of heap memory that , never free so let , go see look at , implementation ok so , go right so here be , implementation of two text message and , will notice that up above this , have get a couple of global variable here , have get one call message that take up to two hundred character and there be , kind of please stop as well right so let , have lot of all , do ok take a two and a form and some value ok right so , call s printf so s printf be like printf but what , do be , push the result into some memory so here be where , be",
        "what else could , try well , could change , text message to actually return some memory so i could say get , some some heap memory so i could say ok , love , some memory here that would work , now have to update the rest of , program to make sure , free that memory the downside however be performance that if i i really care about this being as fast as possible always allocate more memory for a result may be fire in , c plus plus program but if , truly care about good performance call malloc every time , want to do this be go to be slow right so what can , do well one option be to declare that this use of this message be part of a critical section and",
        "be , be not just , be not just in here where , right into the memory and return , , be all the time between when , write into the memory and then , actually use the content so if , be to look at , program that would actually be right here where , get the result from to text message and then , actually use , so , actually when print f run and take the sequence of byte at memory location right so that be the first part of , critical section the other be when , also want to overwrite , so that will be inside here , do not want these two piece of code run at the same time ok so how can , do that and so a mutabal the music 's let , get , mutex to rescue this code all right and make sure that only angrave win a million dollar and jurassic park never see , money ok"
      ],
      "lecture 14-Q09": [
        ", be mint money now right oh wow ok so , have a bit coin right but , be not fast with this mining rate i think , be time that , bring some thread to the rescue so let , have a think about how , can make , program go a little bit fast alright so what do , get , will notice that i be different search range here and so i could take these three line and run , just with different different thread and pass in the start and end point as part of some information and , be go to send to , p thread so let , have a look at that alright so here , be , i get to start now three thread be call , pizza at exit and , be ok and , be go to pass in a void pointer"
      ],
      "lecture 15-Q04": [
        "as well but i would have to be a lot more careful about reason about that so , be go to use p thread condition broadcast just in case there be multiple thread go to sleep , want to make sure that if , be only go to wake up in that transition that , work , all up so right i i think , can now continue and will write to the next one so the pop ok so what should , pop method look like ok so first of all let , write the code which be go to return value k so , turn , v where do become from , be go to have something like double v equal so i go to , way now i want to pre decrement , value of n there ,"
      ],
      "lecture 16-Q01": [
        "can see that , two two thread still sleep ok so what be the problem here , do actually wake , up look , work up after , tell , to finish but , do not escape why not the problem here be that yes , call broadcast but then each thread notice that the java store zero so , exit each thread exit pizza condition wait but then when around the while loop and say oh look jar be zero what should i do , will go back into , water loop and wait again ok so what be the fix here be fix be to set to check that , should be run so , lose game run ok be true then , can go into this otherwise , want to"
      ],
      "lecture 16-Q02": [
        "kind of bit copy so these value may actually hang around inside this memory so what be important though be be to understand that where , be read and writing from this ring buffer be control by these two little pointer or there be two little index ok now in practice , be not actually go to write buy some some circular memory instead , memory be linear ok here , be an so let , put aside some memory for example sixteen sixteen little slot in here so i can keep divide this up ok so now , have get sixteen memory location and , trick for make certain memory will just simply be if i fall off the end here then start at the beginning so , be perfect for all the people that believe in"
      ],
      "lecture 17-Q05": [
        ", will get stick until , four other thread for other friend and colleague have also call p thread barrier wait wait there be one little kind of fun thing by the way about pthread barrier be that one thread will get a magic value here call p thread serial thread and that be useful if , want to do if , want one thread to do something special all of the other thread after return from p third barrier wait just get a value of o ok so if , want to annotate one particular thread to do some special just take that return value see if , return this and , can then say ok special thread , can go off and also download this other thing or perhaps save something so for example be quite common that , may have multiple calculation thread and then after , have all finish one thread , have"
      ],
      "lecture 18-Q05": [
        "ok right so let , analyze this challenge ok so , have get a global variable call firework here and inside , main method , be go to do , be go to create a whole load of pizza , be ok and make a note of , thread i ds pass in the firework function ok and then after , have do that , will set firework equal to one and then will call precondition signal so , know that be go to wake up one thread now , want to wait for all thread to finish here so i could write a for loop to call p thread join on all of , thread i ds but i could also be lazy in to say ok pthread less exit the main thread so that , never return from maine so i could call p thread exit here key right so great , have implement that now actually let , have to think about how , can implement the firework right so what do r firework do k right well"
      ],
      "lecture 22-Q01": [
        "send , and then , send , back great so , could use pipe now to do all sort of fun thing for example perhaps if , have get a child process , be run that child process could start send , result or perhaps if , want to shut , down , could use a signal but , could obviously use a pipe as a way to control , so for example , send maybe a quick message or perhaps , send job to that pipe ok so , be quite often however , want to be able to send more interesting datum than just kind of hello so briefly talk about how , can do that right so there be two easy way to send more interesting datum"
      ],
      "lecture 22-Q02": [
        "k so that be the second remember yes read write and watch , say well let , give , the address of one bite do not matter kind of what , be but how about just this little so the string literal meaning , have that be get an address an i just want that single character gay so let , increment , counter here key bite send and if i wish i could check the right actually work how could i do that well let , just check return value of right mean that this well be actually equal to one ok so let , run this and see what happen on , mac how , linux system may be different but , will see how far , get before , block . ok , so , save that ok so let , compile , . ' pipetoblock '"
      ],
      "lecture 22-Q03": [
        "say printf write byte send k percent , , be write k and that be how do , line in here right so will ok size t but , be be ok key let , see if , ever see that actually appear a case so off , go that be compile this run , and see , never print out anything alright never return , get a signal and that be the end of , if i want too i could use all of the wait macros to find out which signal kill , program but notice this time the kernel sorry the shell do not actually print out anything useful to say hey this be a child process actually"
      ],
      "lecture 22-Q05": [
        "right so if i then call fork to make a child process then the same number child process over here the same integer number here , go right refer to the same kernel object so here be the wonderful colonel up here with , view on the world , view of all the peripheral view on what , need to send out of the network code to the disk etc etc so , have get , idea of a file over here the kernel , have buffer and also , will have a file position as well so for random access file ok there be some kind of positioned associate with this and , can only discard this kernel object once"
      ],
      "lecture 22-Q08": [
        "ok do i have sound yes ok so last thing , do today be actually kind of put everything together that , have see so far and talk about how to make a real auto grader so today if , would write an order great say in python , would not necessarily to make , own pipe but guess what python , be make pipe for , so here , go let , see how , work and this be actually base on real cs two forty one code here that , use to test some program and i want to kind of notice that there be some kind of production quality inside here that , do ashley thing like check the return value of , system call so let , check the pipe work now if , fail or , be go to do be just quit this little kind of error function error message but at least , be check to make sure that everything be truly truly work now when , be go to create a great i actually need three pipe i need one for standard in one percent without one for standard error ok so to create all those pipe here be what would do , give , an integer",
        ", be go to play with and then that be past the address of this little away into , create pipe and each time , be go to call , pipe command back up here ok so i end up with now three pipe ok sue now , alternator have to use fork so will do the same thing again here so let , call fork but if fork fail do not just try again now , want to quit with some kind of error message so that be the same kind of idea as , piper quit let , just rap the system call with quick test ok so the child process be go to become the actual executable that , want to test so down here be when , actually call exec and , be go to say ok here be a program name that , want to run here be all the argument and"
      ],
      "lecture 23-Q02": [
        "now look up mem copy to find out how to use , ok so ok clear and , will do man mem copy ok man and copy let , try that right and , see , take this destination first alright great ok so back to , code and if i rely on the c compiler i can just there for provide , buffer be either a void pointer or character pointer i just add these two together to calculate the correct address of where , where , want to write to ok so let , do that right be this due to do can i know i can not ok as hope i could just draw square round this stuff to get rid of , ok"
      ],
      "lecture 23-Q03": [
        "open ok and of course , be skip any error checking for brevity , so once that complete i now know how many file be go to load from this file so great put aside some memory so let , get some heap memory hey calloc give , and then how much memory do i need well , be go to read number of point and the size of each point be the size of , struct here do fantastic see how easy that be compare to mess around with scanf and try to read floating point number , be go to directly just work with these point so now , have get , memory again i can use fread directly so hey fread please read into the follow location so i do not want the address of , variable now because , point variable actually point to some heat memory",
        "ok third , have not actually check the return value for f f read , have just assume that , work ok , be kind of a dangerous assumption so fread do not return the number of byte read instead , return the number of item actually read and , have tell , the size of each item so in this very first call to fread , expect that this should return one because , , ask to read one item in , second call to fread , expect that this should return num point ok so well code would actually check that would actually check that , successfully read that number of item and then do some error handle in the case that , do not so for example if , do not actually successfully manage to read one item into here then , can not even trust that none point be correct maybe"
      ],
      "lecture 24-Q03": [
        "ok let , review this one what do , think the follow code will print ok so how can , analyze this right so , have get a pizza , create an , be store somewhere the fed id 's and , be go to say ok i want to thread that be go to start function and let , start function be and , be go to pass a void pointer the address of the string literal so the address of the capital a and address of the cadillacs to each one right so what will function be do function be then get this pointer and so , be give , the address of xyz so when this run and , be not quite sure when , will run , will print out xyz now what about function a so functionally when , run let , see be give the address of abc ok but , do not do anything instead , just simply exit this thread and , return an address so , take the"
      ],
      "lecture 24-Q06": [
        "to the write call here , be and , will see that k , have get , standard right , have get p right , talk about a little bit which allow , to include an offset there be even another version which allow , to assemble right use different bit of memory so rather than require all of , datum to be in one contiguous area , can use this more complicated version to say ok take these bit over there and those bit over there but , will not , will not need that for cs two forty one instead let , scroll down and will just 's notice a few thing so first of all light that , see the right mac great right few bytes then request ok so , have get to look at the return value and also if , fail then if , succeed then , get the number of byte write or , get a negative",
        "some point or gate right but , be just go to think about this what this idea about oh i be interrupt key so if , do not handle this then exciting thing may happen so perhaps , have write code that use same weight right so same way be suppose to actually wait until there be a piece of pizza available in the pizza box for as to eat but , just get interrupt and just return as , off so i can be bother to wait anymore right and so then , let , code continue oh idea so , have be oversimplify thing at this point , have not be write high quality code instead what , need to do be , need to check the return value of some weight and read and"
      ],
      "lecture 24-Q08": [
        "right while in here so while this be true key and let , grab the cold white as well as a side effect , ok so right ok let , call right so ok right here zafar descriptor but i do not want to start from the beginning of the buffer let , just use pointer arithmetic on a void pointer here ok , know compiler today will accept so well but take buffer plus let , add an offset ok right but the total number of byte , 'd like to send be also go to be ok let , take lynn minus the total ok right so that be the end of the great call this be , inner parenthesis cave and now the right , right"
      ],
      "lecture 25-Q05": [
        "create some heap memory for , with the result so that be what , need to get to let , think about how , can set up this hint object what do that look like okay so here be the plan , get to say what kind of connection , want do , want to say an ip four or maybe six or both do , want to set up a client or perhaps , want to set up a server so , be go to have to set those flag there be many thing in here however that , do not currently need and so the first thing that , should do be actually take , hint object so here , be ok and zero , all out ok so take the address of , and the number of byte that i need for this struct will be",
        "and here be the address of , result pointer which be go to be change as well ok so will getaddressinfo change , result pointer who know to be sure , well actually check to see whether the getaddressinfo actually succeed or not so , be important with all of these network call to check , return value so if , do not succeed then , result pointer can be point to anything game because , never set , maybe , be point to this smiley over here so a little bit more of a bus code would have actually explicitly set result equal to zero but certainly , do not want to assume that , be be set unless getaddressinfo return zero so if , do not return zero then , actually have a useful error function down here ga - get address info gai - underscore string",
        "to why this occur so , do not use errno this be one of the few time that be not use errno to find out what happen instead the error be actually encode by the return value directly ok so , have get , getaddressinfo now , can make the call for a socket to connect so rather than do that here let , actually do that as part of the live code so , can start write this ok right so yeah i be right the socket type with sock underscore stream so great , have get that now , be time to actually make , connection ok so i want to make , a socket so let , have a why , ok that be fix the indenting here right ok so let , have"
      ],
      "lecture 25-Q06": [
        "here , go one of the same thing now from , c code ok so , need to make sure connect to port eight thousand on localhost and i want to make sure , be request the homepage ok so that look pretty good right let , try this so , will see that , python server be be happily report all the thing that firefox have be request so let , break out of that now an run , in the background ok so off , go because now i want to start compile , code right so compile the client and run , and , see the beginning of this yes , connect , see a status message of two hundred which mean"
      ],
      "lecture 27-Q01": [
        ", to think about what be a thousand twenty four look like in hexadecimal so remember port number two bite two octet so , can have any result from zero or zero zero zero if , wish up to ffff anyway so that be a little teaser because , will see something interesting in a moment right so let , do some error checking remember that , get address for fail will use , own little helper function to print an error but , be also go to check the return value of all of , other network code as well and if something go wrong with one of these call , turn negative one , be go to just quit so , quick function be very simple , just print out the error no message together with , little message of what happen and , just exit so that be that be quick very come to civil program there simple simple function"
      ],
      "lecture 27-Q04": [
        "hi so let , workout how , can use real path to actually test something about , directory structure and for example whether a file be truly inside the directory that , care about alright so first of all let , have a quick play with , directly so here be real path and will see that , be go to pass in the follow relative directory so that be relative to the current path of , program the current path associate with this process and , be not go to give , any memory to write the result into so real path internally be actually go to call malloc be go to get some heap memory for the result which be why at the very end , be go to free , so , will notice i put a little bit of logic in here to see whether , actually would turn valid path or not will be play with that in a moment so let , get start however just as this and will compile , ok so just so , know where , be , process directory be here and",
        "but not only strcmp but strncmp so , will see how these be useful so remember that if , call sprintf nothing be go to appear instead , give , some memory , say ok here be some memory on the heap that , have already malloce and please write the string into , so for example if i want to construct path like i may say ok look at percent s percent s and this may be say the the root of where , be store all , file and the request from the user of to what particular resource , want that be great but i well make sure that this string that , construct be no big than the heap memory that i require perhaps i just want to be lazy and say hey sprintf can not , just get some heap memory automatically for ,"
      ],
      "lecture 28-Q03": [
        "ok right so here , go let , , start to look at two thing first of all the time of when , c code be modify and the time of the executable that , be try to create so in other word , be try to make make be very lazy i do not want to actually compile , program if the executable be already up to date on the other hand if , be not up to date then i i do want to call , compiler so here , be , be go to call gc but i could also call c lang or some other compiler and , be go to be a little bit lazy at , that this system call here be roughly equivalent to call fork exact some shell like there be actually very simple shell call sh ask shelter run the follow command and then wait for that shell command to finish so so that be go to cross platform"
      ],
      "lecture 29-Q02": [
        "ok so how do i figure out if something be a regular file or not alright so for this , be go to use stat right so , can do thing like say right if i know the file name i can call stat for example hey here be a mystery \" file \" \" m \" \" and please stat fill out , struct so here be \" the struct and what do that struct look like well , know , be go to look like struct stat and the struct , will have arbitrary value and let stat actually complete successfully so , well check to see the return value of stat this well be 0 to mean , succeed ok so if that be zero then great , know that the memory structure actually have some valid value right and how can i determine if , be a regular file or directory or something else ok so that information be store in the bit pattern of",
        "say this file be d i r dot c like no that be not a directory so great now , can tell whether thing be directory or not so that be go to be useful say if , want to write something recursive for example suppose , want to write , own version of chmod to recursively change everything from c code then , could quickly use stat to see whether something be a directory or not and the last thing , should try let , give , a fictitious file do not exist so no ok , will see that stat fail and then the error number that be set inside not return value but errno correspond to , be sorry that be not a valid filename ok right so ok so , have do that which be go to be useful"
      ],
      "lecture 30-Q04": [
        "so again do not expect to be able to create the subdirectory so that be , prediction for the three sorry for the six directory call , do by call make sure what about symlinks well , prediction there be the all three be go to be create let , go and actually have a play and run this now ok so , have a program call make der link let , compile this , will say use clang today right output meter link ok now let , run , ok so , do not print out any error but , will not actually capture any of the return value of those call either so , just simply run through ok what can , see here let , do , like this first of all notice that yeah three file call quick one two and three have be create the different color will see why in"
      ],
      "lecture 32-Q02": [
        "example suppose , be currently log into a share linux system , be run gcc or ceiling , be run say ls and , be also run a compiler that all of these thing will at least make some progress , do not have to wait for , very long compilation doctor complete before , can start or if , be use an editor like vim or something else or microsoft visual studio then list i can continue even whilst , be use some of the cpu time for , compile job then there be thing like real time system so if , be go to estero rocket i will have certain process and calculation which be time critical if i be go to use a piece of c code to control the engine firing"
      ],
      "lecture 33-Q06": [
        "way for file less than two gigabyte which be to call f seek so let , go to the end of the file find out where , be by call f tell and then go back to the beginning so by do that great , be now go to read all the byte but also i can get some heap memory as well so if taylor tell , how big , picture be and i can read all of those byte in one go just by call fread hey if read this be the number of byte i want please read , from that file so great , have read that file into memory and now i can write that as many client as possible so , now know how to set up , socket remember , want a socket passive socket , be go to listen ip four address today and here be the new bit of code though just talk about , need set socket opt to be able to say , know what if i restart , process"
      ],
      "lecture 34-Q03": [
        "for example sig child right to say hey one of , child one of , child process have just finish just terminate then actually if multiple signal signal occur then , process , may see only one single sick child event may see only one particular signal deliver ok so that be surprised and be careful about that bite , when , actually right signal handler do not assume that there be a simple one to one correspondence for example suppose i press control c multiple time very very quickly , be quite possible that , process , only see one sigint event the way to imagine this be to imagine that there be a bit field of all the signal",
        "be be set then signal of the same type would fall underneath that same same category or that same signal type ok so in that sense , be not queue right so let , go through some of this terminology first of all in term of create signal , say , be generate and signal can be generate in two different way uh user process can generate , so for example perhaps , may call kill for example and say here be a particular signal number that i want to be create or the kernel , can generate signal for example , have already see sick child which the kernel will generate when one of the child 's finish , have see sigpipe , have also see thing like segfault as well with the kernel would generate if , program try to read or write to an invalid memory location right before that signal aggregate deliver to"
      ],
      "lecture 35-Q04": [
        "at the time so let , let , turn off those signal that a low priority to , the other thing to notice be that look this look exactly like a function to a signal handler that , have see before , write this kind of function here be the name of function , be a pointer to something that take an int and return avoid that be just like , signal function before there be an option however to say , actually i want to know a lot more about the signal that actually happen so when , work with real time signal and other signal , can actually get a lot more information from the kernel about why this signal be create and what be go on at the time then door so there be a void pointer , can use , as well ok so this more complicated function be call a cig action and by default be not use , have to specify a flag"
      ],
      "lecture 35-Q09": [
        "ok right so as part of a judicial review of the c code write inside engine unit an engine control unit of a toyota car , could look at the complexity of that code and decide how like , be that may be a bug inside that code right so let , have a look at then at the toyota camry be very popular model and will look at a particular particular system of this call the tcs which be the electronic throttle control system ok so toyota have be make car for a long time and write code for these car for a long time so be there any surprise down the code that , discover actually have over eleven thousand global variable good luck keep track of that good luck try to make sure that , understand , system sufficiently well",
        "the in this case for the the toyota code , have sixty seven function which be rate as completely une tap untestable that , be impossible to write test case because , have more than fifty possible path and that the swaddle code have a score of more than one hundred ios maintainable and so why be this relevant well this actually stem civil lawsuit where toyota be be accuse of uncontrolled acceleration in , car and this be just regular car be not even talk about self driving car this be just a c code design to control the engine , be design to control exactly what happen on every millisecond and every step of that engine be so , be not all bad news in the sense that the car industry actually have attempt to define some c code rule and there be actually a lot of rule in this particular"
      ],
      "lecture 37-Q01": [
        "ok which will automatically generate all that c code forwards but typically what , need to do be , need to marshall all the information that , be go to send down the wire across the network to the other side so if , imagine for example a field marshall or marshall in term of army , responsibility be to get thing in order to get , well organized so that , can send everything off in organize fashion so if for example , have a whole load of parameter to send , may have to decide which order to send those parameter or if , have a whole lot of integer dissent , may decide to say send the number of integer follow by , value or if , have a graph , 'd have to find a way to turn that graph into some information to send down the wire so all of that idea of marshalling"
      ],
      "lecture 37-Q05": [
        "this be go to be the number of byte , want let , decide how , want to use these bite so , do not need to execute any code here but , do want to be able to read and write to this page of memory and lastly because , be go to fork , do care about change that i make inside this file to be see by , child process as well so let , ask nmap for shared memory as well ok so first thing will do with steel quick error check if this return negative , know , do not have any byte there now , can actually use this to communicate between the parent and the child so here , go let , call , two two piece of code here , have get child and parent and see how that work and i can directly right into this memory from the child"
      ],
      "lecture 38-Q02": [
        "so when , demand this when , cpu attempt to read a memory location inside here , know that , can actually recover this page by go back to , disk and so what , need to do then be if this be all of , random access memory that i pay lot of good money for then , demand paging be the idea that as need when there be demand let , draw a little disk symbol in here there , go i get in , disk i can read that patient disk that may take say ten millisecond but in ten millisecond time great i can copy all that datum for kb say back into , actual ram here so let , label a few thing this be , ram this be , disk"
      ],
      "lecture 39-Q02": [
        "so the moment , press return that be when that be go to be give to , , process which what will , do next ok , have get this now inside some buffer maybe on the heap for example and , want to pause this so , be go to tokenize , into argument so , have get curl here and then , have get this argument ok so what happen next well this be mean for , to talk about fork , be go to make a child process so , call fork and , be go to call exec some variant of exact which will use the path because , be go to look for this command call curl somewhere on that set of directory ok so assume , find , , be go to start this new process and pass in this as these as , argument ok so , can now talk about how"
      ]
    }
  },
  "topic 10": {
    "keywords": [
      "c library",
      "file handle",
      "standard error"
    ],
    "mentions": {
      "lecture 02-Q01": [
        "1 minute"
      ],
      "lecture 02-Q02": [
        "0 minute",
        "5 minute"
      ],
      "lecture 02-Q12": [
        "0 minute"
      ],
      "lecture 03-Q02": [
        "2 minute"
      ],
      "lecture 03-Q04": [
        "1 minute"
      ],
      "lecture 03-Q06": [
        "0 minute",
        "1 minute",
        "2 minute",
        "3 minute"
      ],
      "lecture 03-Q07": [
        "1 minute",
        "2 minute",
        "3 minute",
        "4 minute"
      ],
      "lecture 03-Q10": [
        "5 minute"
      ],
      "lecture 04-Q02": [
        "7 minute",
        "13 minute"
      ],
      "lecture 04-Q03": [
        "0 minute"
      ],
      "lecture 04-Q04": [
        "0 minute",
        "2 minute",
        "4 minute"
      ],
      "lecture 04-Q05": [
        "0 minute",
        "3 minute",
        "5 minute",
        "7 minute",
        "9 minute",
        "15 minute"
      ],
      "lecture 04-Q06": [
        "5 minute",
        "6 minute"
      ],
      "lecture 04-Q07": [
        "5 minute"
      ],
      "lecture 05-pt2": [
        "3 minute",
        "5 minute"
      ],
      "lecture 05-pt3": [
        "0 minute",
        "1 minute",
        "2 minute"
      ],
      "lecture 05-pt4": [
        "3 minute",
        "5 minute"
      ],
      "lecture 05-pt5": [
        "2 minute",
        "3 minute",
        "10 minute"
      ],
      "lecture 05-pt7": [
        "1 minute",
        "3 minute",
        "6 minute"
      ],
      "lecture 06-Q04": [
        "4 minute"
      ],
      "lecture 07-Q01": [
        "2 minute",
        "3 minute",
        "10 minute",
        "14 minute",
        "16 minute"
      ],
      "lecture 07-Q02": [
        "4 minute"
      ],
      "lecture 07-Q09": [
        "2 minute",
        "3 minute"
      ],
      "lecture 08-Q01": [
        "2 minute"
      ],
      "lecture 08-Q03": [
        "0 minute"
      ],
      "lecture 10-Q04": [
        "3 minute"
      ],
      "lecture 11-Q02": [
        "16 minute"
      ],
      "lecture 11-Q10": [
        "3 minute"
      ],
      "lecture 13-Q01": [
        "7 minute"
      ],
      "lecture 14-Q07": [
        "0 minute",
        "1 minute"
      ],
      "lecture 14-Q09": [
        "3 minute"
      ],
      "lecture 15-Q05": [
        "4 minute"
      ],
      "lecture 19-Q08": [
        "0 minute"
      ],
      "lecture 21-Q08": [
        "5 minute"
      ],
      "lecture 22-Q01": [
        "7 minute",
        "13 minute",
        "14 minute"
      ],
      "lecture 22-Q03": [
        "8 minute"
      ],
      "lecture 22-Q04": [
        "0 minute",
        "5 minute"
      ],
      "lecture 22-Q05": [
        "4 minute",
        "9 minute",
        "10 minute"
      ],
      "lecture 22-Q08": [
        "3 minute"
      ],
      "lecture 23-Q01": [
        "0 minute",
        "1 minute",
        "5 minute"
      ],
      "lecture 23-Q02": [
        "0 minute"
      ],
      "lecture 23-Q03": [
        "0 minute",
        "2 minute",
        "3 minute"
      ],
      "lecture 23-Q04": [
        "0 minute",
        "1 minute",
        "2 minute",
        "5 minute"
      ],
      "lecture 23-Q05": [
        "0 minute"
      ],
      "lecture 24-Q03": [
        "1 minute"
      ],
      "lecture 24-Q04": [
        "0 minute",
        "1 minute"
      ],
      "lecture 28-Q01": [
        "9 minute"
      ],
      "lecture 29-Q03": [
        "6 minute",
        "7 minute"
      ],
      "lecture 30-Q02": [
        "5 minute",
        "6 minute"
      ],
      "lecture 30-Q05": [
        "7 minute"
      ],
      "lecture 30-Q08": [
        "1 minute"
      ],
      "lecture 31-Q04": [
        "4 minute"
      ],
      "lecture 32-Q03": [
        "12 minute"
      ],
      "lecture 32-Q04": [
        "0 minute"
      ],
      "lecture 33-Q02": [
        "1 minute"
      ],
      "lecture 34-Q01": [
        "7 minute"
      ],
      "lecture 34-Q04": [
        "7 minute"
      ],
      "lecture 37-Q02": [
        "3 minute"
      ],
      "lecture 38-Q01": [
        "0 minute"
      ],
      "lecture 38-Q02": [
        "2 minute"
      ],
      "lecture 38-Q03": [
        "0 minute"
      ]
    },
    "captions": {
      "lecture 02-Q01": [
        ", util dot h and that better be somewhere inside , project perhaps i want to include some system file for example standard , o dot h because i want to use thing like printf and put s another kind of standard way to do input and output inside , c file and the angle bracket here be just a hint to say this be not part of , project instead , look inside the standard include path of the c library and , system ok so that be the first thing be just a weekend , easy music for include the second thing , will see be , can define macros so for example , can define the fact that if , see life then , should replace that with the value forty two ok so now if i type if life what the compiler be actually go to compile be go to see if forty two i do not see any non zero integer be consider a truthful"
      ],
      "lecture 02-Q02": [
        "ok so let , complete the follow to return one if the give c string contain an at symbol or not otherwise return zero so let , write this little bit of code so first of all take a look at this , be go to be give the address of a character so , can read this backwards , variable ptr be appoint otherwise , be go to hold an address of something and the type be a hint of the compiler to say how much maybe , should read or write when , actually use this pointer be , go to read or write four byte for example for an integer or but no in this case , be just character in other word , want to read or write just a single byte whenever , actually use this pointer and that be what , want to do most of the time most of the time , do not care about where the pointer be actually want to use , value , know the pointer point to some memory so let , go and read or write thing at that memory ok so let , have a go at write this function",
        "not right because that be actually a c string and so that would just give , an address instead what i need be a single quote to say here be an here be an ascii character please convert that into an ascii value for , right so if that be find great , can stop loop around so now , can actually return one to mean success ok otherwise , want to go on a loop ok so next time i loop i actually want to look at the next nextbit how do i do that i could say pointer equal pointer plus one or for short how shorthand i can just say plus plus ok now the important thing though about c be that when , start do point two arithmetic actually the compiler make use of the pointer type and in this case the pointer point to character so to look at the next character , actually need to advance by one byte if , be look at integer pointer then , would advance by four byte or eight byte or whatever ok so , have get a little program"
      ],
      "lecture 02-Q12": [
        "hi so the c library actually have quite a few function to work with string when be go to look at a few of , and realize that , be actually really really simple and be actually really really easy to write but the one inside the c library be probably much well debug and more performant and run fast and quick than anything , may write for example perhaps , use specialize assembly instruction but let , have a good look at kind of four very common one that be very useful : str copy , str cat , str len , str cmp or str compare so what do these do the wrong button let , try , up ok great so , have str copy allow , to write from a destination address to ; sorry ; allow , to write from a source address to a destination address and , will keep go until , copy that zero byte . str cat do a similar idea except , will concatenate after the end of the string that s already at the destination in other word"
      ],
      "lecture 03-Q02": [
        "\" to figure out how long , c string be . \" \" , do not need \" to invoke the whole operating system for that . , can do that directly inside , process 's memory . so for thing which be part of the c library , , just need to go to section three . and so that be where , will find strlen and other thing like strcmp to compare two string , or say strcat . so [ indistinct word ] up to specify the system area , sorry , the manpage area of the section be useful when there be multiple entry . there be one other entry that , will see sometime in the future which be section seven , that be for long article . and , will discover thing , like p thread and signal , actually have much long article which be part of section seven . so , can make a note of this here , right . so let , get , little pen work here . right , so if , want to talk about , if , want to find out"
      ],
      "lecture 03-Q04": [
        "or two . right , so while asterisks pointer , in other word , follow that variable . let , have a go and look at what be actually inside that memory . this be very common with pointer . what do , want to do ? , actually want to go and see what , be point at . so this look like , be try to check to see if there be a zero byte there , because if , get to the zero byte , great ! , know that , have reach the end of this c string . [ indistinct word ] the reasonable request . ok , what be go on here ? inside this loop , destination equal source . wait a moment ! that be just copy the value inside these variable . in other word , , be not reach out to that memory . instead , , be just change d to be equal to the same value of src . in other word , great , now , have get two pointer that both happen to be look at the original string . that be not what , want to do at all ! , want to be copy some byte . , want to be actually copy one byte at a time from the source into the destination . so what be miss"
      ],
      "lecture 03-Q06": [
        "hi , so let , address a point of confusion and start talk about how , can write and read thing inside the c library , but also how , work underneath . so let , change to laptop mode . ok , great . so here be the big idea that , at the heart of , all , if , want to stream some information out , and , do not matter whether , be to a pipe or network socket or file , , be go to use the low level system call call read and write . and , work with file descriptor . and initially , , get actually three file descriptor for free : one for input , one for output , and one for an output error stream as well . and , can make more by open file [ use ? ] other object , but that be the low level interface . and inside cs 241 then , , be actually go to use both of these . , be go to work with this low level interface . but , will also see how the c library wrap this up into something more useful . for example and",
        ", want to write out some format information like number which only have a limited number of decimal point , or , want to read in certain word and tokenize , . so in this course , actually , , be go to be play with both , but , be important to realize whether , be at the c library level , or whether , be play with the low form , these read and write call . and what be actually \" really cool about these , this get \" \" low level , \" \" there \" be the fact that , can be use with different kind of object . so these file descriptor that , have , , be just little integer , little non negative integer , , have mention three of , already , zero , one , and two , for the input , output , and error output , but actually , be go to see these for other thing as well . so , in addition to file , , can actually send thing to pipe as well , and pipe",
        "down a pipe , and , can stream , through , while another process can start read those byte , and , will come out in the same order that , send , . and then then , have get fun stuff will see at the end of this course , which be socket . and socket be the way that , can set up , service . so this be how , can create , say , a new database or new web . this be kind of a fundamental part of , internet be how , can get two machine to kind of talk to each other . so behind that all be just a simple idea of , process have these little file descriptor . that be when , want to talk about a particular kernel object that want to read or write to . so anytime , see read or write , , know that , be work with a little file descriptor . but above that , , can now talk about what do the c library give , ? and the c library be go to make , world a little bit easy when , want to work with formatted information and when , want to ensure good performance as well . because the c library , when , actually say ,",
        "go to immediately call write . , be not immediately go to call the system . instead , for performance , , may choose to buffer all of that content inside the memory until the day that , decide to flush , out , until the day , decide to send , . so let , turn , attention then to the kind of c library version of the world where , ok , scroll down here , where the c library have a file object and , by default , , get three of these for free . there , go . , have standard in ( stdin ) , standard out ( stdout ) , and standard error ( stderr ) . and , can use these , , can use standard out and standard error , for example , with fprintf . so all those time , been write printf , that be \" actually just equivalent to say , \" \" hey , fprintf , \""
      ],
      "lecture 03-Q07": [
        "a little bit about the buffering that the c library give , the c library support buffer in order to ensure good performance make a system call be a lot more expensive than just a regular function call so rather than just send a few byte at a time let , only make that system call when when , want to ok so what be the default behavior of the c library here ok right so the default behavior be actually kind of reasonable when , kind of think about , first of all if , be send stuff to standard error be probably a good idea that , see this as soon as possible , if , program about crash or this or there be any kind of problem let , not keep that information hide inside , process instead let , write , as soon as possible so by default standard error be not buffer ok so that information be go to be send as soon as",
        "and will see that yes , get cs two forty one and programming so these two thing , send pretty early on and , see , pretty early on but , also see , kind of hello early as well while i be that well the c library when the output appear to be go to the terminal will flush that the moment that , see a new line the thinking here and if , think about , , be pretty reasonable be if , send a new line , probably now may be wait for input from the user perhaps , still say to the user hey please enter , password or , sure , really want to do this so the default behavior be prettify if , be send , a new line , be go to take that all that content , have give , so far and then call right in other word , be go to flush the buffer , be go to now right out what , have give , anything else that , have store in , buffer so that behavior be the default behavior",
        "ok with that let , try send this output not to the toggle i send , someone else ok so , can do that by run , program and send the standard out in standard error to different place for example i can send a stamp out to a file so i can call this hello dot text and i can send the up the error output to somewhere else so for example i could send the error to stream number two which , know be now the error i will look i can send that to say error so let , run that and now what if i get after , run , have get , output in try again not there , have get , output inside hello",
        "the stuff , send to the standard error in the other file so if , look at error will see , have get cs two forty one and programming right so the last kind of quick comment on all of this code be when else when else would , expect up rc lie beat a flush thing out so the answer here be if , exceed the size of the buffer and typically , be go to be about four thousand book bite or so so at that point , will flush the buffer and everything else the other answer be when , be close a filestream so if , gracefully shut down a file object so for example , have call f close on , or wear exiting gracefully , program then will send out everything that , have currently get inside the memory the c library flush out if , crash , program then this policy likely never have a chance to actually send those bite so"
      ],
      "lecture 03-Q10": [
        "be where the error occur so i do not even need to run the debugger to discover where , have get a problem alright so let , just compile this and demonstrate these two so , want to run this and this time will actually put the right thing will say la and , will see that , have get , everything be ok and , print out assert demo at line nine because , be use those constant inside there so i hope , can quickly see how , too if , really want to could build a little assert function now or little assert macro that , test to see if the expression be correct be true and if not let , print something out to standard error add immediately quit the program alright so how can i do some more debugging at this point well every good c programmer know first of all that if , want gcc or clang to actually generate debug information"
      ],
      "lecture 04-Q02": [
        "at the number of byte read that will definitely be one more by after the number of byte , get and what i want to put in there i want to put in a null byte ok so this be now in dangerous territory i hope , can see why but now if i do actually get some bite , have terminate , so now i can use , as a c string so i can do thing like put , in print f and i can say and and , give , write a little string here right now i need to say buffer and , know that printf when , ask , to predict string will start at , location keep send out this bite until , see that no bite , could also have use put s as well so that would do something similar and include new line as well ok right so let , return that , be successful and , little program ok so what do i call , read demo",
        "make sure , code work if , do return negative one that if , do return an error then i do not want to write into buffer at minus one i should stop before that moment so let , do if result be minus one let , get outta here right let , put something to standard error so hey if i could not read from standard in ok and maybe want to quit a program so i could call exit for example or i could just return from maine , do the same thing ok and by convention there let , have value which be non zero to say an error occur ok right so now , be look pretty good let , write this and commit , and , can play with , too ok right so , will see , in the next video when , go"
      ],
      "lecture 04-Q03": [
        "hi so read be great as the low level way to get a stream of datum come in i can say ok give , another hundred point give , another half thousand byte or whatever and i could use that level but quite often i know that , data be in some kind of format perhaps , have get a csv file so value , a comma , another value perhaps , have get raw text datum , have download the entire twitter stream of today for example so how can i have process this kind of text or datum not have to write , own routine to convert one two three into the number one hundred and twenty three and the answer to that be the c library come to rescue and , have really useful little thing here , have scanf which be a lot like printf so if , have learn printf , can now do the opposite , can say i want to read from standard input and here be what i expect to see and , take a format string just like printf do but"
      ],
      "lecture 04-Q04": [
        "hi . so , ok , , have talk about a scanf ( ) which would read from default from the standard input but guess what , can do a lot more use the same idea so , call , the scanf family just like printf have a family , can say instead , know what i do not want to just read from standard in i want to specify which file to read from which filestream so this f scanner for that or , may say actually guess what , have get some byte in memory that i do as a c string and i want to pass the output from that so in which case i can use snf and all i need to do be pass in the address of , c string right so let , have a play with this then because guess what on up here , have get a little csv file call , data dot csv , get some value in , and i want to be real read those and then start process",
        "at a time the c library will read many more bite in an attempt to have well throughput so , can load , file in quick right so , have get , a file for good error checking i could see , fail so if f be be null , could do something about this , could see could not open whoop i want to send a little error message to the standard error could not open datum file okay and let , quit at that point so i could also type to return one right so now i want to start read , datum and i need a place to put , now for demo purpose then today , be just go to have a fix size buffer and for example why do not i try to read all of , x and y value into a single",
        "well remember , be go to say hey sdf do not read from standard input instead read from , little file handle here and i expect to see at integer comma and another integer and now i need to give , some address so before , use ampersand x but now , be actually go to need to calculate a place inside , way so what do , think of datum plus the number of red so , be do , so , be do pointer arithmetic which mean the compiler be go to make use of the type and , know that data be an array of integer so every time , add one , be actually go to bounce by four byte or however big an interview be well that be not bad but i have to decide where i actually want to put , datum on all the x value together and then all the wise or maybe i want to do xy xy xy xy let , do the xy xy xy xy so so if i do that then every time around this loop , be actually go to"
      ],
      "lecture 04-Q05": [
        "hi so there be many exact time when , want to be able to read datum text datum in one line at a time so let , see how , can do that , need a way to be able to cope with line which could be very small but could be arbitrarily large and the only way , know , have get to the end of the line be either , have get to the last line of a file or , see a new line character so the great news be that there be actually a c library function to do this for , , be go to wrap those low level call and make sure that , give , back one line set a time let , see this action ok so let , do this and let , do that right and the thing , be go to play with and , be go to use , in the assignment be this magical thing call get line now first of all do not panic let , pull this apart and see how , work the exciting part , seem to take a pointer to a pointer to a character and a pointer to one of these variable cause a size under course t , goodness and the last thing be where should",
        "line pointer and this size pointer the first one be go to be useful to remember where , be store the current line inside the heap the second one be how big be that buffer so so if potentially exceed that size , can get a new one right but why be , the case that both of these be pointer here be the trick get line actually go to change , variable from one call to the next so , actually again to give , the address of , variable so let , do this actually write some code here so , will get line demo here and the variable , be go to need then be go to be a pointer to a character but , and i know , do not care just that single character actually go to treat this as a c string so all the character after",
        "address of , buffer and here be the address of , capacity available and something call i want to kind of point out at this moment be take a look at the type of , variable i have point a character and size two but , take the address of those thing now let , take a look at the declaration of get line and , see , have a pointer to a pointer to a character and a pointer to a size t i hope that make sense that in take the address of these variable , have add basically just another pointer in front of what , already be in term of , type ok if , do not knock , just only have a few time until , start to be at least believable ok so let , carry on , want to read from standard in i could have choose a different file handle if , have use f open right so",
        "get line actually give , a c string include the null byte so i could print , out i could say right kind of buffer content and will say percent s k and , have a buffer at ok alright so now will say go round the loop again key like when , get out of here , know , be because getline return negative one what , do here well get line have allocate some memory on the heap be , responsibility to free that memory up so let , remember",
        ", have run , and notice wait get line be block because , deep inside the implement vegetation at some point rc library be call read and read , be block or process be not do anything right now , be stuck and , only get to continue when read return so let , give , some datum let , say abcd ok and now look be variable have change the buffer now not point at null be point , be invalid memory , be be initialize to , capacity of eight and , get five bite back and what do , see abcd and something else in fact , get back in this case be abc d and the new line that be right get line not strip that new line force automatically include ,",
        "ok all manually format this for now cape i could use indent or some other program later to format , ok so now , have get a more secure test k so let , compile this will run , ok and , will type something like one two three and , will see that great , have actually script off the new line an only printing that so and , can now use , as a c string so abc and , have abc and , have a long string and , change capacity and potentially the address of a buffer ok so what do , get little get line demo so that be if , get line lot of kind of move past , be to think carefully about but , be actually a very powerful utility that give , a great performance because , can reuse the same"
      ],
      "lecture 04-Q06": [
        "that will do be let , add a newline ok right so one of the thing could happen what be this go to print how much be , go to print and let , see if , be right so will compile this and off , go so here , go let , compile , ok be , a really right three two one ok , print out a lot of information in fact that print out one two three four five note there be more there be one here there be six seven eight , actually print be eight line worth go on , start with one process but then , call fork and at that moment , process be clone into two now i have two completely happy independent process run each of those process then call fork independently and so the operating system say fine ok , could",
        ", as well now , have get four process so , could sketch this out in time that be a little drawing tool here ok so i have ok i have a so i have one process run and , be go to have , time axis go to the right here and then , call fork so at this moment , call fork ok that original process will return from fork so , be just go to keep keep go on in time and eventually will print something else to say hey be valuable but operating system say great i will clone , and make a new process so a few millisecond later brand new process have appear on off , go ok and eventually this process be go to continue and print something out"
      ],
      "lecture 04-Q07": [
        "valid so let , see if user be null unlikely but hey let , be defensive here or secret be not , can complain so , could say hey , forgot to set these print f f print f the standard error please ensure user and secret an environment variable i say i have the little dude line and then let , exit with a non zero code to mean failure ok and now will put , out ok so , can get out of that so now let , run this little utility call export and will say export i want secret to be one two three four"
      ],
      "lecture 05-pt2": [
        "of that right and i need a new program here case so let , call , exact powerful dot c and , will descrip this much ok right so this time i do need , argument specify from maine , have get account and point to a char argv and , will have a nice program which print out little useless message so if , do not tell , what program to run let , print something out right so if , go see that arc see , need to be at least two item because will have the process name and the argument give , if , be do that then , get problem service if , be less than two then let , print usage message so&nbsp ; fprintf to standard error or little use message",
        "the beginning i want to move forward by one i want to give , process name i want to pass in whatever i want to pass in where , table start and the first thing be give , the program , want to run ok so , do argv plus one , want to move advance to that second pointer in that away and let , hope , fail , be sorry succeed if , fail then , be go to get to line eleven time to print something out so , can say exact fail and maybe go to find out a little bit more about why and then again let , exit with an error value k right so what do , think about this well , be use exec here so better include i think , be c string send liberal standard dodge ok and i do not declare what program dangerous so can , guess what how i should declare a little viable here program name or should be look at if , say"
      ],
      "lecture 05-pt3": [
        "hi , have get a challenge for , let\u2018s do a code review of the follow code and see what error , can spot in this and how , could improve , ok so get , little pen out here let , choose a new color or go for let , go for this be kind of yeah let , just do dark blue ok try that ok ok great so what can , see right so ok , like the fact that , be test to see if the number of right number of argument have be supply and what this program be try to do be implement a simple version of cat in other word reader file an start print , output to standard out so good be check that the argument be two and print out little usage message and send , to standard error look good stuff however this program continue , should have exit there so how should , do that well after print something out here , should have an exit but , could also have",
        "i do not like the fact that this code do not have any brace in here because , exit then would not be enclose within the condition there , go so , also want some brace in there ok now , call f open so , be use the c library to pass in an argument and , already be confident that that be a non null pointer because , know now that be go to be at least two item inside argument to read < br > and , be say ok i just want to open this for read only great , have little documentation here say maybe turn all but , do not actually ever do anything with that so well code would actually test the result of f open and if , return null then let , not continue let , print something out and stop at that point ok so now , be go to start read line at a time and this be pretty cool , actually go to print outline number alot like well , have line number",
        "the width of the space the number of empty space to automatically add to the area for that particular variable right and , be use a side effect of each time to add one to the line number where do , get in these line from , be use getline alright and , be pass in the address of two variable that be great way to use getline where be , be , up here and , be pass in that file handle as well ok and , only escape when , actually read a negative one so , do not know where , be go to be the end of the file or whether , be go to be someone unplug the usb drive be , be print , out but for whatever reason get line can not continue and i like the fact that at the end here , be free up the memory that line be point to so , never explicitly call malloc but , know that get line do call malac"
      ],
      "lecture 05-pt4": [
        "something like that now , be actually twice start try to read some character and the trick here be to know about the follow be that i can actually read one character at a time and i can read , into a little integer variable and the reason to read , into an integer be the f get see will return a negative value if , fail ok so let , a little while loop here to keep go provide there be no error so if i take , file handle here ok so where do filehandle that be just what be be pass in so if there be no current error and , have not reach the end of the file then let , keep , go around so that be one way that , will escape from this now the reason to escape from this at loop would be hey , have just finish read a new line so , be go to need some code down here that say look after , have put that see",
        "read to be incremente i want and let , store the character that , have just read for , input stream and each time around the loop then efficacy be go to give , the next character from the input stream if i have not type anything there an f get see or block , will wait until a new character be give to this process how do , think that happen what be ultimately call yeah that be right actually underneath&nbsp ; fgetc&nbsp ; end up call read for performance may not ask for just one bite , may say yeah guess what the c library have lot of space that be a full thousand six byte or something for for a buffer area , in order to make the code performance alright be , do now , have get a little bit more work here because , could be that the number of byte , have read actually be go to exceed , buffer"
      ],
      "lecture 05-pt5": [
        "of , test now to see ok how , should , should return if , get see return negative one then a couple of possibility that , could be that , have an error in which case time to stop or , could be that the stream be close and if , have not write any have not read any bite at that point then , be time to stop try to read anymore ok otherwise , still watch , want to return a valid string , have get some , have get some bite that , have read already let , turn , into a a valid c string so let , turn that like with a zero and return the last option be that , have",
        ", return heap area and now let , make sure that , have terminate the string and return the number of byte red form the c string from the stream so as , can see that be quite a gnarly little function to write so be not , great that the c library be provide , for , okay so that be get line so let , have a look at the follow and see if , can immediately see what be wrong with the following code and be , suppose to do all right so , have get ok so now actually twenty use getline and year to say oh look at that , be use the correct type , get , to compile but what i should have do be actually , type here be actually ok , be compile with optical useful what , want be a variable here let , just call ,",
        "in the middle answer because that be actually go by standard error so that be not be buffet be be print , be be send to the terminal immediately so let , pretend that that be a problem right so , will make sure this whole line go out straightaway ok maybe all of , now can see what the problem be i hope so will flush standard out to say please please please send everything else lady make sure , have get nothing inside , internal buffer make sure that , call right and everything go ok so let , run , once more and will type cat and , see ok this time , run cat but cat contain a newline yes be gotcha here be that get line be give , back everything , be write"
      ],
      "lecture 05-pt7": [
        "can be read or write by this user and other people as well if , forget to put this third argument in then open will use whatever value happen to be on the stack at the time and that could be zero meaning that hey in the future , will have a hard time delete this file not open , because , will not have any permission but , be go to use iruser and iwus be use meaning that the user have read in , permission where can , find out all of this stuff the answer be to look at these section two of the man page so , would write man s two ok right so , be do low level thing with file scripter but , have jump back up into the c library where , say put string in other word print out the follow to standard error and and also print out a new line ok hold on a moment do not , just close down , out yes",
        ", want to change , , be go to change , to slash bin so what be , go to do with this and , will see that , be go to use , in a moment when , talk about the current directory here , be go to call exec next to say please find the follow program , have specify , be full path call ls and , can run , under the process name of slash band slash ls and , be just give , an argument of dot mean the current directory so this be actually go to run and say please list all the file of the current directory and what do that count directory , just change , to slash bin if that fail where will print something out to standard error with perror but honestly , do not expect these line to one so great let , actually run this and see what , get ok ok right so let , and then this gcc captain log",
        "all that out well , 'd be correct normally if , be write just to the terminal but the c library attempt to see what be , send , output too and in this case , change to standard output before , have write anything so that , would be send to a file and so now the c library change to well performance mode that say , will not try to buffer this for every time , see in newline instead , will only write thing out when the internal buffer be full or when , be gracefully shut down the program and in this case neither of those two thing happen instead exec come bluster in and discard everything that the c library have get ready to print out to stand out so , never have a chance so that be how this program work let , just run , one more time and will see now that if , change , program to actually"
      ],
      "lecture 06-Q04": [
        ", in order and sleeping source simple order end algorithm to do sort but , be rely of course on the operating system to properly schedule , process and do not return from sleep until that time be up to that time be expire so that be what , have get , create all of these process , do that very quickly hopefully under far under this one second and then each process be sleep with when , be at a time and be responsible for print one number ok so yes that be call sleep sort and let , know if , have a fighter real reason to use , but , do illustrate a couple thing first of all that tail anybody can call fork can , can get this whole hierarchy"
      ],
      "lecture 07-Q01": [
        "of variable if i want , code with a bit more readable and then , give a hint to the c library that , only want to open this file for reading right ok good some error check so if not far in other word if i point two be point at nothing 's zero be null then , use piero to print out a little message could not make file and that will also include some kind of error message and this time , be return from maine which actually if , return from maine have the same effect as call exit as well alright so , go around here ok now this be actually kind of common in c code which be just use zero and one for false at time so zero false one for true , could include static ball and use true if , wish ok so get line then , give , the address of , two variable to buffer the capacity and ask , to start read from a file handle ok and then , put a zero in byte",
        "that in a moment for now let , just carry on ok so , do put s which as , know be start print out character until , get to the end of c string character the null null byte and follow by a newline for , and then , say ok if stricken power so this be go to compare two string and , pass in two point be the start of the two string , want to compare and , be go to keep compare one character at a time from each from the left hand side and the right hand side and either , will be exactly the same in the same length or one of the more finish early so in this case store compare be go to tell , if the buffer be equal to y n deep end and nothing else no more no less so that will return a zero value if those be equal ok so , have find a little bug here that , want to actually check to see if this be",
        "of thing that , skip over and figure out what , should do with , first of all why be this flush here so this be i i bone of contention between , and jilib see right now so if , wanna linux machine that use a relatively modern selye be , need this line because the child and the processor go to share standard in and the way that , , can interact be not necessarily senseable when the child process exit in fact , be bad than just have this line , actually need to do flush on all of , open file handle and so here be another one , well actually call f flush on , input here as well if , have print some thing out and , want",
        "file handle as well and if , want to be good citizen , could also change , little file pointer here to be null just so no one could use , after that ok like i say there be a kind of overengineered for this small amount of code but i hope , understand the intent behind , right so can , run this ok let , let , set up some test example let , see what , have here let , have a look at some little problem little example script , have get here , have get one which be call script one and , can see , , call echo six one echo seem another second and then call echo again with hello let , try , with that one ok and let , sorry , be look at one thing i be look at command stop text ok there , go right so this be the text file that , be go to pass to that code so the very first line of this file",
        "where be , fork , no ok so , , want to flush , two input stream , have get standard into flush and , have get by file handle as well ok so let , save that and right ok and now if i run , , will give , a little usage ok , test that now , want to say here be , here be , command how ok this be look pretty good bash , mention run bash but , do not find the command that be because if , look for everything in this directory this start with end with a sh , actually just call script more script script free so i want to change that file let , do , with vim or by ok so actually i can say thing like oh i want to , regular expression"
      ],
      "lecture 07-Q02": [
        "once the second here so , can see that , be call right and what be i go to write , be send out to standard out here be the address , be give , dress with string literal and , be ask right to say ok , be give , an address another address i want , to take one bike to please and because , be use the low level posit call rather than the c library that that bite be immediately go to be write out to standard out so , will see , straight away , will not be any buffering and then , say ok please sleep with one second now this be not some expensive for loop that burn up the cpu and keep , house be warm at night no instead the cpu at that point be go to be reallocate to a different process that be ready to run and then the rest of , , could see , a little loop and , do this for sixty second and to help , with the demo , have also ask , to print out , process"
      ],
      "lecture 07-Q09": [
        "ok so then what do , do right now , be change the the value that result be point to so in other word if , give , the address of , variable , be go to change the content of , variable to point to something else this be what i want to make , variable look at i want , available to now look at some heat memory and , be allocate this number of byte i think the intention here be to try to put a c string in there let , see how well , do so , man copy into this be not right right now , be try to copy , into where , variable be if that be on the stack , be just yeah , be go to actually start over writing directly over , variable way in fact what i want to do be , variable suppose to hold a pointer so i actually want to change there , go , variable the thing that , variable point",
        "use the beginning of the message and here be a number of character well do , put these in the right order in any way to truly check that be to use demand page and also notice that , be use mem copy not stroke copies and mem copy behave in a very similar way , give a target and a source but now , have to say exactly how many byte and do , copy do , actually create a c string no , do not because , copy the digit but , never terminate , so , should remember to before return if , want to see string , should remember to set that equal to zero so result pause , well equal the super bite but if , do that now , better check that , have actually allocate enough memory and so if , have a little bit of thought will realize that the memory that , should have request be actually go to be pause plus one ok so great now , have get a function to ashley find the digit at the beginning"
      ],
      "lecture 08-Q01": [
        "that interrupt and eventually will generate a segfault ok this be the whole story now there be a few little lie inside this story ok so what be the lie first of all that when , load library like the c library or if , be do open gl sound library , need to put those in memory as well so in practice , will actually live between these where , dynamically load library so , may put other stuff in the side there also the idea that the heap be actually just one contiguous block of memory later on will axe that model and if , say to malloc hey malloc , 'd like four gigabyte of memory actually , be go on a modern machine go to find a different space for such a large allocation ok but more little other light be that in the future , will talk about threat and each"
      ],
      "lecture 08-Q03": [
        "ok so let , talk about why the nation part of the operating system here that be ass break now if , be to look at the manpage of s break , 'd read something like the follow s break increase the process be datum segment by end bite so when , call s break , can give , a number and , can say hey , 'd like ten more byte please alright so what do that actually mean ok so between , and , as big be not actually use anymore instead , be go to use some virtual memory trick of all the slide this do modern c library use some virtual memory trick that , have not learn yet so s breaker be simply mechanism but , will use , for cs two forty one to implement a simple memory allocator ok so remember how i say that the bottom of the memory , have get the text segment which be the program code and string literal and any other constant , have put in here and above that , have , global variable which live forever alright so"
      ],
      "lecture 10-Q04": [
        "and in fact this be what the c library do on a sixty four bit system so if , do this if all of , allocation be always conceptually in sixteen byte block then will ensure that will always be return address which be align to sixteen byte and if , be line to sixteen byte that should be a good enough nearly all primitive so intent short double etc etc so , turn out that a modern cpu do have a couple of native type which be large than sixteen byte but , will not worry about that for , memory allocator today alright so , have get , have get this challenge be say how , run up to sixteen byte here be , basic plan let , calculator"
      ],
      "lecture 11-Q02": [
        "from maine at that point , program , process exit and threat live inside a process let , say , again , live inside a process so that be really important idea without the process without there be no memory there be no file thread have nowhere to exist ok so , think about , as memory and now , be co opt a whole load of cpus to come and work on , program together if , turn out that , do not actually really have say two cpus on , , machine then the operating system lie to , , give , , play a game where , pretend that , have get an infinite number of cpus versus really in fact what , have be like a a short order cook that be able to quickly work on one job and then go and work over here and then go and work over here and if , keep"
      ],
      "lecture 11-Q10": [
        "up may put , know what , would be helpful i save , yes always a good idea so now let , try , ok alright that look a lot more like a hundred output will check in a moment notice that yeah , be happily print out the address of , ray and the address there look kind of reasonable that , look like a low number that be go to be part of , global variable so how can i check that really do app print out other thing what do i pipe the output into a little program call wc wc will tell , the number of line the number of word and the number of character as well and if i wish i could actually just say ok only tell , about the number of line that , see so yeah great , have confirm that , manage to make a hundred thread and each one of , be responsible for print out one thing now , may have guess that , laptop here do not actually have a hundred core so the operating system cheat virtually , can pretend that , have a hundred different cpus running but"
      ],
      "lecture 13-Q01": [
        "get , own stack so the value of memphis tag for thread one be different from the value of member thread two so no , be , be go to be completely independent right so this be nice embarrassingly parallel problem again where , two thread do not need to interact the only synchronization , have to worry about be at the very end when , have to wait for both of , to complete , be go to get a little bit more complicated when , start want the thread to share datum alright so the last thing be can , fill in this why be , that , can call malloc from two thread and by the way be a hint do not forget when , compile , get to give a hint to the compiler to say alright , need p thread support please load the version of the c library which include malloc that support multiple thread"
      ],
      "lecture 14-Q07": [
        "hi ok so let , talk about critical section of function which be not necessarily thread safe in term of , implementation so here be a little example base on some real code where , want to be able to internally log error so , do not want to display , to the console now , actually want to store , on some file so let , have a quick look to see how , work so when , call , log error function , take an error number some integer and an optional message which eventually , be go to save to a file so , will see down here , call f printf , be go to store , in this file handle when , have just get a string of the message and some error string as well and then finally let , flush that as well so , be actually definitely write out of the file ok now let , look at some of the other detail first of all notice that , lazily open the file handle so if , , file up here be null so if not file then that be when",
        ", a file call error log dot text and i want to append so if there be any other content down there let , zip to the end of the file first ok so if two thread be call this at the same time , could imagine where an interleaving of instruction where both thread see value of null because , have not open the file yet so both thread decide to call f open and then write that result into the single file handle the global variable there so that would not be great , only want one thread to ever call ever open so that be certainly a critical section the time between actually test whether , be null and change , , do not , do not want to be interrupt during those time there be a second question in here as well however which be how do , generate a character"
      ],
      "lecture 14-Q09": [
        "ok so that be that be the basis of angrave coin i say , be pretty easy to explain the last part be how do i actually search so for this , can see that i get a big loop go to go from some start to end value in , loop here , be or print that out as well use long 's and then so for each value of , , construct just a simple c string here , be , be go to construct , not not by print , out but , have get some memory here , little message so let , use aspirin f which be go to write the result into message and , message be go to be angry with coin and some long value print out as a hexadecimal value so as i go around that loop change , value of i from start to end then , be go to write a new message in"
      ],
      "lecture 15-Q05": [
        "then if i disable interrupt on this then , code can not be interrupt because the only way that , code can be interrupt be if i if i allow the kernel to interrupt what , be currently do so if i do turn off interrupt there can be kind of no opportunity for , kernel to the operating system to stop , code from run the cpu become very blindsided to anything else go on because , can not be interrupt ok so of course for real system this be hardly a practical solution anymore because one with , have more than one cpu and so actually other code can be run concurrently different"
      ],
      "lecture 19-Q08": [
        "hi ok so , both through five different example of where , seek deadlock or not no deadlock and fundamentally , be the requ sequence that determine whether , actually run into deadlock or not so what can , do to prevent deadlock and one algorithm that , system could use be something call the banker algorithm so if the operating system know in advance what resource particular process want so if , know an example example for example the process one be go to need let , say eight aa whatever azar and say three bee whatever bee be but no season die then the bank side , banker algorithm can ensure that the bank never go into an overdraft right and never , never allow , process be to continue so"
      ],
      "lecture 21-Q08": [
        "both of , can believe that , have actually get , own copy of clang but in fact , , be actually share the same physical piece of memory and that be pretty cool so now , have many user think that , have get access to more random , actually have because , be share thing and there be an example with clang but , be very true for thing like the c library and other dynamic library that be share across multiple process right so share be caring and kind of allow , to use , memory efficiently the last thing will be able to do be to be able to say right , be go to take a frame of memory here and map , into , address space and then also map , into another process address space so now i can have two process which can communicate"
      ],
      "lecture 22-Q01": [
        ", could print that out now , would be dangerous to treat , as a c string because there be no guarantee that a ) , would get order those byte in one go and b ) , never even send a zero byte so , be just go to print , out directly use right today so if none read be at least positive integer let , actually display , right so , be go to print , out to standard out and i want this kind of here be , buffer and here be the number of quite so , actually want to display ok so , be use lot of fire descriptor now , have send hello down the pipe and eventually , get to read , ok so let , run this and prove that print out hello ok great there , be , program be shuffling bite through a pipe , read , and then , display , . right but , can now actually use a pipe to communicate between different process so let , take , write",
        "with a file handle so for example , can do thing like fdopen ( ) so if , call fdopen ( ) , pass in a file descriptor so for example if , want a file handle to wrap standard out , could do that but let , wrap one of , new file descriptor like the write end . here , be . and , want to use this for write ok so now what i call fdopen ( ) rather than open a file all , have do be ask to c library to wrap one of these low level thing to give , one of these c library file handle one of these file pointer ok so this make the life little bit easy . , will call , ' easy ' right , because now i can use fprintf ( ) so now , can say thing like ok i want to ... \" print out a number so \" \" print this follow float \" \" point number \" \" right or print , in scientific so say three \"",
        "answer to life etc be ok . so now , can do format output more a little bit more easily . ok so there be some gotcha here however . , want to make sure that this output be flush and just by put a new line that be not enough if , be output be not go to a terminal , so remember with these thing that , be good to call fflush ( ) and in fact so let , put this down inside like code here so that , be now send datum that way right and in fact there be another kind of gotcha that now if , be use file handle with fork , be important to flush , so that be if , 'd make , file handle before call fork , be always important"
      ],
      "lecture 22-Q03": [
        "if , put a slash end at the end of , that sufficient no , need to flush the stream if , be go to use the c library fprintf type call . right so , have do reading from a pipe what about if , try to write to a closed pipe ok so how can the writer discover that thing have go wrong let , have a new program for this case so i i will make a new program let , call , ok let , use touch to just make , file let , call , pipe and , will call , right on clothe case so that touch will make a new file if , do not , do not exist otherwise , just update the modify time ok so empty foil ok so this time , be go to do be close to far descriptor"
      ],
      "lecture 22-Q04": [
        "hi ok so let , jump to a different level let , jump back into the c library perhaps , wanna write some very portable code , do not require on require to think about these low level posix interface be , just want to write code that work say in window as well maybe , kind of other operating system that support the c library and which be kind of everything so let , have a look at how , can kind of jump around in file now i big word of caution here be that the function be go to look at only work where , can specify the position of file in term of along so say on a typical machine today a long may be assign value represent use four byte in other word the same as be be in today so , can only really represent file up to two gigabyte so bear in mind that be a kind of big limitation of the function be go to cover today right so",
        "lobby please open , data file katie datum say csv and , can open , for say reading and i want to reserve some space for may , file so , 'd like to know how big , be now one way , may have see already be simply to use stat stat tell , all sort of great thing about a file , size which file system be on the number of hard link , have not talk about yet modification time and all that good stuff but let , just stay within the c library today for the most portable code and figure out how big the file be so , trick would be to go to the end of the file so go to the very end right so will call f seek k and which file this be , file handle ok where i want to go to the"
      ],
      "lecture 22-Q05": [
        "see that the c library as far as , be concern any read and write to that file now will be occuring at position ninety offset nineteen from the beginning so if i wish i could remember that or i could go backwards from that that kind of thing so what , want to do to however today be play with multiple process work with the same kernel object so let , have a parent child right now so ok let , call fork right if , be the child what should i do now posix say that before before fork if , truly want see libra to behave , read a flush any stream that , care about so , care about the the , file handle and though possibly be overkill in this case because , have only all , have do between",
        "\" be a hint to the c library to say , \" \" hey , , know , like \" to buffer everything . , know that , do not want to make system call unnecessarily . but , no really , now , be time to actually tell the kernel that , want to change the position . so , change , conceptually , the position of where future read and write will occur here , but by default , the c library will kind of cache that internally . now if , be to start write thing in here , again the c library may tell the kernel but , be go to delay that for as long as possible . so by call flush here , have ensure that the position be update at the kernel object . so , do that and then one second \" later , parent process print out \" \" 5678 \" \" \" and because , change the file position in the kernel , now when the parent finally get around to write",
        "file . ok , so this stuff get tricky if , truely be try to share file handle between a parent and a child . in practice , be unlikely to actually do this . , can not imagine a time when , would want to be deliberately write and change position both in the child and in the parent , and have to worry about whether the c library have actually call the kernel object or not . so in practice , what be usually well behavior be to close unwanted file handle before fork or after fork so that , do not unnecessarily share these object . ok , so big takeaway here be , see that close a file handle or file descriptor inside the child do not affect the parent ( these thing be reference count ) and secondly that the kernel object , maintain"
      ],
      "lecture 22-Q08": [
        "ok so anything else , really want to say hit just that but here be , file , exact call over here , can see that , be use thing like exact v all the kind of stuff that , have see inside cs two forty one oh yes and one last thing from today 's lecture hey look at this , after , have make , pipe inside the child let , remember to close the unused part of the pipe so the child only need the right end of , first pipe so let , close the meat end and similarly first a bit out in standard error , only need the the , do not need the read end of these pipe , be go to be write into , so let , go to close these as well right so great and that be the beginning of"
      ],
      "lecture 23-Q01": [
        "testing , testing ... right , ok . welcome to the next lecture . , want , to think about how , may actually write the c library . ok so maybe , do not like the license of glibc maybe , want to write a library that be a lot small or simple so how can , actually wrap the low level posix interface that the kernel give , an actually implement the c - level object like the file so let , i would go at this right now , know about fopen where i can pass in a filename k blah blah blah but there be also function call fdopen where i can just pass in an exist file descriptor so if , write f d open , would be pretty easy to then also implement f open which just call open and then , can delegate the rest of the work to this ft open call right so here be what , need to do then , be go to be give a file descriptor and , want to create one of these file object now normally these be opaque structure normally",
        ", be actually try to write the c library so let , have a go at write the kind of simple version that , may want and that be what , have do up here ok so this be what i want to put inside , file struct i need to store several thing first of all yeah i definitely need to know about the low level file descriptor that , be go to need when actually call read and write secondly i want to have some kind of buffer and the purpose of , buffer be to actually reduce the number of time that , be go to call read or write so if , give , some byte to write out by default , be not go to be the center , be simply go to append , into some space into some memory and so that be the purpose of , buffer now i need to keep track of how large , buffer be so that be the purpose of of , capacity the size of , buffer",
        "of byte in , buffer that , be currently use so maybe , will be lucky maybe then , get from malloc will all be zero , out but that be not guarantee and be unlikely if , be use malloc in a long running program where malloc may reuse some memory that have be use early so let , fix , program and actually make sure that , set this size equal to zero ok so this may be sufficient for a minimal implementation of the c library in practice , may want to do more than this so for example right now , be not , be currently not make use of the mode hint about how this file descriptor go to be use whether , want to use , for reading or writing or both secondly more performant version of , implementation here may actually keep track"
      ],
      "lecture 23-Q02": [
        "ok right so , want to send stuff to a file do , ok well remember that , be actually write this and , have define , what this file structure look like this be a reason , be do this be to try to model how the c library work and to think about the kind of buffering that , may do ok so , can look at what effort be suppose to do be suppose to be put s which mean send all of these byte plus a newline and rather than just send , to standard out , want to send , to this particular file so once , have get this work , will be easy for , to implement put ( ) because , can just implement that in term of call fput ( ) but will tell , to use standard up first file ok so what be , plan by default , do not want to call right instead remember , be try to buffer or this information so let , just copy the byte to the"
      ],
      "lecture 23-Q03": [
        "ok so let , stop think about implement the c library and instead get the stack and instead think about actually work with real datum now , could store a whole lot of datum use scan f and printf etc but what about the day that , decide to work with binary datum ok so with binary datum there be lot of advantage the most one be that , be quick to read in and also , take up less space so let , have to think about that let , actually consider word example where , want to work with some three d datum for example suppose , be capture lidar datum from try to debug , , self drive car that kind of keep on crash maybe , be a bad machine learn problem but maybe , be just bad datum so , want a quick way of be able to store this data in fact , have get a point cloud and each point then have position",
        ", can start read and write , point cloud datum so how can , do this right how can , load read , point cloud datum well the most cross platform way of do this be to use the c library and , have get something here call fread and fwrite and , behave a little bit like calloc in the sense that , can specify the size of each item and then the number of item the so , could if , wish specify that the size be just one bite and then if , do that then the number of item end up be equal to the number of byte that , 'd like to load in , case however , can actually use the size of , struct element and then the number of item will",
        "ok so let , have a look at this right so here be some datum that i save early ok inside a file call point dot dat and at least f open so great now i get to file handle and , be just go to open , for reading so , first plan be to the very first thing i want to store inside this file be the actual number of point that be go to represent ok so let , directly read into , integer here there be so , be go to give a fread place to storage result and i need to tell , what what , 'd like so ok i want to please read size of that data field so size of num point i can either give size of the variable name here or i could give , the type of just int so size of num point there , go and that will evaluate to save four byte on this particular"
      ],
      "lecture 23-Q04": [
        "ok right so how do , read half a file ? right , so let , go . well first of all let , open the file handle so will do this all at the c library level ok and next time , write a piece of python code or c++ code realize that many of those function actually ultimately write use the c library as kind of intermediary between the python code that , write and the actual kind of kernel level call like open etc ok so , want to fopen this file name and ok and , want to open , for read now good code would actually check to see if that fail so if that be equal to null let , do something but , be not go to write but what , do there right now that be , return something depend on on how this specification be for this method ok so , have successfully manage to open , now ,",
        "that will need the length now , could , start but if , be not use or if , do not want to use that kind of posix level and , just want to stick with what the c library give , why do not , actually go to the end of the end of the file i find out where that be ok so let , call f seek and i want to get to the offset to the end ok so the wentz can be seek end and then let , find out that position ok so i want to find out the half of the file so , be go to say ok tell , where the current position be aftel on this file but divide that by half ok right and now i need to go back to the beginning so rewind be one way to do that or , could use f seek again to say ok at seek go to position zero offset zero and",
        "want to say just seek set treat that as an absolute position great so i know the size of the first half and i remember to go back now i need to read or write that into some memory so great i need some memory at this point ok so let , get some memory be , result and , will say ok i do not need to set any of this memory to zero so let , just use malloc and how much memory i want ok i could have half however if i want to return , as a c string maybe that be not quite enough let , get back to the moment ok so will call every to say ok fread , be a far handle and i can say give , one item the size",
        "so what , forgot to do be to close , file right so , be finish with the file as soon as fread be finish case so inside here after this point i may call f close so , be go to finish that resource as soon as i do not need , anymore ok but i would also check the path of what happen if , fail so if fread fail if this have a return statement as well then i would want to make sure that , always end remember to close , file handle in both place so no matter what happen make sure , have close that resource and if i want to make sure that people do not use , file handle on accident anymore then i would reset , variable as well so ok if , can be null ok just as kind of good practice so that clear that"
      ],
      "lecture 23-Q05": [
        "oh i get a challenge for , let , go back and write flush for the case that , actually implement the c library oh how can , do this well this moment , be time for , to actually say to the system ok here be some bite so , would want to say ok hey write and inside , file i know the file descriptor so let , grab that the buffer be that i think , call , just buffer and the number of byte that be not go to be the buffer capacity instead , have , call , size ok so let , send those bite and then let , reset the amount of buffer that , be use so ok will set size back to zero ok so that be not too bad there , go uh right now if i want to possibly make this have a little"
      ],
      "lecture 24-Q03": [
        "in memory abc and a zero bite if , be ok and , take that caster character add one in other word , just calculate a pointer that now point to the b ok an , return that so if and when these two thread run , know that the first first one return a pointer to bc string and the second one print be xyz right what be the rest of the code to write so equal p thread join on thread a and grab the result and so in store that in there area code result ok so what what be go to be put inside this result so this line be go to wait be go to wait until , be able to join p thread so that mean , wait until functionary have finish at which point , set this result variable to be a pointer and , be"
      ],
      "lecture 24-Q04": [
        "ok so , be go to start head towards networking and for that , really do not need to understand how to work with error and how to print out error and how to discover when thing do not work so network be tricky because with thing do not work where , actually want to understand what , problem with the client or the server be there a problem in set up the connection and so deal with error become quite important area can be because of code area , have make but , also can be say because the client have finish the connection before the server have finish say everything , want to say unvoice versa ok so let , start talk about error that right so , want to put out some error ok so here be first way , have probably see thing like ok i can use p error to print an error to standard error and i can include piece of text here which get include along with",
        "a way to get just a simple string and this be , , can say store error and i can ask for a the string associate with a particular error number like one two three four five etc etc etc ok but perhaps , want to know what be actually just go wrong with , program and so if , want to find out the air associate with a recent system call guess what there be something call ever know urdu there , go so i could say please tell , the these string associate with the most recent system ever ok so in fact , could re implement pm so if , need to write kind of piero , , may do something like the following , may say ok so peer error i just want to print out to standard error cater to do and now will have"
      ],
      "lecture 28-Q01": [
        "can either pass in some space or , can pass in null and , will allocate , on on the heap in general then if , want to work with kind of path then , can use this constant which be actually part of the kernel but provide by the c library to assure that , c string be always of sufficient size right so now let , actually start work with directory , would be great if for example , could enumerate all file inside a directory and , can here be the kind of big idea that a directory be actually just a file but there be a couple of thing special about , first of all inside of file all , all , would find if , actually open ,"
      ],
      "lecture 29-Q03": [
        "ok let , try one more time use of undeclared identifier errno for aaron aurora right let , cheat use the ok include what , leave include errno on a mac oh of course errno dot h right so let , pull that in ok right ok so now ok that be look well and fprintf , need to call send to say i want , will send this to not standard out but standard error so let , send that to standard error ok so now when , run , say fail to open null bad",
        "print out a usage string here so let , let , improve this a little bit that say look if , do not give , one argument so , expect argc to be two then let , print out a little usage message here to standard error i will say usage percent s directory ok and , need the program name ok right and how about , new line ok so now , run , fail to open ok almost there , just do not actually quit so let , say exit with an error value at that point ok so now i want to return"
      ],
      "lecture 30-Q02": [
        "etc and , can try , to not just with angrave and root let , try , with a third user call potato bob so here be what , intend to do , be go to try to open a file and will try to open , will try to stat this particular file and will try to read the content so let , use stat to find out , size ok and then i can malloc some space be use every today to say right i want to read in that number of byte i do not need this to be a c string because i mean immediately go to call f right to output the content of the file another go to read in exactly the byte of the file and then",
        "to behave a bit like cat if , like ok so , be be a good citizen and close the resource as soon as i do not need , so , be call f close on the file handle and then free the memory as well ok so here be what , have get here be , secret file and , will notice that , secret file here be very secretive the only thing that , allow to do be read , and that be if , be the owner which be potato bob ok so of course route have privilege root can see everything so even though route be not potato bob root can always kind of read , ok but what about angrave ok so angrave let , see if , try to read secret dot text , get permission deny because everybody else"
      ],
      "lecture 30-Q05": [
        "complete bootable linux system and , will see in a future lecture how , can actually run this inside an emulator so , have get a complete operating system now be not a very big one so if i say say disk usage see a summary , see , be about fifty thousand fifty thousand megabyte let , check yeah fifty fifty megabyte so the whole thing be a tiny operating system just fifty meg right so , have mount , , can have a look around when i finish i want to unmount this how do i do that ok so now i can say , melt and , will say explore i so ok and now explore iso be back to , there be nothing inside there if there have be something inside there"
      ],
      "lecture 30-Q08": [
        "out of here right so let , suppose that someone have delete ls that , remove a whole lot of thing all be so let , suppose that someone have delete slash bin ls oh dear so how would , still list the content of , current directory well , could say echo star and that would allow , to see all of the current file and typically echo be actually build into the shell so even if there be no echo command , still stand a chance of run this this kind of trick be once use to rescue a satellite where someone have accidentally manage to delete most of the operating system from the satellite but , still have a"
      ],
      "lecture 31-Q04": [
        "the other side plus an alice as well here be why that , be necessarily over write a full forty byte and so if , be to look at the beginning of the file , would see this hello from the other side follow by a newline and alice ok but there , go great , have get two process communicate directly by overwrite the same piece of shared ram ok so will kind of get out of that let , actually how look to see if , update the file so if i do say hex dump of alice dot text pipe that into less than , do not see too much ok right so oops that be a little hard to read let , actually have a look at just text here , be , get to hello from the other side then there kind of the terminate c string character and then the"
      ],
      "lecture 32-Q03": [
        "another quick comment on this be that if , be work with audio then one millisecond ten millisecond may not be enough , can actually easily detect for example the difference in timing between an audio signal arrive in one here and another so , may not be satisfied with a round robin approach if , have near real time need of processing audio so with audio , would actually may consider kind of other high priority system scheduling be dead right so there be kind of the basic theory and operating system course can develop formula and talk about these kind of example model in detail in today 's real lennox world , do not"
      ],
      "lecture 32-Q04": [
        "ok so any scheduler to offer some kind of prioritization can suffer from starvation so that may be for example preventive short job first perhaps , have , have get a scheduler that be base on some kind of priority then the high priority job if , keep on arrive will never allow low priority job to run by the way when i say job that be the classic operating system description of process and item which actually need cpu time but , can , be sure generalize to the idea of this apply to individual thread insider multithreade program ok so anything that have some kind of prioritization can suffer from starvation right which schedule be appropriate for batch job well the answer here be , , depend be typically fast job , care about throughput so , may decide to use short job first for example , may decide"
      ],
      "lecture 33-Q02": [
        "on a port that pause be not immediately available for reuse in fact there be a time out of about two minute where the , can not simply start a new server listen on the same port ok so that be the default behavior for tcp under linux and other operating system , can actually change , behavior so that a new process can immediately listen on that port in fact , can set an option on , socket when , first create to say hey i do not need the timeout behavior and the reason this time at behavior exist be simply because packet may arrive late , could imagine that , finish , communication so now the server shutdown but for some reason packet be very slow arriving and , arrive at that port long after the"
      ],
      "lecture 34-Q01": [
        "a synchronous read so imagine , be pull all the byte for a video file i just want to get in say four gigabyte of datum as quickly as possible or for example , be start up the operating system or , be load an application , just want to move in as many byte as possible one after another or random so , have random read write access pattern where now , want to jump to jump around a file or jump between many different file and now the amount of datum , want per request be relatively small but now , have thousand of request per second but , want to handle be garbage collection so what do , do when , declare that particular block be available how do , store that and finally maybe , want to do some encryption so that if the device fall into a bad actor hand , do not actually have the private key to be able to decrypt the information on that and"
      ],
      "lecture 34-Q04": [
        "ok then there be also a version where , can send a signal use a specific thread as well so there be the peace roadkill variation which , may want to use any multithreade program ok now what about actually catch signal there be ok this several interesting thing can kind of know about this first of all , have see signal of which allow , to install a signal handler ok so one downside of signal be that , be exact behavior be not precisely specify and actually vary from operate system to auto operating system for example what should happen if , be in the middle of a signal handler and in other signal be be deliver be allow to be deliver , should , remain pende different operating system have interpret signal in different way secondly a signal be not actually"
      ],
      "lecture 37-Q02": [
        "a file and the size of , stat datum structure ok so one downside of that be that , do not control this particular struct and tomorrow depend on how lynn exchange this truck , may grow in size , also may have more field on what operating system compare to another operate system all those field may be put in a different order , get bad than that however because a compiler may choose to change the binary layout of a particular structure and in fact there can be pad byte so in simply write out all of the bike inside of struct not only , send the field that , want to , be also send out any by the information that happen to be in those unused pad byte which if , be"
      ],
      "lecture 38-Q01": [
        "hi welcome to lecture 38 , so let , get start right today , be go to do some review idea and also go into some operating system idea as well . so let , start with go all the way back to thread and ask why be the follow code threadsafe ok so let , have a look at , what be , do . right so , have get a function . , take a pointer to some memory , sleep for second and then , assume that there be a string of that memory . so , will cast that to say , expect to be a pointer to a character and , be go to put all that out as a string with a new line at the end . so nice simple function . now , what do , do down here ? so run method ( excuse , ) say what ? right . , be go to make a thread . there be , thread identifier data , represent an array . and so remember with an array , , can not change this variable to point to anything else . datum be the array ."
      ],
      "lecture 38-Q02": [
        "be part of the program that , only need during startup possibly , only need during shutdown there be go to part with a c library that , just do not care about those part of the stack for example that , do not need until , deep nest recursive function finally return etc etc etc so what , do care about be have enough memory such that these page , can exist inside ram if , do not have dave if , be a lot of stingy with , ram for process then , run into a big problem and that problem be call flash so now let , think about what happen let , say that every few nanosecond , be go to be need to touch all of these page so unfortunately , do not actually have enough ram today for to put a copy or to have all of this inside"
      ],
      "lecture 38-Q03": [
        "ok sir how could , be the celcom malik take the same amount of time well the answer be , depend , depend upon actually which operate system , be talk about and also actually just now talk about implementation choice base on implementation toy choice , will find inside bsd and linux so let , give , kind of two two explanation how this could possibly be true and first of all let , do the the bsd one here be what bsd say bsd say , know , want to be very security conscious and that in fact be go to be , guide principle that , want to make , secure operating system as possible so if a process have finish with a page of memory here then there could be important secret inside that memory for example maybe there be a public private key information inside there maybe there be a password that , type in"
      ]
    }
  }
}